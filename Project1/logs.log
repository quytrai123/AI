2025-09-02 17:20:20,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 17:20:20,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 17:20:20,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 17:20:20,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 17:24:00,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 17:24:00,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 17:24:00,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 17:24:00,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 18:41:50,418:INFO:PyCaret ClassificationExperiment
2025-09-02 18:41:50,418:INFO:Logging name: clf-default-name
2025-09-02 18:41:50,418:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-02 18:41:50,418:INFO:version 3.3.2
2025-09-02 18:41:50,418:INFO:Initializing setup()
2025-09-02 18:41:50,418:INFO:self.USI: c02d
2025-09-02 18:41:50,418:INFO:self._variable_keys: {'fold_groups_param', '_ml_usecase', 'X', 'idx', 'seed', 'y_test', 'y_train', 'y', '_available_plots', 'X_train', 'exp_id', 'gpu_param', 'html_param', 'gpu_n_jobs_param', 'exp_name_log', 'is_multiclass', 'data', 'pipeline', 'n_jobs_param', 'target_param', 'fold_generator', 'log_plots_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fix_imbalance', 'X_test', 'memory'}
2025-09-02 18:41:50,418:INFO:Checking environment
2025-09-02 18:41:50,418:INFO:python_version: 3.10.11
2025-09-02 18:41:50,418:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-09-02 18:41:50,418:INFO:machine: AMD64
2025-09-02 18:41:50,418:INFO:platform: Windows-10-10.0.19045-SP0
2025-09-02 18:41:50,421:INFO:Memory: svmem(total=8299257856, available=1391366144, percent=83.2, used=6907891712, free=1391366144)
2025-09-02 18:41:50,421:INFO:Physical Core: 2
2025-09-02 18:41:50,421:INFO:Logical Core: 4
2025-09-02 18:41:50,421:INFO:Checking libraries
2025-09-02 18:41:50,421:INFO:System:
2025-09-02 18:41:50,421:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-09-02 18:41:50,421:INFO:executable: c:\Users\nguye\AppData\Local\Programs\Python\Python310\python.exe
2025-09-02 18:41:50,421:INFO:   machine: Windows-10-10.0.19045-SP0
2025-09-02 18:41:50,421:INFO:PyCaret required dependencies:
2025-09-02 18:41:50,771:INFO:                 pip: 23.0.1
2025-09-02 18:41:50,771:INFO:          setuptools: 65.5.0
2025-09-02 18:41:50,771:INFO:             pycaret: 3.3.2
2025-09-02 18:41:50,771:INFO:             IPython: 8.37.0
2025-09-02 18:41:50,771:INFO:          ipywidgets: 8.1.7
2025-09-02 18:41:50,771:INFO:                tqdm: 4.67.1
2025-09-02 18:41:50,771:INFO:               numpy: 1.26.4
2025-09-02 18:41:50,771:INFO:              pandas: 2.1.4
2025-09-02 18:41:50,771:INFO:              jinja2: 3.1.6
2025-09-02 18:41:50,771:INFO:               scipy: 1.11.4
2025-09-02 18:41:50,771:INFO:              joblib: 1.3.2
2025-09-02 18:41:50,771:INFO:             sklearn: 1.4.2
2025-09-02 18:41:50,771:INFO:                pyod: 2.0.5
2025-09-02 18:41:50,771:INFO:            imblearn: 0.14.0
2025-09-02 18:41:50,771:INFO:   category_encoders: 2.7.0
2025-09-02 18:41:50,771:INFO:            lightgbm: 4.6.0
2025-09-02 18:41:50,771:INFO:               numba: 0.61.2
2025-09-02 18:41:50,771:INFO:            requests: 2.32.4
2025-09-02 18:41:50,771:INFO:          matplotlib: 3.7.5
2025-09-02 18:41:50,771:INFO:          scikitplot: 0.3.7
2025-09-02 18:41:50,771:INFO:         yellowbrick: 1.5
2025-09-02 18:41:50,771:INFO:              plotly: 6.3.0
2025-09-02 18:41:50,771:INFO:    plotly-resampler: Not installed
2025-09-02 18:41:50,771:INFO:             kaleido: 1.0.0
2025-09-02 18:41:50,771:INFO:           schemdraw: 0.15
2025-09-02 18:41:50,771:INFO:         statsmodels: 0.14.5
2025-09-02 18:41:50,771:INFO:              sktime: 0.26.0
2025-09-02 18:41:50,771:INFO:               tbats: 1.1.3
2025-09-02 18:41:50,771:INFO:            pmdarima: 2.0.4
2025-09-02 18:41:50,772:INFO:              psutil: 7.0.0
2025-09-02 18:41:50,772:INFO:          markupsafe: 3.0.2
2025-09-02 18:41:50,772:INFO:             pickle5: Not installed
2025-09-02 18:41:50,772:INFO:         cloudpickle: 3.1.1
2025-09-02 18:41:50,772:INFO:         deprecation: 2.1.0
2025-09-02 18:41:50,772:INFO:              xxhash: 3.5.0
2025-09-02 18:41:50,772:INFO:           wurlitzer: Not installed
2025-09-02 18:41:50,772:INFO:PyCaret optional dependencies:
2025-09-02 18:41:50,782:INFO:                shap: Not installed
2025-09-02 18:41:50,782:INFO:           interpret: Not installed
2025-09-02 18:41:50,782:INFO:                umap: Not installed
2025-09-02 18:41:50,782:INFO:     ydata_profiling: Not installed
2025-09-02 18:41:50,782:INFO:  explainerdashboard: Not installed
2025-09-02 18:41:50,782:INFO:             autoviz: Not installed
2025-09-02 18:41:50,782:INFO:           fairlearn: Not installed
2025-09-02 18:41:50,782:INFO:          deepchecks: Not installed
2025-09-02 18:41:50,782:INFO:             xgboost: Not installed
2025-09-02 18:41:50,782:INFO:            catboost: Not installed
2025-09-02 18:41:50,782:INFO:              kmodes: Not installed
2025-09-02 18:41:50,782:INFO:             mlxtend: Not installed
2025-09-02 18:41:50,782:INFO:       statsforecast: Not installed
2025-09-02 18:41:50,782:INFO:        tune_sklearn: Not installed
2025-09-02 18:41:50,782:INFO:                 ray: Not installed
2025-09-02 18:41:50,782:INFO:            hyperopt: Not installed
2025-09-02 18:41:50,783:INFO:              optuna: Not installed
2025-09-02 18:41:50,783:INFO:               skopt: Not installed
2025-09-02 18:41:50,783:INFO:              mlflow: Not installed
2025-09-02 18:41:50,783:INFO:              gradio: Not installed
2025-09-02 18:41:50,783:INFO:             fastapi: Not installed
2025-09-02 18:41:50,783:INFO:             uvicorn: Not installed
2025-09-02 18:41:50,783:INFO:              m2cgen: Not installed
2025-09-02 18:41:50,783:INFO:           evidently: Not installed
2025-09-02 18:41:50,783:INFO:               fugue: Not installed
2025-09-02 18:41:50,783:INFO:           streamlit: Not installed
2025-09-02 18:41:50,783:INFO:             prophet: Not installed
2025-09-02 18:41:50,783:INFO:None
2025-09-02 18:41:50,783:INFO:Set up data.
2025-09-02 18:41:50,792:INFO:Set up folding strategy.
2025-09-02 18:41:50,793:INFO:Set up train/test split.
2025-09-02 18:41:50,854:INFO:Set up index.
2025-09-02 18:41:50,854:INFO:Assigning column types.
2025-09-02 18:41:50,859:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-02 18:41:50,898:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:41:50,904:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:41:50,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:50,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,007:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:41:51,008:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:41:51,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,051:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-02 18:41:51,096:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:41:51,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,156:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:41:51,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,180:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-02 18:41:51,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,313:INFO:Preparing preprocessing pipeline...
2025-09-02 18:41:51,316:INFO:Set up label encoding.
2025-09-02 18:41:51,316:INFO:Set up simple imputation.
2025-09-02 18:41:51,317:INFO:Set up column name cleaning.
2025-09-02 18:41:51,354:INFO:Finished creating preprocessing pipeline.
2025-09-02 18:41:51,364:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nguye\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'conc...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-02 18:41:51,365:INFO:Creating final display dataframe.
2025-09-02 18:41:51,460:INFO:Setup _display_container:                     Description             Value
0                    Session id              2257
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              c02d
2025-09-02 18:41:51,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:41:51,607:INFO:setup() successfully completed in 1.19s...............
2025-09-02 18:43:46,450:INFO:PyCaret ClassificationExperiment
2025-09-02 18:43:46,450:INFO:Logging name: clf-default-name
2025-09-02 18:43:46,451:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-02 18:43:46,451:INFO:version 3.3.2
2025-09-02 18:43:46,451:INFO:Initializing setup()
2025-09-02 18:43:46,451:INFO:self.USI: c62a
2025-09-02 18:43:46,451:INFO:self._variable_keys: {'fold_groups_param', '_ml_usecase', 'X', 'idx', 'seed', 'y_test', 'y_train', 'y', '_available_plots', 'X_train', 'exp_id', 'gpu_param', 'html_param', 'gpu_n_jobs_param', 'exp_name_log', 'is_multiclass', 'data', 'pipeline', 'n_jobs_param', 'target_param', 'fold_generator', 'log_plots_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fix_imbalance', 'X_test', 'memory'}
2025-09-02 18:43:46,451:INFO:Checking environment
2025-09-02 18:43:46,451:INFO:python_version: 3.10.11
2025-09-02 18:43:46,451:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-09-02 18:43:46,451:INFO:machine: AMD64
2025-09-02 18:43:46,451:INFO:platform: Windows-10-10.0.19045-SP0
2025-09-02 18:43:46,453:INFO:Memory: svmem(total=8299257856, available=1376866304, percent=83.4, used=6922391552, free=1376866304)
2025-09-02 18:43:46,453:INFO:Physical Core: 2
2025-09-02 18:43:46,453:INFO:Logical Core: 4
2025-09-02 18:43:46,453:INFO:Checking libraries
2025-09-02 18:43:46,453:INFO:System:
2025-09-02 18:43:46,453:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-09-02 18:43:46,453:INFO:executable: c:\Users\nguye\AppData\Local\Programs\Python\Python310\python.exe
2025-09-02 18:43:46,453:INFO:   machine: Windows-10-10.0.19045-SP0
2025-09-02 18:43:46,453:INFO:PyCaret required dependencies:
2025-09-02 18:43:46,453:INFO:                 pip: 23.0.1
2025-09-02 18:43:46,453:INFO:          setuptools: 65.5.0
2025-09-02 18:43:46,454:INFO:             pycaret: 3.3.2
2025-09-02 18:43:46,454:INFO:             IPython: 8.37.0
2025-09-02 18:43:46,454:INFO:          ipywidgets: 8.1.7
2025-09-02 18:43:46,454:INFO:                tqdm: 4.67.1
2025-09-02 18:43:46,454:INFO:               numpy: 1.26.4
2025-09-02 18:43:46,454:INFO:              pandas: 2.1.4
2025-09-02 18:43:46,454:INFO:              jinja2: 3.1.6
2025-09-02 18:43:46,454:INFO:               scipy: 1.11.4
2025-09-02 18:43:46,454:INFO:              joblib: 1.3.2
2025-09-02 18:43:46,454:INFO:             sklearn: 1.4.2
2025-09-02 18:43:46,454:INFO:                pyod: 2.0.5
2025-09-02 18:43:46,454:INFO:            imblearn: 0.14.0
2025-09-02 18:43:46,454:INFO:   category_encoders: 2.7.0
2025-09-02 18:43:46,454:INFO:            lightgbm: 4.6.0
2025-09-02 18:43:46,454:INFO:               numba: 0.61.2
2025-09-02 18:43:46,454:INFO:            requests: 2.32.4
2025-09-02 18:43:46,454:INFO:          matplotlib: 3.7.5
2025-09-02 18:43:46,454:INFO:          scikitplot: 0.3.7
2025-09-02 18:43:46,454:INFO:         yellowbrick: 1.5
2025-09-02 18:43:46,454:INFO:              plotly: 6.3.0
2025-09-02 18:43:46,454:INFO:    plotly-resampler: Not installed
2025-09-02 18:43:46,454:INFO:             kaleido: 1.0.0
2025-09-02 18:43:46,454:INFO:           schemdraw: 0.15
2025-09-02 18:43:46,454:INFO:         statsmodels: 0.14.5
2025-09-02 18:43:46,454:INFO:              sktime: 0.26.0
2025-09-02 18:43:46,454:INFO:               tbats: 1.1.3
2025-09-02 18:43:46,454:INFO:            pmdarima: 2.0.4
2025-09-02 18:43:46,454:INFO:              psutil: 7.0.0
2025-09-02 18:43:46,454:INFO:          markupsafe: 3.0.2
2025-09-02 18:43:46,454:INFO:             pickle5: Not installed
2025-09-02 18:43:46,454:INFO:         cloudpickle: 3.1.1
2025-09-02 18:43:46,454:INFO:         deprecation: 2.1.0
2025-09-02 18:43:46,454:INFO:              xxhash: 3.5.0
2025-09-02 18:43:46,454:INFO:           wurlitzer: Not installed
2025-09-02 18:43:46,454:INFO:PyCaret optional dependencies:
2025-09-02 18:43:46,454:INFO:                shap: Not installed
2025-09-02 18:43:46,454:INFO:           interpret: Not installed
2025-09-02 18:43:46,454:INFO:                umap: Not installed
2025-09-02 18:43:46,454:INFO:     ydata_profiling: Not installed
2025-09-02 18:43:46,454:INFO:  explainerdashboard: Not installed
2025-09-02 18:43:46,454:INFO:             autoviz: Not installed
2025-09-02 18:43:46,454:INFO:           fairlearn: Not installed
2025-09-02 18:43:46,455:INFO:          deepchecks: Not installed
2025-09-02 18:43:46,455:INFO:             xgboost: Not installed
2025-09-02 18:43:46,455:INFO:            catboost: Not installed
2025-09-02 18:43:46,455:INFO:              kmodes: Not installed
2025-09-02 18:43:46,455:INFO:             mlxtend: Not installed
2025-09-02 18:43:46,455:INFO:       statsforecast: Not installed
2025-09-02 18:43:46,455:INFO:        tune_sklearn: Not installed
2025-09-02 18:43:46,455:INFO:                 ray: Not installed
2025-09-02 18:43:46,455:INFO:            hyperopt: Not installed
2025-09-02 18:43:46,455:INFO:              optuna: Not installed
2025-09-02 18:43:46,455:INFO:               skopt: Not installed
2025-09-02 18:43:46,455:INFO:              mlflow: Not installed
2025-09-02 18:43:46,455:INFO:              gradio: Not installed
2025-09-02 18:43:46,455:INFO:             fastapi: Not installed
2025-09-02 18:43:46,455:INFO:             uvicorn: Not installed
2025-09-02 18:43:46,455:INFO:              m2cgen: Not installed
2025-09-02 18:43:46,455:INFO:           evidently: Not installed
2025-09-02 18:43:46,455:INFO:               fugue: Not installed
2025-09-02 18:43:46,455:INFO:           streamlit: Not installed
2025-09-02 18:43:46,455:INFO:             prophet: Not installed
2025-09-02 18:43:46,455:INFO:None
2025-09-02 18:43:46,455:INFO:Set up data.
2025-09-02 18:43:46,461:INFO:Set up folding strategy.
2025-09-02 18:43:46,461:INFO:Set up train/test split.
2025-09-02 18:43:46,467:INFO:Set up index.
2025-09-02 18:43:46,467:INFO:Assigning column types.
2025-09-02 18:43:46,471:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-02 18:43:46,510:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:43:46,511:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:43:46,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:43:46,572:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:43:46,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,599:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-02 18:43:46,637:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:43:46,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:43:46,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,720:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-02 18:43:46,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:46,839:INFO:Preparing preprocessing pipeline...
2025-09-02 18:43:46,840:INFO:Set up label encoding.
2025-09-02 18:43:46,840:INFO:Set up simple imputation.
2025-09-02 18:43:46,841:INFO:Set up column name cleaning.
2025-09-02 18:43:46,865:INFO:Finished creating preprocessing pipeline.
2025-09-02 18:43:46,869:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nguye\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'conc...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-02 18:43:46,869:INFO:Creating final display dataframe.
2025-09-02 18:43:46,960:INFO:Setup _display_container:                     Description             Value
0                    Session id              1912
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              c62a
2025-09-02 18:43:47,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:47,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:47,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:47,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:43:47,165:INFO:setup() successfully completed in 0.72s...............
2025-09-02 18:43:47,166:INFO:Initializing compare_models()
2025-09-02 18:43:47,167:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-02 18:43:47,167:INFO:Checking exceptions
2025-09-02 18:43:47,170:INFO:Preparing display monitor
2025-09-02 18:43:47,197:INFO:Initializing Logistic Regression
2025-09-02 18:43:47,197:INFO:Total runtime is 0.0 minutes
2025-09-02 18:43:47,203:INFO:SubProcess create_model() called ==================================
2025-09-02 18:43:47,203:INFO:Initializing create_model()
2025-09-02 18:43:47,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:43:47,204:INFO:Checking exceptions
2025-09-02 18:43:47,204:INFO:Importing libraries
2025-09-02 18:43:47,204:INFO:Copying training dataset
2025-09-02 18:43:47,214:INFO:Defining folds
2025-09-02 18:43:47,214:INFO:Declaring metric variables
2025-09-02 18:43:47,219:INFO:Importing untrained model
2025-09-02 18:43:47,235:INFO:Logistic Regression Imported successfully
2025-09-02 18:43:47,247:INFO:Starting cross validation
2025-09-02 18:43:47,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:43:53,295:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:43:53,295:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:43:53,296:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:43:53,298:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:43:53,333:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,338:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,341:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:43:53,731:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:43:53,735:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:43:53,744:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,744:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:43:53,747:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,749:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,750:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,751:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,753:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,754:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,756:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,761:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,762:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,765:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,769:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,897:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:43:53,908:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:43:53,910:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,912:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,914:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,920:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,927:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,929:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:53,934:INFO:Calculating mean and std
2025-09-02 18:43:53,935:INFO:Creating metrics dataframe
2025-09-02 18:43:53,938:INFO:Uploading results into container
2025-09-02 18:43:53,938:INFO:Uploading model into container now
2025-09-02 18:43:53,939:INFO:_master_model_container: 1
2025-09-02 18:43:53,939:INFO:_display_container: 2
2025-09-02 18:43:53,939:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1912, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-02 18:43:53,939:INFO:create_model() successfully completed......................................
2025-09-02 18:43:54,168:INFO:SubProcess create_model() end ==================================
2025-09-02 18:43:54,168:INFO:Creating metrics dataframe
2025-09-02 18:43:54,178:INFO:Initializing K Neighbors Classifier
2025-09-02 18:43:54,178:INFO:Total runtime is 0.11635821262995402 minutes
2025-09-02 18:43:54,183:INFO:SubProcess create_model() called ==================================
2025-09-02 18:43:54,184:INFO:Initializing create_model()
2025-09-02 18:43:54,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:43:54,184:INFO:Checking exceptions
2025-09-02 18:43:54,185:INFO:Importing libraries
2025-09-02 18:43:54,185:INFO:Copying training dataset
2025-09-02 18:43:54,203:INFO:Defining folds
2025-09-02 18:43:54,204:INFO:Declaring metric variables
2025-09-02 18:43:54,213:INFO:Importing untrained model
2025-09-02 18:43:54,220:INFO:K Neighbors Classifier Imported successfully
2025-09-02 18:43:54,232:INFO:Starting cross validation
2025-09-02 18:43:54,234:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:43:54,412:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,416:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,417:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,419:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,419:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,420:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,426:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,439:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,570:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,580:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,588:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,618:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,621:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,630:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,635:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,648:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,665:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,668:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,681:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,684:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,695:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,701:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,713:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,716:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,718:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,726:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:54,736:INFO:Calculating mean and std
2025-09-02 18:43:54,737:INFO:Creating metrics dataframe
2025-09-02 18:43:54,741:INFO:Uploading results into container
2025-09-02 18:43:54,742:INFO:Uploading model into container now
2025-09-02 18:43:54,742:INFO:_master_model_container: 2
2025-09-02 18:43:54,742:INFO:_display_container: 2
2025-09-02 18:43:54,743:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-02 18:43:54,743:INFO:create_model() successfully completed......................................
2025-09-02 18:43:54,959:INFO:SubProcess create_model() end ==================================
2025-09-02 18:43:54,959:INFO:Creating metrics dataframe
2025-09-02 18:43:54,996:INFO:Initializing Naive Bayes
2025-09-02 18:43:54,996:INFO:Total runtime is 0.1299892505009969 minutes
2025-09-02 18:43:55,010:INFO:SubProcess create_model() called ==================================
2025-09-02 18:43:55,011:INFO:Initializing create_model()
2025-09-02 18:43:55,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:43:55,011:INFO:Checking exceptions
2025-09-02 18:43:55,011:INFO:Importing libraries
2025-09-02 18:43:55,011:INFO:Copying training dataset
2025-09-02 18:43:55,029:INFO:Defining folds
2025-09-02 18:43:55,029:INFO:Declaring metric variables
2025-09-02 18:43:55,034:INFO:Importing untrained model
2025-09-02 18:43:55,042:INFO:Naive Bayes Imported successfully
2025-09-02 18:43:55,069:INFO:Starting cross validation
2025-09-02 18:43:55,071:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:43:55,115:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,119:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,124:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,124:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,125:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,127:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,128:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,129:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,132:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,133:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,147:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,152:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,164:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,168:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,172:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,175:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,175:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,179:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,179:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,183:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,183:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,209:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,214:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,216:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,217:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,228:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,232:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,235:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,250:INFO:Calculating mean and std
2025-09-02 18:43:55,251:INFO:Creating metrics dataframe
2025-09-02 18:43:55,259:INFO:Uploading results into container
2025-09-02 18:43:55,260:INFO:Uploading model into container now
2025-09-02 18:43:55,260:INFO:_master_model_container: 3
2025-09-02 18:43:55,261:INFO:_display_container: 2
2025-09-02 18:43:55,261:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-02 18:43:55,261:INFO:create_model() successfully completed......................................
2025-09-02 18:43:55,440:INFO:SubProcess create_model() end ==================================
2025-09-02 18:43:55,440:INFO:Creating metrics dataframe
2025-09-02 18:43:55,447:INFO:Initializing Decision Tree Classifier
2025-09-02 18:43:55,447:INFO:Total runtime is 0.1374975919723511 minutes
2025-09-02 18:43:55,452:INFO:SubProcess create_model() called ==================================
2025-09-02 18:43:55,452:INFO:Initializing create_model()
2025-09-02 18:43:55,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:43:55,452:INFO:Checking exceptions
2025-09-02 18:43:55,453:INFO:Importing libraries
2025-09-02 18:43:55,453:INFO:Copying training dataset
2025-09-02 18:43:55,460:INFO:Defining folds
2025-09-02 18:43:55,460:INFO:Declaring metric variables
2025-09-02 18:43:55,466:INFO:Importing untrained model
2025-09-02 18:43:55,473:INFO:Decision Tree Classifier Imported successfully
2025-09-02 18:43:55,480:INFO:Starting cross validation
2025-09-02 18:43:55,482:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:43:55,536:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,540:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,544:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,548:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,551:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,552:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,560:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,560:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,560:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,564:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,573:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,601:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,609:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,610:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,612:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,612:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,616:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,629:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,633:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,633:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,638:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,642:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,657:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,658:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,660:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,663:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,672:INFO:Calculating mean and std
2025-09-02 18:43:55,673:INFO:Creating metrics dataframe
2025-09-02 18:43:55,676:INFO:Uploading results into container
2025-09-02 18:43:55,677:INFO:Uploading model into container now
2025-09-02 18:43:55,677:INFO:_master_model_container: 4
2025-09-02 18:43:55,678:INFO:_display_container: 2
2025-09-02 18:43:55,678:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1912, splitter='best')
2025-09-02 18:43:55,678:INFO:create_model() successfully completed......................................
2025-09-02 18:43:55,833:INFO:SubProcess create_model() end ==================================
2025-09-02 18:43:55,833:INFO:Creating metrics dataframe
2025-09-02 18:43:55,839:INFO:Initializing SVM - Linear Kernel
2025-09-02 18:43:55,840:INFO:Total runtime is 0.14404592514038086 minutes
2025-09-02 18:43:55,844:INFO:SubProcess create_model() called ==================================
2025-09-02 18:43:55,844:INFO:Initializing create_model()
2025-09-02 18:43:55,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:43:55,845:INFO:Checking exceptions
2025-09-02 18:43:55,845:INFO:Importing libraries
2025-09-02 18:43:55,845:INFO:Copying training dataset
2025-09-02 18:43:55,850:INFO:Defining folds
2025-09-02 18:43:55,850:INFO:Declaring metric variables
2025-09-02 18:43:55,854:INFO:Importing untrained model
2025-09-02 18:43:55,860:INFO:SVM - Linear Kernel Imported successfully
2025-09-02 18:43:55,866:INFO:Starting cross validation
2025-09-02 18:43:55,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:43:55,922:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,924:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,926:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,927:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,928:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,929:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,930:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,931:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,934:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,938:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,939:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,947:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,977:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,980:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,982:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,987:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,987:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,990:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:55,994:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,005:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,009:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,012:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,027:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,029:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,030:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,032:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,033:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,036:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,045:INFO:Calculating mean and std
2025-09-02 18:43:56,046:INFO:Creating metrics dataframe
2025-09-02 18:43:56,048:INFO:Uploading results into container
2025-09-02 18:43:56,048:INFO:Uploading model into container now
2025-09-02 18:43:56,049:INFO:_master_model_container: 5
2025-09-02 18:43:56,049:INFO:_display_container: 2
2025-09-02 18:43:56,049:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1912, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-02 18:43:56,049:INFO:create_model() successfully completed......................................
2025-09-02 18:43:56,217:INFO:SubProcess create_model() end ==================================
2025-09-02 18:43:56,217:INFO:Creating metrics dataframe
2025-09-02 18:43:56,225:INFO:Initializing Ridge Classifier
2025-09-02 18:43:56,225:INFO:Total runtime is 0.15046929915746055 minutes
2025-09-02 18:43:56,228:INFO:SubProcess create_model() called ==================================
2025-09-02 18:43:56,229:INFO:Initializing create_model()
2025-09-02 18:43:56,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:43:56,229:INFO:Checking exceptions
2025-09-02 18:43:56,230:INFO:Importing libraries
2025-09-02 18:43:56,230:INFO:Copying training dataset
2025-09-02 18:43:56,237:INFO:Defining folds
2025-09-02 18:43:56,237:INFO:Declaring metric variables
2025-09-02 18:43:56,240:INFO:Importing untrained model
2025-09-02 18:43:56,246:INFO:Ridge Classifier Imported successfully
2025-09-02 18:43:56,256:INFO:Starting cross validation
2025-09-02 18:43:56,257:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:43:56,316:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.51029e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:43:56,330:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,331:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,331:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,331:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,334:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,335:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,336:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,338:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,339:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,339:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,340:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,342:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,362:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.53455e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:43:56,362:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.54617e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:43:56,366:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.4697e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:43:56,377:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.93065e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:43:56,378:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,381:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,382:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,385:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,388:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,389:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,410:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,414:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,415:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.65287e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:43:56,415:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,419:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.62384e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:43:56,419:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,420:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,423:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,429:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,432:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,432:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,439:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,440:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,443:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:56,454:INFO:Calculating mean and std
2025-09-02 18:43:56,456:INFO:Creating metrics dataframe
2025-09-02 18:43:56,458:INFO:Uploading results into container
2025-09-02 18:43:56,459:INFO:Uploading model into container now
2025-09-02 18:43:56,459:INFO:_master_model_container: 6
2025-09-02 18:43:56,460:INFO:_display_container: 2
2025-09-02 18:43:56,463:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1912, solver='auto',
                tol=0.0001)
2025-09-02 18:43:56,463:INFO:create_model() successfully completed......................................
2025-09-02 18:43:56,648:INFO:SubProcess create_model() end ==================================
2025-09-02 18:43:56,648:INFO:Creating metrics dataframe
2025-09-02 18:43:56,659:INFO:Initializing Random Forest Classifier
2025-09-02 18:43:56,659:INFO:Total runtime is 0.1576964060465495 minutes
2025-09-02 18:43:56,663:INFO:SubProcess create_model() called ==================================
2025-09-02 18:43:56,663:INFO:Initializing create_model()
2025-09-02 18:43:56,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:43:56,663:INFO:Checking exceptions
2025-09-02 18:43:56,663:INFO:Importing libraries
2025-09-02 18:43:56,663:INFO:Copying training dataset
2025-09-02 18:43:56,672:INFO:Defining folds
2025-09-02 18:43:56,673:INFO:Declaring metric variables
2025-09-02 18:43:56,678:INFO:Importing untrained model
2025-09-02 18:43:56,684:INFO:Random Forest Classifier Imported successfully
2025-09-02 18:43:56,692:INFO:Starting cross validation
2025-09-02 18:43:56,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:43:57,040:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,042:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,045:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,050:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,061:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,072:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,072:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,078:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,091:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,242:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,244:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,248:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,552:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,555:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,559:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,594:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,600:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,604:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,610:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,613:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,620:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,779:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,785:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,788:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,902:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,905:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,907:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,930:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,933:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,935:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:57,942:INFO:Calculating mean and std
2025-09-02 18:43:57,943:INFO:Creating metrics dataframe
2025-09-02 18:43:57,945:INFO:Uploading results into container
2025-09-02 18:43:57,945:INFO:Uploading model into container now
2025-09-02 18:43:57,946:INFO:_master_model_container: 7
2025-09-02 18:43:57,948:INFO:_display_container: 2
2025-09-02 18:43:57,949:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1912, verbose=0,
                       warm_start=False)
2025-09-02 18:43:57,949:INFO:create_model() successfully completed......................................
2025-09-02 18:43:58,121:INFO:SubProcess create_model() end ==================================
2025-09-02 18:43:58,121:INFO:Creating metrics dataframe
2025-09-02 18:43:58,127:INFO:Initializing Quadratic Discriminant Analysis
2025-09-02 18:43:58,127:INFO:Total runtime is 0.18216069142023725 minutes
2025-09-02 18:43:58,133:INFO:SubProcess create_model() called ==================================
2025-09-02 18:43:58,134:INFO:Initializing create_model()
2025-09-02 18:43:58,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:43:58,134:INFO:Checking exceptions
2025-09-02 18:43:58,134:INFO:Importing libraries
2025-09-02 18:43:58,134:INFO:Copying training dataset
2025-09-02 18:43:58,140:INFO:Defining folds
2025-09-02 18:43:58,140:INFO:Declaring metric variables
2025-09-02 18:43:58,142:INFO:Importing untrained model
2025-09-02 18:43:58,149:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-02 18:43:58,159:INFO:Starting cross validation
2025-09-02 18:43:58,161:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:43:58,221:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,222:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,224:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,225:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,225:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,226:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,228:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,228:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,232:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,237:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,272:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,272:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,274:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,275:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,275:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,277:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,278:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,278:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,283:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,298:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,302:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,373:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,529:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,542:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,542:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,550:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,550:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,553:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:58,586:INFO:Calculating mean and std
2025-09-02 18:43:58,608:INFO:Creating metrics dataframe
2025-09-02 18:43:58,614:INFO:Uploading results into container
2025-09-02 18:43:58,616:INFO:Uploading model into container now
2025-09-02 18:43:58,617:INFO:_master_model_container: 8
2025-09-02 18:43:58,617:INFO:_display_container: 2
2025-09-02 18:43:58,617:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-02 18:43:58,617:INFO:create_model() successfully completed......................................
2025-09-02 18:43:58,864:INFO:SubProcess create_model() end ==================================
2025-09-02 18:43:58,864:INFO:Creating metrics dataframe
2025-09-02 18:43:58,872:INFO:Initializing Ada Boost Classifier
2025-09-02 18:43:58,872:INFO:Total runtime is 0.19458961884180706 minutes
2025-09-02 18:43:58,876:INFO:SubProcess create_model() called ==================================
2025-09-02 18:43:58,877:INFO:Initializing create_model()
2025-09-02 18:43:58,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:43:58,878:INFO:Checking exceptions
2025-09-02 18:43:58,878:INFO:Importing libraries
2025-09-02 18:43:58,878:INFO:Copying training dataset
2025-09-02 18:43:58,888:INFO:Defining folds
2025-09-02 18:43:58,888:INFO:Declaring metric variables
2025-09-02 18:43:58,895:INFO:Importing untrained model
2025-09-02 18:43:58,903:INFO:Ada Boost Classifier Imported successfully
2025-09-02 18:43:58,909:INFO:Starting cross validation
2025-09-02 18:43:58,912:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:43:58,970:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:43:58,983:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:43:58,983:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:43:59,187:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,190:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,195:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,207:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,212:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,216:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,218:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,218:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,220:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:43:59,221:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,222:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,224:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,246:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:43:59,254:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:43:59,270:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:43:59,450:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,453:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,456:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,481:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,482:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:43:59,484:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,486:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,492:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,496:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,499:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,502:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,505:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,507:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:43:59,510:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,705:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,710:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,714:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,726:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,731:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:43:59,738:INFO:Calculating mean and std
2025-09-02 18:43:59,739:INFO:Creating metrics dataframe
2025-09-02 18:43:59,742:INFO:Uploading results into container
2025-09-02 18:43:59,743:INFO:Uploading model into container now
2025-09-02 18:43:59,744:INFO:_master_model_container: 9
2025-09-02 18:43:59,744:INFO:_display_container: 2
2025-09-02 18:43:59,744:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1912)
2025-09-02 18:43:59,744:INFO:create_model() successfully completed......................................
2025-09-02 18:43:59,989:INFO:SubProcess create_model() end ==================================
2025-09-02 18:43:59,989:INFO:Creating metrics dataframe
2025-09-02 18:43:59,999:INFO:Initializing Gradient Boosting Classifier
2025-09-02 18:43:59,999:INFO:Total runtime is 0.21336377461751305 minutes
2025-09-02 18:44:00,004:INFO:SubProcess create_model() called ==================================
2025-09-02 18:44:00,007:INFO:Initializing create_model()
2025-09-02 18:44:00,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:44:00,010:INFO:Checking exceptions
2025-09-02 18:44:00,012:INFO:Importing libraries
2025-09-02 18:44:00,012:INFO:Copying training dataset
2025-09-02 18:44:00,023:INFO:Defining folds
2025-09-02 18:44:00,024:INFO:Declaring metric variables
2025-09-02 18:44:00,031:INFO:Importing untrained model
2025-09-02 18:44:00,035:INFO:Gradient Boosting Classifier Imported successfully
2025-09-02 18:44:00,043:INFO:Starting cross validation
2025-09-02 18:44:00,043:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:44:00,654:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,659:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,660:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,663:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,663:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,666:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,698:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,704:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,705:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,710:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,710:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:00,714:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,611:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,614:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,617:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,696:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,699:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,704:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,712:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,724:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,731:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,735:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:01,740:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,191:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,193:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,195:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,231:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,232:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,233:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,253:INFO:Calculating mean and std
2025-09-02 18:44:02,253:INFO:Creating metrics dataframe
2025-09-02 18:44:02,255:INFO:Uploading results into container
2025-09-02 18:44:02,255:INFO:Uploading model into container now
2025-09-02 18:44:02,256:INFO:_master_model_container: 10
2025-09-02 18:44:02,256:INFO:_display_container: 2
2025-09-02 18:44:02,257:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1912, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-02 18:44:02,258:INFO:create_model() successfully completed......................................
2025-09-02 18:44:02,443:INFO:SubProcess create_model() end ==================================
2025-09-02 18:44:02,443:INFO:Creating metrics dataframe
2025-09-02 18:44:02,456:INFO:Initializing Linear Discriminant Analysis
2025-09-02 18:44:02,456:INFO:Total runtime is 0.2543210506439209 minutes
2025-09-02 18:44:02,460:INFO:SubProcess create_model() called ==================================
2025-09-02 18:44:02,460:INFO:Initializing create_model()
2025-09-02 18:44:02,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:44:02,462:INFO:Checking exceptions
2025-09-02 18:44:02,462:INFO:Importing libraries
2025-09-02 18:44:02,462:INFO:Copying training dataset
2025-09-02 18:44:02,475:INFO:Defining folds
2025-09-02 18:44:02,475:INFO:Declaring metric variables
2025-09-02 18:44:02,480:INFO:Importing untrained model
2025-09-02 18:44:02,498:INFO:Linear Discriminant Analysis Imported successfully
2025-09-02 18:44:02,514:INFO:Starting cross validation
2025-09-02 18:44:02,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:44:02,576:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,580:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,582:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,583:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,585:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,590:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,590:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,594:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,594:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,598:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,609:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,613:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,632:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,638:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,642:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,644:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,647:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,657:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,665:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,679:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,682:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,683:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,688:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,689:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,694:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,706:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,708:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,710:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:02,720:INFO:Calculating mean and std
2025-09-02 18:44:02,721:INFO:Creating metrics dataframe
2025-09-02 18:44:02,725:INFO:Uploading results into container
2025-09-02 18:44:02,726:INFO:Uploading model into container now
2025-09-02 18:44:02,726:INFO:_master_model_container: 11
2025-09-02 18:44:02,726:INFO:_display_container: 2
2025-09-02 18:44:02,726:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-02 18:44:02,726:INFO:create_model() successfully completed......................................
2025-09-02 18:44:02,914:INFO:SubProcess create_model() end ==================================
2025-09-02 18:44:02,914:INFO:Creating metrics dataframe
2025-09-02 18:44:02,923:INFO:Initializing Extra Trees Classifier
2025-09-02 18:44:02,923:INFO:Total runtime is 0.26209800640741987 minutes
2025-09-02 18:44:02,927:INFO:SubProcess create_model() called ==================================
2025-09-02 18:44:02,927:INFO:Initializing create_model()
2025-09-02 18:44:02,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:44:02,927:INFO:Checking exceptions
2025-09-02 18:44:02,927:INFO:Importing libraries
2025-09-02 18:44:02,927:INFO:Copying training dataset
2025-09-02 18:44:02,934:INFO:Defining folds
2025-09-02 18:44:02,935:INFO:Declaring metric variables
2025-09-02 18:44:02,942:INFO:Importing untrained model
2025-09-02 18:44:02,946:INFO:Extra Trees Classifier Imported successfully
2025-09-02 18:44:02,957:INFO:Starting cross validation
2025-09-02 18:44:02,959:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:44:03,242:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,244:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,245:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,260:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,263:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,274:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,318:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,322:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,325:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,343:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,348:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,353:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,554:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,555:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,557:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,560:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,570:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,576:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,660:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,662:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,665:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,667:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,669:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,670:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,818:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,820:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,822:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,833:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,836:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,841:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:03,856:INFO:Calculating mean and std
2025-09-02 18:44:03,858:INFO:Creating metrics dataframe
2025-09-02 18:44:03,861:INFO:Uploading results into container
2025-09-02 18:44:03,862:INFO:Uploading model into container now
2025-09-02 18:44:03,867:INFO:_master_model_container: 12
2025-09-02 18:44:03,868:INFO:_display_container: 2
2025-09-02 18:44:03,868:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1912, verbose=0,
                     warm_start=False)
2025-09-02 18:44:03,869:INFO:create_model() successfully completed......................................
2025-09-02 18:44:04,093:INFO:SubProcess create_model() end ==================================
2025-09-02 18:44:04,093:INFO:Creating metrics dataframe
2025-09-02 18:44:04,106:INFO:Initializing Light Gradient Boosting Machine
2025-09-02 18:44:04,106:INFO:Total runtime is 0.2818228403727214 minutes
2025-09-02 18:44:04,112:INFO:SubProcess create_model() called ==================================
2025-09-02 18:44:04,112:INFO:Initializing create_model()
2025-09-02 18:44:04,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:44:04,114:INFO:Checking exceptions
2025-09-02 18:44:04,115:INFO:Importing libraries
2025-09-02 18:44:04,115:INFO:Copying training dataset
2025-09-02 18:44:04,124:INFO:Defining folds
2025-09-02 18:44:04,125:INFO:Declaring metric variables
2025-09-02 18:44:04,135:INFO:Importing untrained model
2025-09-02 18:44:04,152:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-02 18:44:04,160:INFO:Starting cross validation
2025-09-02 18:44:04,162:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:44:04,544:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,544:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,550:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,554:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,554:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,580:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,587:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,590:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,616:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,619:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,623:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,883:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,887:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,891:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,898:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,903:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,906:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,930:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,934:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,938:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,975:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,980:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:04,984:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,134:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,137:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,140:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,146:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,149:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,152:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,169:INFO:Calculating mean and std
2025-09-02 18:44:05,171:INFO:Creating metrics dataframe
2025-09-02 18:44:05,174:INFO:Uploading results into container
2025-09-02 18:44:05,175:INFO:Uploading model into container now
2025-09-02 18:44:05,175:INFO:_master_model_container: 13
2025-09-02 18:44:05,175:INFO:_display_container: 2
2025-09-02 18:44:05,179:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1912, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-02 18:44:05,180:INFO:create_model() successfully completed......................................
2025-09-02 18:44:05,413:INFO:SubProcess create_model() end ==================================
2025-09-02 18:44:05,413:INFO:Creating metrics dataframe
2025-09-02 18:44:05,431:INFO:Initializing Dummy Classifier
2025-09-02 18:44:05,432:INFO:Total runtime is 0.30391407012939453 minutes
2025-09-02 18:44:05,437:INFO:SubProcess create_model() called ==================================
2025-09-02 18:44:05,438:INFO:Initializing create_model()
2025-09-02 18:44:05,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243477EBE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:44:05,438:INFO:Checking exceptions
2025-09-02 18:44:05,438:INFO:Importing libraries
2025-09-02 18:44:05,438:INFO:Copying training dataset
2025-09-02 18:44:05,451:INFO:Defining folds
2025-09-02 18:44:05,452:INFO:Declaring metric variables
2025-09-02 18:44:05,463:INFO:Importing untrained model
2025-09-02 18:44:05,468:INFO:Dummy Classifier Imported successfully
2025-09-02 18:44:05,480:INFO:Starting cross validation
2025-09-02 18:44:05,481:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:44:05,530:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,531:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,534:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,538:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,540:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:44:05,544:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,550:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,557:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,558:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:44:05,563:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,578:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,582:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:44:05,583:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:44:05,585:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,585:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,601:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,605:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,606:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:44:05,608:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,632:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,636:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,637:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,638:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:44:05,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,642:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:44:05,648:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,654:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,657:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,660:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,660:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:44:05,663:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,663:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,664:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:44:05,666:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,679:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,681:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,682:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:44:05,683:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:44:05,695:INFO:Calculating mean and std
2025-09-02 18:44:05,696:INFO:Creating metrics dataframe
2025-09-02 18:44:05,699:INFO:Uploading results into container
2025-09-02 18:44:05,702:INFO:Uploading model into container now
2025-09-02 18:44:05,702:INFO:_master_model_container: 14
2025-09-02 18:44:05,702:INFO:_display_container: 2
2025-09-02 18:44:05,703:INFO:DummyClassifier(constant=None, random_state=1912, strategy='prior')
2025-09-02 18:44:05,703:INFO:create_model() successfully completed......................................
2025-09-02 18:44:05,937:INFO:SubProcess create_model() end ==================================
2025-09-02 18:44:05,937:INFO:Creating metrics dataframe
2025-09-02 18:44:05,970:INFO:Initializing create_model()
2025-09-02 18:44:05,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434984E890>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1912, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:44:05,970:INFO:Checking exceptions
2025-09-02 18:44:05,972:INFO:Importing libraries
2025-09-02 18:44:05,972:INFO:Copying training dataset
2025-09-02 18:44:05,981:INFO:Defining folds
2025-09-02 18:44:05,981:INFO:Declaring metric variables
2025-09-02 18:44:05,981:INFO:Importing untrained model
2025-09-02 18:44:05,981:INFO:Declaring custom model
2025-09-02 18:44:05,982:INFO:Extra Trees Classifier Imported successfully
2025-09-02 18:44:05,982:INFO:Cross validation set to False
2025-09-02 18:44:05,982:INFO:Fitting Model
2025-09-02 18:44:06,217:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1912, verbose=0,
                     warm_start=False)
2025-09-02 18:44:06,217:INFO:create_model() successfully completed......................................
2025-09-02 18:44:06,486:INFO:_master_model_container: 14
2025-09-02 18:44:06,486:INFO:_display_container: 2
2025-09-02 18:44:06,487:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1912, verbose=0,
                     warm_start=False)
2025-09-02 18:44:06,487:INFO:compare_models() successfully completed......................................
2025-09-02 18:52:20,970:INFO:PyCaret ClassificationExperiment
2025-09-02 18:52:20,970:INFO:Logging name: clf-default-name
2025-09-02 18:52:20,970:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-02 18:52:20,970:INFO:version 3.3.2
2025-09-02 18:52:20,970:INFO:Initializing setup()
2025-09-02 18:52:20,970:INFO:self.USI: c32c
2025-09-02 18:52:20,970:INFO:self._variable_keys: {'fold_groups_param', '_ml_usecase', 'X', 'idx', 'seed', 'y_test', 'y_train', 'y', '_available_plots', 'X_train', 'exp_id', 'gpu_param', 'html_param', 'gpu_n_jobs_param', 'exp_name_log', 'is_multiclass', 'data', 'pipeline', 'n_jobs_param', 'target_param', 'fold_generator', 'log_plots_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fix_imbalance', 'X_test', 'memory'}
2025-09-02 18:52:20,970:INFO:Checking environment
2025-09-02 18:52:20,970:INFO:python_version: 3.10.11
2025-09-02 18:52:20,970:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-09-02 18:52:20,970:INFO:machine: AMD64
2025-09-02 18:52:20,970:INFO:platform: Windows-10-10.0.19045-SP0
2025-09-02 18:52:20,973:INFO:Memory: svmem(total=8299257856, available=969883648, percent=88.3, used=7329374208, free=969883648)
2025-09-02 18:52:20,973:INFO:Physical Core: 2
2025-09-02 18:52:20,973:INFO:Logical Core: 4
2025-09-02 18:52:20,973:INFO:Checking libraries
2025-09-02 18:52:20,973:INFO:System:
2025-09-02 18:52:20,973:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-09-02 18:52:20,973:INFO:executable: c:\Users\nguye\AppData\Local\Programs\Python\Python310\python.exe
2025-09-02 18:52:20,973:INFO:   machine: Windows-10-10.0.19045-SP0
2025-09-02 18:52:20,973:INFO:PyCaret required dependencies:
2025-09-02 18:52:20,975:INFO:                 pip: 23.0.1
2025-09-02 18:52:20,975:INFO:          setuptools: 65.5.0
2025-09-02 18:52:20,975:INFO:             pycaret: 3.3.2
2025-09-02 18:52:20,975:INFO:             IPython: 8.37.0
2025-09-02 18:52:20,975:INFO:          ipywidgets: 8.1.7
2025-09-02 18:52:20,975:INFO:                tqdm: 4.67.1
2025-09-02 18:52:20,975:INFO:               numpy: 1.26.4
2025-09-02 18:52:20,975:INFO:              pandas: 2.1.4
2025-09-02 18:52:20,975:INFO:              jinja2: 3.1.6
2025-09-02 18:52:20,975:INFO:               scipy: 1.11.4
2025-09-02 18:52:20,975:INFO:              joblib: 1.3.2
2025-09-02 18:52:20,975:INFO:             sklearn: 1.4.2
2025-09-02 18:52:20,975:INFO:                pyod: 2.0.5
2025-09-02 18:52:20,975:INFO:            imblearn: 0.14.0
2025-09-02 18:52:20,975:INFO:   category_encoders: 2.7.0
2025-09-02 18:52:20,975:INFO:            lightgbm: 4.6.0
2025-09-02 18:52:20,975:INFO:               numba: 0.61.2
2025-09-02 18:52:20,975:INFO:            requests: 2.32.4
2025-09-02 18:52:20,975:INFO:          matplotlib: 3.7.5
2025-09-02 18:52:20,975:INFO:          scikitplot: 0.3.7
2025-09-02 18:52:20,975:INFO:         yellowbrick: 1.5
2025-09-02 18:52:20,975:INFO:              plotly: 6.3.0
2025-09-02 18:52:20,975:INFO:    plotly-resampler: Not installed
2025-09-02 18:52:20,975:INFO:             kaleido: 1.0.0
2025-09-02 18:52:20,975:INFO:           schemdraw: 0.15
2025-09-02 18:52:20,975:INFO:         statsmodels: 0.14.5
2025-09-02 18:52:20,975:INFO:              sktime: 0.26.0
2025-09-02 18:52:20,975:INFO:               tbats: 1.1.3
2025-09-02 18:52:20,975:INFO:            pmdarima: 2.0.4
2025-09-02 18:52:20,975:INFO:              psutil: 7.0.0
2025-09-02 18:52:20,975:INFO:          markupsafe: 3.0.2
2025-09-02 18:52:20,975:INFO:             pickle5: Not installed
2025-09-02 18:52:20,975:INFO:         cloudpickle: 3.1.1
2025-09-02 18:52:20,975:INFO:         deprecation: 2.1.0
2025-09-02 18:52:20,975:INFO:              xxhash: 3.5.0
2025-09-02 18:52:20,975:INFO:           wurlitzer: Not installed
2025-09-02 18:52:20,975:INFO:PyCaret optional dependencies:
2025-09-02 18:52:20,975:INFO:                shap: Not installed
2025-09-02 18:52:20,975:INFO:           interpret: Not installed
2025-09-02 18:52:20,975:INFO:                umap: Not installed
2025-09-02 18:52:20,975:INFO:     ydata_profiling: Not installed
2025-09-02 18:52:20,975:INFO:  explainerdashboard: Not installed
2025-09-02 18:52:20,975:INFO:             autoviz: Not installed
2025-09-02 18:52:20,975:INFO:           fairlearn: Not installed
2025-09-02 18:52:20,975:INFO:          deepchecks: Not installed
2025-09-02 18:52:20,975:INFO:             xgboost: Not installed
2025-09-02 18:52:20,975:INFO:            catboost: Not installed
2025-09-02 18:52:20,975:INFO:              kmodes: Not installed
2025-09-02 18:52:20,975:INFO:             mlxtend: Not installed
2025-09-02 18:52:20,975:INFO:       statsforecast: Not installed
2025-09-02 18:52:20,976:INFO:        tune_sklearn: Not installed
2025-09-02 18:52:20,976:INFO:                 ray: Not installed
2025-09-02 18:52:20,976:INFO:            hyperopt: Not installed
2025-09-02 18:52:20,976:INFO:              optuna: Not installed
2025-09-02 18:52:20,976:INFO:               skopt: Not installed
2025-09-02 18:52:20,976:INFO:              mlflow: Not installed
2025-09-02 18:52:20,976:INFO:              gradio: Not installed
2025-09-02 18:52:20,976:INFO:             fastapi: Not installed
2025-09-02 18:52:20,976:INFO:             uvicorn: Not installed
2025-09-02 18:52:20,976:INFO:              m2cgen: Not installed
2025-09-02 18:52:20,976:INFO:           evidently: Not installed
2025-09-02 18:52:20,976:INFO:               fugue: Not installed
2025-09-02 18:52:20,976:INFO:           streamlit: Not installed
2025-09-02 18:52:20,976:INFO:             prophet: Not installed
2025-09-02 18:52:20,976:INFO:None
2025-09-02 18:52:20,976:INFO:Set up data.
2025-09-02 18:52:20,983:INFO:Set up folding strategy.
2025-09-02 18:52:20,983:INFO:Set up train/test split.
2025-09-02 18:52:20,987:INFO:Set up index.
2025-09-02 18:52:20,988:INFO:Assigning column types.
2025-09-02 18:52:20,995:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-02 18:52:21,033:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:52:21,033:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:52:21,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,100:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:52:21,101:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:52:21,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,129:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-02 18:52:21,168:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:52:21,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,231:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:52:21,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,254:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-02 18:52:21,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,391:INFO:Preparing preprocessing pipeline...
2025-09-02 18:52:21,392:INFO:Set up label encoding.
2025-09-02 18:52:21,392:INFO:Set up simple imputation.
2025-09-02 18:52:21,393:INFO:Set up column name cleaning.
2025-09-02 18:52:21,426:INFO:Finished creating preprocessing pipeline.
2025-09-02 18:52:21,429:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nguye\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'conc...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-02 18:52:21,430:INFO:Creating final display dataframe.
2025-09-02 18:52:21,531:INFO:Setup _display_container:                     Description             Value
0                    Session id              3444
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              c32c
2025-09-02 18:52:21,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:52:21,670:INFO:setup() successfully completed in 0.7s...............
2025-09-02 18:52:21,671:INFO:Initializing compare_models()
2025-09-02 18:52:21,671:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-02 18:52:21,671:INFO:Checking exceptions
2025-09-02 18:52:21,679:INFO:Preparing display monitor
2025-09-02 18:52:21,714:INFO:Initializing Logistic Regression
2025-09-02 18:52:21,714:INFO:Total runtime is 0.0 minutes
2025-09-02 18:52:21,722:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:21,723:INFO:Initializing create_model()
2025-09-02 18:52:21,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:21,723:INFO:Checking exceptions
2025-09-02 18:52:21,723:INFO:Importing libraries
2025-09-02 18:52:21,723:INFO:Copying training dataset
2025-09-02 18:52:21,733:INFO:Defining folds
2025-09-02 18:52:21,733:INFO:Declaring metric variables
2025-09-02 18:52:21,737:INFO:Importing untrained model
2025-09-02 18:52:21,745:INFO:Logistic Regression Imported successfully
2025-09-02 18:52:21,753:INFO:Starting cross validation
2025-09-02 18:52:21,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:27,163:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:52:27,163:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:52:27,182:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,182:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,186:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,186:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,190:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,190:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,193:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,226:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:52:27,251:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,255:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,265:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,467:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:52:27,473:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:52:27,481:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:52:27,486:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,487:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,489:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,492:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,493:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,494:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,495:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,499:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,503:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,523:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:52:27,531:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,533:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,535:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,604:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:52:27,612:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:52:27,614:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,616:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,618:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,621:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,625:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,627:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:27,641:INFO:Calculating mean and std
2025-09-02 18:52:27,642:INFO:Creating metrics dataframe
2025-09-02 18:52:27,645:INFO:Uploading results into container
2025-09-02 18:52:27,647:INFO:Uploading model into container now
2025-09-02 18:52:27,649:INFO:_master_model_container: 1
2025-09-02 18:52:27,650:INFO:_display_container: 2
2025-09-02 18:52:27,652:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3444, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-02 18:52:27,653:INFO:create_model() successfully completed......................................
2025-09-02 18:52:27,866:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:27,866:INFO:Creating metrics dataframe
2025-09-02 18:52:27,873:INFO:Initializing K Neighbors Classifier
2025-09-02 18:52:27,873:INFO:Total runtime is 0.10265761216481527 minutes
2025-09-02 18:52:27,878:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:27,878:INFO:Initializing create_model()
2025-09-02 18:52:27,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:27,878:INFO:Checking exceptions
2025-09-02 18:52:27,879:INFO:Importing libraries
2025-09-02 18:52:27,880:INFO:Copying training dataset
2025-09-02 18:52:27,885:INFO:Defining folds
2025-09-02 18:52:27,886:INFO:Declaring metric variables
2025-09-02 18:52:27,895:INFO:Importing untrained model
2025-09-02 18:52:27,900:INFO:K Neighbors Classifier Imported successfully
2025-09-02 18:52:27,911:INFO:Starting cross validation
2025-09-02 18:52:27,912:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:28,050:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,052:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,053:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,053:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,054:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,057:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,057:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,057:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,058:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,061:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,098:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,101:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,106:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,106:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,106:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,109:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,112:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,112:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,115:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,115:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,116:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,118:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,136:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,140:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,142:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,145:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,147:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,149:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,153:INFO:Calculating mean and std
2025-09-02 18:52:28,155:INFO:Creating metrics dataframe
2025-09-02 18:52:28,158:INFO:Uploading results into container
2025-09-02 18:52:28,158:INFO:Uploading model into container now
2025-09-02 18:52:28,159:INFO:_master_model_container: 2
2025-09-02 18:52:28,159:INFO:_display_container: 2
2025-09-02 18:52:28,160:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-02 18:52:28,160:INFO:create_model() successfully completed......................................
2025-09-02 18:52:28,368:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:28,368:INFO:Creating metrics dataframe
2025-09-02 18:52:28,380:INFO:Initializing Naive Bayes
2025-09-02 18:52:28,380:INFO:Total runtime is 0.11110748052597046 minutes
2025-09-02 18:52:28,388:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:28,388:INFO:Initializing create_model()
2025-09-02 18:52:28,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:28,388:INFO:Checking exceptions
2025-09-02 18:52:28,388:INFO:Importing libraries
2025-09-02 18:52:28,388:INFO:Copying training dataset
2025-09-02 18:52:28,397:INFO:Defining folds
2025-09-02 18:52:28,397:INFO:Declaring metric variables
2025-09-02 18:52:28,405:INFO:Importing untrained model
2025-09-02 18:52:28,412:INFO:Naive Bayes Imported successfully
2025-09-02 18:52:28,418:INFO:Starting cross validation
2025-09-02 18:52:28,423:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:28,512:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,515:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,519:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,528:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,531:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,535:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,540:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,573:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,578:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,581:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,582:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,606:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,609:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,613:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,627:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,630:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,633:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,648:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,648:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,651:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,651:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,656:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,656:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,672:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,675:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,678:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,681:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,687:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,690:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:28,696:INFO:Calculating mean and std
2025-09-02 18:52:28,703:INFO:Creating metrics dataframe
2025-09-02 18:52:28,710:INFO:Uploading results into container
2025-09-02 18:52:28,711:INFO:Uploading model into container now
2025-09-02 18:52:28,711:INFO:_master_model_container: 3
2025-09-02 18:52:28,711:INFO:_display_container: 2
2025-09-02 18:52:28,711:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-02 18:52:28,711:INFO:create_model() successfully completed......................................
2025-09-02 18:52:28,948:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:28,948:INFO:Creating metrics dataframe
2025-09-02 18:52:28,962:INFO:Initializing Decision Tree Classifier
2025-09-02 18:52:28,962:INFO:Total runtime is 0.12081106503804524 minutes
2025-09-02 18:52:28,966:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:28,966:INFO:Initializing create_model()
2025-09-02 18:52:28,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:28,967:INFO:Checking exceptions
2025-09-02 18:52:28,967:INFO:Importing libraries
2025-09-02 18:52:28,967:INFO:Copying training dataset
2025-09-02 18:52:28,992:INFO:Defining folds
2025-09-02 18:52:28,993:INFO:Declaring metric variables
2025-09-02 18:52:28,999:INFO:Importing untrained model
2025-09-02 18:52:29,008:INFO:Decision Tree Classifier Imported successfully
2025-09-02 18:52:29,015:INFO:Starting cross validation
2025-09-02 18:52:29,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:29,092:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,095:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,095:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,098:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,098:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,099:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,105:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,105:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,109:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,112:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,117:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,118:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,155:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,159:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,163:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,166:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,173:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,174:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,176:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,177:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,179:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,200:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,208:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,211:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,230:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,233:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,241:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,243:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,255:INFO:Calculating mean and std
2025-09-02 18:52:29,260:INFO:Creating metrics dataframe
2025-09-02 18:52:29,263:INFO:Uploading results into container
2025-09-02 18:52:29,264:INFO:Uploading model into container now
2025-09-02 18:52:29,264:INFO:_master_model_container: 4
2025-09-02 18:52:29,264:INFO:_display_container: 2
2025-09-02 18:52:29,265:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3444, splitter='best')
2025-09-02 18:52:29,265:INFO:create_model() successfully completed......................................
2025-09-02 18:52:29,488:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:29,488:INFO:Creating metrics dataframe
2025-09-02 18:52:29,495:INFO:Initializing SVM - Linear Kernel
2025-09-02 18:52:29,495:INFO:Total runtime is 0.12969305912653606 minutes
2025-09-02 18:52:29,499:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:29,505:INFO:Initializing create_model()
2025-09-02 18:52:29,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:29,505:INFO:Checking exceptions
2025-09-02 18:52:29,505:INFO:Importing libraries
2025-09-02 18:52:29,505:INFO:Copying training dataset
2025-09-02 18:52:29,512:INFO:Defining folds
2025-09-02 18:52:29,512:INFO:Declaring metric variables
2025-09-02 18:52:29,515:INFO:Importing untrained model
2025-09-02 18:52:29,525:INFO:SVM - Linear Kernel Imported successfully
2025-09-02 18:52:29,532:INFO:Starting cross validation
2025-09-02 18:52:29,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:29,593:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,595:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,596:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,599:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,601:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,602:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,604:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,605:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,609:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,620:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,623:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,627:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,642:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,645:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,647:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,649:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,651:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,653:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,655:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,657:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,666:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,672:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,675:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,687:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,689:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,689:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,690:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,691:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,693:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:29,705:INFO:Calculating mean and std
2025-09-02 18:52:29,706:INFO:Creating metrics dataframe
2025-09-02 18:52:29,708:INFO:Uploading results into container
2025-09-02 18:52:29,709:INFO:Uploading model into container now
2025-09-02 18:52:29,710:INFO:_master_model_container: 5
2025-09-02 18:52:29,710:INFO:_display_container: 2
2025-09-02 18:52:29,712:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3444, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-02 18:52:29,712:INFO:create_model() successfully completed......................................
2025-09-02 18:52:29,918:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:29,918:INFO:Creating metrics dataframe
2025-09-02 18:52:29,924:INFO:Initializing Ridge Classifier
2025-09-02 18:52:29,924:INFO:Total runtime is 0.1368473768234253 minutes
2025-09-02 18:52:29,928:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:29,928:INFO:Initializing create_model()
2025-09-02 18:52:29,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:29,929:INFO:Checking exceptions
2025-09-02 18:52:29,929:INFO:Importing libraries
2025-09-02 18:52:29,929:INFO:Copying training dataset
2025-09-02 18:52:29,941:INFO:Defining folds
2025-09-02 18:52:29,941:INFO:Declaring metric variables
2025-09-02 18:52:29,948:INFO:Importing untrained model
2025-09-02 18:52:29,958:INFO:Ridge Classifier Imported successfully
2025-09-02 18:52:29,964:INFO:Starting cross validation
2025-09-02 18:52:29,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:30,020:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.91525e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:52:30,021:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.48019e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:52:30,030:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.78321e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:52:30,031:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.21621e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:52:30,037:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,041:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,044:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,045:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,046:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,048:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,048:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,050:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,054:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,061:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,068:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,073:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.47046e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:52:30,075:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.58739e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:52:30,086:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.98993e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:52:30,091:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,092:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,095:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.8375e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:52:30,095:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,096:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,100:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,100:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,106:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,111:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,114:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,114:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,120:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,124:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,127:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.65257e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:52:30,128:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.57615e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:52:30,139:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,140:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,141:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,142:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,144:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,145:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,156:INFO:Calculating mean and std
2025-09-02 18:52:30,157:INFO:Creating metrics dataframe
2025-09-02 18:52:30,162:INFO:Uploading results into container
2025-09-02 18:52:30,163:INFO:Uploading model into container now
2025-09-02 18:52:30,163:INFO:_master_model_container: 6
2025-09-02 18:52:30,163:INFO:_display_container: 2
2025-09-02 18:52:30,164:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3444, solver='auto',
                tol=0.0001)
2025-09-02 18:52:30,164:INFO:create_model() successfully completed......................................
2025-09-02 18:52:30,376:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:30,376:INFO:Creating metrics dataframe
2025-09-02 18:52:30,385:INFO:Initializing Random Forest Classifier
2025-09-02 18:52:30,385:INFO:Total runtime is 0.14452952941258748 minutes
2025-09-02 18:52:30,389:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:30,389:INFO:Initializing create_model()
2025-09-02 18:52:30,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:30,389:INFO:Checking exceptions
2025-09-02 18:52:30,389:INFO:Importing libraries
2025-09-02 18:52:30,389:INFO:Copying training dataset
2025-09-02 18:52:30,396:INFO:Defining folds
2025-09-02 18:52:30,396:INFO:Declaring metric variables
2025-09-02 18:52:30,401:INFO:Importing untrained model
2025-09-02 18:52:30,410:INFO:Random Forest Classifier Imported successfully
2025-09-02 18:52:30,425:INFO:Starting cross validation
2025-09-02 18:52:30,426:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:30,781:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,781:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,784:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,785:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,785:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,786:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,788:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,789:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,794:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,889:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,892:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:30,897:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,088:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,092:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,096:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,121:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,123:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,126:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,167:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,171:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,176:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,310:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,321:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,330:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,411:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,419:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,420:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,427:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,433:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,435:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,454:INFO:Calculating mean and std
2025-09-02 18:52:31,455:INFO:Creating metrics dataframe
2025-09-02 18:52:31,457:INFO:Uploading results into container
2025-09-02 18:52:31,457:INFO:Uploading model into container now
2025-09-02 18:52:31,457:INFO:_master_model_container: 7
2025-09-02 18:52:31,458:INFO:_display_container: 2
2025-09-02 18:52:31,459:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3444, verbose=0,
                       warm_start=False)
2025-09-02 18:52:31,460:INFO:create_model() successfully completed......................................
2025-09-02 18:52:31,801:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:31,802:INFO:Creating metrics dataframe
2025-09-02 18:52:31,817:INFO:Initializing Quadratic Discriminant Analysis
2025-09-02 18:52:31,817:INFO:Total runtime is 0.16839253107706706 minutes
2025-09-02 18:52:31,825:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:31,826:INFO:Initializing create_model()
2025-09-02 18:52:31,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:31,826:INFO:Checking exceptions
2025-09-02 18:52:31,826:INFO:Importing libraries
2025-09-02 18:52:31,826:INFO:Copying training dataset
2025-09-02 18:52:31,845:INFO:Defining folds
2025-09-02 18:52:31,845:INFO:Declaring metric variables
2025-09-02 18:52:31,854:INFO:Importing untrained model
2025-09-02 18:52:31,861:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-02 18:52:31,873:INFO:Starting cross validation
2025-09-02 18:52:31,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:31,960:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,964:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,965:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,968:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,968:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,971:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,973:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,973:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,975:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,981:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:31,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,021:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,024:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,026:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,031:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,033:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,034:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,035:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,035:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,037:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,037:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,040:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,040:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,069:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,073:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,074:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,077:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,080:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,082:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,091:INFO:Calculating mean and std
2025-09-02 18:52:32,092:INFO:Creating metrics dataframe
2025-09-02 18:52:32,098:INFO:Uploading results into container
2025-09-02 18:52:32,099:INFO:Uploading model into container now
2025-09-02 18:52:32,099:INFO:_master_model_container: 8
2025-09-02 18:52:32,099:INFO:_display_container: 2
2025-09-02 18:52:32,100:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-02 18:52:32,100:INFO:create_model() successfully completed......................................
2025-09-02 18:52:32,314:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:32,314:INFO:Creating metrics dataframe
2025-09-02 18:52:32,322:INFO:Initializing Ada Boost Classifier
2025-09-02 18:52:32,322:INFO:Total runtime is 0.1768116553624471 minutes
2025-09-02 18:52:32,327:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:32,328:INFO:Initializing create_model()
2025-09-02 18:52:32,328:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:32,328:INFO:Checking exceptions
2025-09-02 18:52:32,328:INFO:Importing libraries
2025-09-02 18:52:32,329:INFO:Copying training dataset
2025-09-02 18:52:32,346:INFO:Defining folds
2025-09-02 18:52:32,346:INFO:Declaring metric variables
2025-09-02 18:52:32,355:INFO:Importing untrained model
2025-09-02 18:52:32,360:INFO:Ada Boost Classifier Imported successfully
2025-09-02 18:52:32,371:INFO:Starting cross validation
2025-09-02 18:52:32,372:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:32,411:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:52:32,411:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:52:32,420:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:52:32,423:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:52:32,635:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,639:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,645:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,646:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,649:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,653:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,666:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,670:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,671:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:52:32,671:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,673:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,675:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,679:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,680:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:52:32,702:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:52:32,702:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:52:32,897:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,901:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,905:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,920:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,923:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,927:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,928:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:52:32,929:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,929:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,929:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,932:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,933:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,936:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:32,949:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:52:33,119:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:33,122:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:33,127:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:33,134:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:33,136:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:33,138:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:33,146:INFO:Calculating mean and std
2025-09-02 18:52:33,148:INFO:Creating metrics dataframe
2025-09-02 18:52:33,151:INFO:Uploading results into container
2025-09-02 18:52:33,151:INFO:Uploading model into container now
2025-09-02 18:52:33,152:INFO:_master_model_container: 9
2025-09-02 18:52:33,152:INFO:_display_container: 2
2025-09-02 18:52:33,152:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3444)
2025-09-02 18:52:33,152:INFO:create_model() successfully completed......................................
2025-09-02 18:52:33,380:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:33,381:INFO:Creating metrics dataframe
2025-09-02 18:52:33,402:INFO:Initializing Gradient Boosting Classifier
2025-09-02 18:52:33,403:INFO:Total runtime is 0.19481605291366577 minutes
2025-09-02 18:52:33,413:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:33,413:INFO:Initializing create_model()
2025-09-02 18:52:33,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:33,413:INFO:Checking exceptions
2025-09-02 18:52:33,413:INFO:Importing libraries
2025-09-02 18:52:33,414:INFO:Copying training dataset
2025-09-02 18:52:33,434:INFO:Defining folds
2025-09-02 18:52:33,434:INFO:Declaring metric variables
2025-09-02 18:52:33,485:INFO:Importing untrained model
2025-09-02 18:52:33,501:INFO:Gradient Boosting Classifier Imported successfully
2025-09-02 18:52:33,568:INFO:Starting cross validation
2025-09-02 18:52:33,569:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:34,485:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,493:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,497:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,535:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,545:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,548:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,584:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,601:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,610:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,643:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,646:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:34,649:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,429:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,432:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,437:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,439:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,441:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,447:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,529:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,529:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,533:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,540:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,544:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:35,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,187:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,190:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,192:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,212:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,214:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,222:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,244:INFO:Calculating mean and std
2025-09-02 18:52:36,246:INFO:Creating metrics dataframe
2025-09-02 18:52:36,251:INFO:Uploading results into container
2025-09-02 18:52:36,254:INFO:Uploading model into container now
2025-09-02 18:52:36,257:INFO:_master_model_container: 10
2025-09-02 18:52:36,257:INFO:_display_container: 2
2025-09-02 18:52:36,259:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3444, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-02 18:52:36,259:INFO:create_model() successfully completed......................................
2025-09-02 18:52:36,503:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:36,503:INFO:Creating metrics dataframe
2025-09-02 18:52:36,512:INFO:Initializing Linear Discriminant Analysis
2025-09-02 18:52:36,512:INFO:Total runtime is 0.24663684368133545 minutes
2025-09-02 18:52:36,520:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:36,520:INFO:Initializing create_model()
2025-09-02 18:52:36,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:36,521:INFO:Checking exceptions
2025-09-02 18:52:36,521:INFO:Importing libraries
2025-09-02 18:52:36,521:INFO:Copying training dataset
2025-09-02 18:52:36,527:INFO:Defining folds
2025-09-02 18:52:36,528:INFO:Declaring metric variables
2025-09-02 18:52:36,540:INFO:Importing untrained model
2025-09-02 18:52:36,544:INFO:Linear Discriminant Analysis Imported successfully
2025-09-02 18:52:36,556:INFO:Starting cross validation
2025-09-02 18:52:36,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:36,626:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,628:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,631:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,633:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,636:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,636:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,637:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,643:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,643:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,654:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,659:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,679:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,683:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,684:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,685:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,687:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,688:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,689:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,690:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,692:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,710:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,715:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,719:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,729:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,734:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,735:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,738:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,738:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,741:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:36,755:INFO:Calculating mean and std
2025-09-02 18:52:36,757:INFO:Creating metrics dataframe
2025-09-02 18:52:36,764:INFO:Uploading results into container
2025-09-02 18:52:36,765:INFO:Uploading model into container now
2025-09-02 18:52:36,766:INFO:_master_model_container: 11
2025-09-02 18:52:36,766:INFO:_display_container: 2
2025-09-02 18:52:36,767:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-02 18:52:36,767:INFO:create_model() successfully completed......................................
2025-09-02 18:52:37,018:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:37,019:INFO:Creating metrics dataframe
2025-09-02 18:52:37,027:INFO:Initializing Extra Trees Classifier
2025-09-02 18:52:37,028:INFO:Total runtime is 0.2552396496136983 minutes
2025-09-02 18:52:37,040:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:37,040:INFO:Initializing create_model()
2025-09-02 18:52:37,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:37,040:INFO:Checking exceptions
2025-09-02 18:52:37,042:INFO:Importing libraries
2025-09-02 18:52:37,042:INFO:Copying training dataset
2025-09-02 18:52:37,055:INFO:Defining folds
2025-09-02 18:52:37,055:INFO:Declaring metric variables
2025-09-02 18:52:37,060:INFO:Importing untrained model
2025-09-02 18:52:37,075:INFO:Extra Trees Classifier Imported successfully
2025-09-02 18:52:37,091:INFO:Starting cross validation
2025-09-02 18:52:37,092:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:37,407:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,407:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,410:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,410:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,421:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,423:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,423:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,427:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,437:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,535:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,538:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,724:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,734:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,735:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,737:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,740:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,743:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,766:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,772:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,776:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,950:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,954:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:37,958:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,037:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,040:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,042:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,053:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,056:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,064:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,081:INFO:Calculating mean and std
2025-09-02 18:52:38,082:INFO:Creating metrics dataframe
2025-09-02 18:52:38,085:INFO:Uploading results into container
2025-09-02 18:52:38,086:INFO:Uploading model into container now
2025-09-02 18:52:38,087:INFO:_master_model_container: 12
2025-09-02 18:52:38,087:INFO:_display_container: 2
2025-09-02 18:52:38,089:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3444, verbose=0,
                     warm_start=False)
2025-09-02 18:52:38,089:INFO:create_model() successfully completed......................................
2025-09-02 18:52:38,318:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:38,318:INFO:Creating metrics dataframe
2025-09-02 18:52:38,335:INFO:Initializing Light Gradient Boosting Machine
2025-09-02 18:52:38,335:INFO:Total runtime is 0.2770182728767395 minutes
2025-09-02 18:52:38,340:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:38,340:INFO:Initializing create_model()
2025-09-02 18:52:38,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:38,340:INFO:Checking exceptions
2025-09-02 18:52:38,340:INFO:Importing libraries
2025-09-02 18:52:38,340:INFO:Copying training dataset
2025-09-02 18:52:38,349:INFO:Defining folds
2025-09-02 18:52:38,349:INFO:Declaring metric variables
2025-09-02 18:52:38,357:INFO:Importing untrained model
2025-09-02 18:52:38,370:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-02 18:52:38,382:INFO:Starting cross validation
2025-09-02 18:52:38,385:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:38,719:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,722:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,732:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,734:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,736:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,737:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,741:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,752:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,757:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,762:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,997:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:38,998:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,002:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,002:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,004:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,005:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,017:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,021:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,027:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,054:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,056:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,062:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,196:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,198:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,199:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,201:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,202:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,204:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,211:INFO:Calculating mean and std
2025-09-02 18:52:39,211:INFO:Creating metrics dataframe
2025-09-02 18:52:39,214:INFO:Uploading results into container
2025-09-02 18:52:39,214:INFO:Uploading model into container now
2025-09-02 18:52:39,215:INFO:_master_model_container: 13
2025-09-02 18:52:39,215:INFO:_display_container: 2
2025-09-02 18:52:39,216:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3444, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-02 18:52:39,216:INFO:create_model() successfully completed......................................
2025-09-02 18:52:39,425:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:39,426:INFO:Creating metrics dataframe
2025-09-02 18:52:39,445:INFO:Initializing Dummy Classifier
2025-09-02 18:52:39,445:INFO:Total runtime is 0.295516844590505 minutes
2025-09-02 18:52:39,451:INFO:SubProcess create_model() called ==================================
2025-09-02 18:52:39,452:INFO:Initializing create_model()
2025-09-02 18:52:39,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024341AE53C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:39,453:INFO:Checking exceptions
2025-09-02 18:52:39,454:INFO:Importing libraries
2025-09-02 18:52:39,454:INFO:Copying training dataset
2025-09-02 18:52:39,467:INFO:Defining folds
2025-09-02 18:52:39,467:INFO:Declaring metric variables
2025-09-02 18:52:39,477:INFO:Importing untrained model
2025-09-02 18:52:39,487:INFO:Dummy Classifier Imported successfully
2025-09-02 18:52:39,502:INFO:Starting cross validation
2025-09-02 18:52:39,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:52:39,562:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,562:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,564:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,566:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,568:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:52:39,569:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,570:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:52:39,570:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,570:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,574:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,578:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,582:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,583:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:52:39,586:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,613:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,615:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,617:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,618:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:52:39,620:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:52:39,621:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,623:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,638:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,645:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,645:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,647:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:52:39,649:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,651:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:52:39,653:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,662:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,666:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,667:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:52:39,669:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:52:39,677:INFO:Calculating mean and std
2025-09-02 18:52:39,679:INFO:Creating metrics dataframe
2025-09-02 18:52:39,683:INFO:Uploading results into container
2025-09-02 18:52:39,684:INFO:Uploading model into container now
2025-09-02 18:52:39,684:INFO:_master_model_container: 14
2025-09-02 18:52:39,685:INFO:_display_container: 2
2025-09-02 18:52:39,686:INFO:DummyClassifier(constant=None, random_state=3444, strategy='prior')
2025-09-02 18:52:39,686:INFO:create_model() successfully completed......................................
2025-09-02 18:52:39,883:INFO:SubProcess create_model() end ==================================
2025-09-02 18:52:39,883:INFO:Creating metrics dataframe
2025-09-02 18:52:39,907:INFO:Initializing create_model()
2025-09-02 18:52:39,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3444, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:39,907:INFO:Checking exceptions
2025-09-02 18:52:39,910:INFO:Importing libraries
2025-09-02 18:52:39,910:INFO:Copying training dataset
2025-09-02 18:52:39,915:INFO:Defining folds
2025-09-02 18:52:39,915:INFO:Declaring metric variables
2025-09-02 18:52:39,916:INFO:Importing untrained model
2025-09-02 18:52:39,916:INFO:Declaring custom model
2025-09-02 18:52:39,916:INFO:Extra Trees Classifier Imported successfully
2025-09-02 18:52:39,917:INFO:Cross validation set to False
2025-09-02 18:52:39,917:INFO:Fitting Model
2025-09-02 18:52:40,079:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3444, verbose=0,
                     warm_start=False)
2025-09-02 18:52:40,079:INFO:create_model() successfully completed......................................
2025-09-02 18:52:40,345:INFO:_master_model_container: 14
2025-09-02 18:52:40,345:INFO:_display_container: 2
2025-09-02 18:52:40,347:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3444, verbose=0,
                     warm_start=False)
2025-09-02 18:52:40,347:INFO:compare_models() successfully completed......................................
2025-09-02 18:52:40,351:INFO:Initializing create_model()
2025-09-02 18:52:40,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024347FDE440>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:52:40,351:INFO:Checking exceptions
2025-09-02 18:54:06,079:INFO:PyCaret ClassificationExperiment
2025-09-02 18:54:06,079:INFO:Logging name: clf-default-name
2025-09-02 18:54:06,079:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-02 18:54:06,080:INFO:version 3.3.2
2025-09-02 18:54:06,080:INFO:Initializing setup()
2025-09-02 18:54:06,080:INFO:self.USI: 4040
2025-09-02 18:54:06,080:INFO:self._variable_keys: {'fold_groups_param', '_ml_usecase', 'X', 'idx', 'seed', 'y_test', 'y_train', 'y', '_available_plots', 'X_train', 'exp_id', 'gpu_param', 'html_param', 'gpu_n_jobs_param', 'exp_name_log', 'is_multiclass', 'data', 'pipeline', 'n_jobs_param', 'target_param', 'fold_generator', 'log_plots_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fix_imbalance', 'X_test', 'memory'}
2025-09-02 18:54:06,080:INFO:Checking environment
2025-09-02 18:54:06,080:INFO:python_version: 3.10.11
2025-09-02 18:54:06,080:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-09-02 18:54:06,080:INFO:machine: AMD64
2025-09-02 18:54:06,080:INFO:platform: Windows-10-10.0.19045-SP0
2025-09-02 18:54:06,082:INFO:Memory: svmem(total=8299257856, available=771256320, percent=90.7, used=7528001536, free=771256320)
2025-09-02 18:54:06,082:INFO:Physical Core: 2
2025-09-02 18:54:06,082:INFO:Logical Core: 4
2025-09-02 18:54:06,082:INFO:Checking libraries
2025-09-02 18:54:06,082:INFO:System:
2025-09-02 18:54:06,082:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-09-02 18:54:06,082:INFO:executable: c:\Users\nguye\AppData\Local\Programs\Python\Python310\python.exe
2025-09-02 18:54:06,082:INFO:   machine: Windows-10-10.0.19045-SP0
2025-09-02 18:54:06,082:INFO:PyCaret required dependencies:
2025-09-02 18:54:06,082:INFO:                 pip: 23.0.1
2025-09-02 18:54:06,082:INFO:          setuptools: 65.5.0
2025-09-02 18:54:06,082:INFO:             pycaret: 3.3.2
2025-09-02 18:54:06,082:INFO:             IPython: 8.37.0
2025-09-02 18:54:06,082:INFO:          ipywidgets: 8.1.7
2025-09-02 18:54:06,082:INFO:                tqdm: 4.67.1
2025-09-02 18:54:06,082:INFO:               numpy: 1.26.4
2025-09-02 18:54:06,082:INFO:              pandas: 2.1.4
2025-09-02 18:54:06,082:INFO:              jinja2: 3.1.6
2025-09-02 18:54:06,082:INFO:               scipy: 1.11.4
2025-09-02 18:54:06,082:INFO:              joblib: 1.3.2
2025-09-02 18:54:06,082:INFO:             sklearn: 1.4.2
2025-09-02 18:54:06,082:INFO:                pyod: 2.0.5
2025-09-02 18:54:06,083:INFO:            imblearn: 0.14.0
2025-09-02 18:54:06,083:INFO:   category_encoders: 2.7.0
2025-09-02 18:54:06,083:INFO:            lightgbm: 4.6.0
2025-09-02 18:54:06,083:INFO:               numba: 0.61.2
2025-09-02 18:54:06,083:INFO:            requests: 2.32.4
2025-09-02 18:54:06,083:INFO:          matplotlib: 3.7.5
2025-09-02 18:54:06,083:INFO:          scikitplot: 0.3.7
2025-09-02 18:54:06,083:INFO:         yellowbrick: 1.5
2025-09-02 18:54:06,083:INFO:              plotly: 6.3.0
2025-09-02 18:54:06,083:INFO:    plotly-resampler: Not installed
2025-09-02 18:54:06,083:INFO:             kaleido: 1.0.0
2025-09-02 18:54:06,083:INFO:           schemdraw: 0.15
2025-09-02 18:54:06,083:INFO:         statsmodels: 0.14.5
2025-09-02 18:54:06,083:INFO:              sktime: 0.26.0
2025-09-02 18:54:06,083:INFO:               tbats: 1.1.3
2025-09-02 18:54:06,083:INFO:            pmdarima: 2.0.4
2025-09-02 18:54:06,083:INFO:              psutil: 7.0.0
2025-09-02 18:54:06,083:INFO:          markupsafe: 3.0.2
2025-09-02 18:54:06,083:INFO:             pickle5: Not installed
2025-09-02 18:54:06,083:INFO:         cloudpickle: 3.1.1
2025-09-02 18:54:06,083:INFO:         deprecation: 2.1.0
2025-09-02 18:54:06,083:INFO:              xxhash: 3.5.0
2025-09-02 18:54:06,083:INFO:           wurlitzer: Not installed
2025-09-02 18:54:06,083:INFO:PyCaret optional dependencies:
2025-09-02 18:54:06,083:INFO:                shap: Not installed
2025-09-02 18:54:06,083:INFO:           interpret: Not installed
2025-09-02 18:54:06,083:INFO:                umap: Not installed
2025-09-02 18:54:06,083:INFO:     ydata_profiling: Not installed
2025-09-02 18:54:06,083:INFO:  explainerdashboard: Not installed
2025-09-02 18:54:06,083:INFO:             autoviz: Not installed
2025-09-02 18:54:06,083:INFO:           fairlearn: Not installed
2025-09-02 18:54:06,083:INFO:          deepchecks: Not installed
2025-09-02 18:54:06,083:INFO:             xgboost: Not installed
2025-09-02 18:54:06,083:INFO:            catboost: Not installed
2025-09-02 18:54:06,083:INFO:              kmodes: Not installed
2025-09-02 18:54:06,083:INFO:             mlxtend: Not installed
2025-09-02 18:54:06,083:INFO:       statsforecast: Not installed
2025-09-02 18:54:06,083:INFO:        tune_sklearn: Not installed
2025-09-02 18:54:06,083:INFO:                 ray: Not installed
2025-09-02 18:54:06,083:INFO:            hyperopt: Not installed
2025-09-02 18:54:06,083:INFO:              optuna: Not installed
2025-09-02 18:54:06,083:INFO:               skopt: Not installed
2025-09-02 18:54:06,084:INFO:              mlflow: Not installed
2025-09-02 18:54:06,084:INFO:              gradio: Not installed
2025-09-02 18:54:06,084:INFO:             fastapi: Not installed
2025-09-02 18:54:06,084:INFO:             uvicorn: Not installed
2025-09-02 18:54:06,084:INFO:              m2cgen: Not installed
2025-09-02 18:54:06,084:INFO:           evidently: Not installed
2025-09-02 18:54:06,084:INFO:               fugue: Not installed
2025-09-02 18:54:06,084:INFO:           streamlit: Not installed
2025-09-02 18:54:06,084:INFO:             prophet: Not installed
2025-09-02 18:54:06,084:INFO:None
2025-09-02 18:54:06,084:INFO:Set up data.
2025-09-02 18:54:06,091:INFO:Set up folding strategy.
2025-09-02 18:54:06,091:INFO:Set up train/test split.
2025-09-02 18:54:06,095:INFO:Set up index.
2025-09-02 18:54:06,096:INFO:Assigning column types.
2025-09-02 18:54:06,099:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-02 18:54:06,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:54:06,136:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:54:06,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,193:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:54:06,194:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:54:06,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,217:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-02 18:54:06,252:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:54:06,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,310:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:54:06,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,332:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-02 18:54:06,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,467:INFO:Preparing preprocessing pipeline...
2025-09-02 18:54:06,471:INFO:Set up label encoding.
2025-09-02 18:54:06,471:INFO:Set up simple imputation.
2025-09-02 18:54:06,471:INFO:Set up column name cleaning.
2025-09-02 18:54:06,506:INFO:Finished creating preprocessing pipeline.
2025-09-02 18:54:06,510:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nguye\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'conc...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-02 18:54:06,510:INFO:Creating final display dataframe.
2025-09-02 18:54:06,619:INFO:Setup _display_container:                     Description             Value
0                    Session id              3743
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              4040
2025-09-02 18:54:06,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:06,754:INFO:setup() successfully completed in 0.68s...............
2025-09-02 18:54:06,754:INFO:Initializing compare_models()
2025-09-02 18:54:06,754:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-02 18:54:06,754:INFO:Checking exceptions
2025-09-02 18:54:06,758:INFO:Preparing display monitor
2025-09-02 18:54:06,783:INFO:Initializing Logistic Regression
2025-09-02 18:54:06,783:INFO:Total runtime is 0.0 minutes
2025-09-02 18:54:06,789:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:06,790:INFO:Initializing create_model()
2025-09-02 18:54:06,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:06,790:INFO:Checking exceptions
2025-09-02 18:54:06,790:INFO:Importing libraries
2025-09-02 18:54:06,790:INFO:Copying training dataset
2025-09-02 18:54:06,801:INFO:Defining folds
2025-09-02 18:54:06,802:INFO:Declaring metric variables
2025-09-02 18:54:06,809:INFO:Importing untrained model
2025-09-02 18:54:06,813:INFO:Logistic Regression Imported successfully
2025-09-02 18:54:06,826:INFO:Starting cross validation
2025-09-02 18:54:06,827:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:07,092:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:07,094:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:07,107:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,108:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:07,110:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,113:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,113:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,116:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,121:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,125:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,128:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,132:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,138:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:07,153:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,156:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,159:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,308:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:07,310:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:07,321:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:07,322:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,327:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,328:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,330:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,331:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,333:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,336:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,342:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,345:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,349:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:07,363:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,366:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,370:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,447:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:07,452:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:07,458:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,462:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,463:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,464:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,465:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,472:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,490:INFO:Calculating mean and std
2025-09-02 18:54:07,490:INFO:Creating metrics dataframe
2025-09-02 18:54:07,492:INFO:Uploading results into container
2025-09-02 18:54:07,493:INFO:Uploading model into container now
2025-09-02 18:54:07,493:INFO:_master_model_container: 1
2025-09-02 18:54:07,493:INFO:_display_container: 2
2025-09-02 18:54:07,493:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3743, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-02 18:54:07,493:INFO:create_model() successfully completed......................................
2025-09-02 18:54:07,688:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:07,688:INFO:Creating metrics dataframe
2025-09-02 18:54:07,694:INFO:Initializing K Neighbors Classifier
2025-09-02 18:54:07,694:INFO:Total runtime is 0.015185590585072834 minutes
2025-09-02 18:54:07,696:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:07,697:INFO:Initializing create_model()
2025-09-02 18:54:07,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:07,697:INFO:Checking exceptions
2025-09-02 18:54:07,697:INFO:Importing libraries
2025-09-02 18:54:07,698:INFO:Copying training dataset
2025-09-02 18:54:07,704:INFO:Defining folds
2025-09-02 18:54:07,704:INFO:Declaring metric variables
2025-09-02 18:54:07,707:INFO:Importing untrained model
2025-09-02 18:54:07,712:INFO:K Neighbors Classifier Imported successfully
2025-09-02 18:54:07,722:INFO:Starting cross validation
2025-09-02 18:54:07,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:07,777:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,781:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,781:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,785:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,786:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,792:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,808:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,808:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,811:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,811:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,814:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,814:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,837:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,841:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,844:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,849:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,854:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,857:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,863:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,870:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,874:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,878:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,881:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,885:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,889:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,891:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,893:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,895:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,897:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,900:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:07,913:INFO:Calculating mean and std
2025-09-02 18:54:07,914:INFO:Creating metrics dataframe
2025-09-02 18:54:07,916:INFO:Uploading results into container
2025-09-02 18:54:07,918:INFO:Uploading model into container now
2025-09-02 18:54:07,919:INFO:_master_model_container: 2
2025-09-02 18:54:07,919:INFO:_display_container: 2
2025-09-02 18:54:07,920:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-02 18:54:07,920:INFO:create_model() successfully completed......................................
2025-09-02 18:54:08,096:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:08,096:INFO:Creating metrics dataframe
2025-09-02 18:54:08,102:INFO:Initializing Naive Bayes
2025-09-02 18:54:08,103:INFO:Total runtime is 0.021985661983489987 minutes
2025-09-02 18:54:08,105:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:08,106:INFO:Initializing create_model()
2025-09-02 18:54:08,106:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:08,106:INFO:Checking exceptions
2025-09-02 18:54:08,106:INFO:Importing libraries
2025-09-02 18:54:08,106:INFO:Copying training dataset
2025-09-02 18:54:08,112:INFO:Defining folds
2025-09-02 18:54:08,112:INFO:Declaring metric variables
2025-09-02 18:54:08,116:INFO:Importing untrained model
2025-09-02 18:54:08,123:INFO:Naive Bayes Imported successfully
2025-09-02 18:54:08,129:INFO:Starting cross validation
2025-09-02 18:54:08,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:08,172:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,175:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,175:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,175:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,179:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,183:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,186:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,188:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,190:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,193:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,206:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,209:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,225:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,229:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,230:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,230:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,232:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,234:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,235:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,250:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,253:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,256:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,262:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,264:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,265:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,267:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,267:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,269:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,275:INFO:Calculating mean and std
2025-09-02 18:54:08,276:INFO:Creating metrics dataframe
2025-09-02 18:54:08,277:INFO:Uploading results into container
2025-09-02 18:54:08,278:INFO:Uploading model into container now
2025-09-02 18:54:08,278:INFO:_master_model_container: 3
2025-09-02 18:54:08,278:INFO:_display_container: 2
2025-09-02 18:54:08,279:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-02 18:54:08,279:INFO:create_model() successfully completed......................................
2025-09-02 18:54:08,462:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:08,462:INFO:Creating metrics dataframe
2025-09-02 18:54:08,468:INFO:Initializing Decision Tree Classifier
2025-09-02 18:54:08,468:INFO:Total runtime is 0.028071574370066323 minutes
2025-09-02 18:54:08,471:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:08,471:INFO:Initializing create_model()
2025-09-02 18:54:08,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:08,471:INFO:Checking exceptions
2025-09-02 18:54:08,471:INFO:Importing libraries
2025-09-02 18:54:08,471:INFO:Copying training dataset
2025-09-02 18:54:08,478:INFO:Defining folds
2025-09-02 18:54:08,478:INFO:Declaring metric variables
2025-09-02 18:54:08,486:INFO:Importing untrained model
2025-09-02 18:54:08,489:INFO:Decision Tree Classifier Imported successfully
2025-09-02 18:54:08,495:INFO:Starting cross validation
2025-09-02 18:54:08,497:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:08,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,552:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,555:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,567:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,567:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,570:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,570:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,573:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,576:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,584:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,588:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,603:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,606:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,609:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,614:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,618:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,621:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,621:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,624:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,630:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,634:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,637:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,650:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,651:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,652:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,653:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,654:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,654:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,662:INFO:Calculating mean and std
2025-09-02 18:54:08,665:INFO:Creating metrics dataframe
2025-09-02 18:54:08,666:INFO:Uploading results into container
2025-09-02 18:54:08,666:INFO:Uploading model into container now
2025-09-02 18:54:08,667:INFO:_master_model_container: 4
2025-09-02 18:54:08,667:INFO:_display_container: 2
2025-09-02 18:54:08,667:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3743, splitter='best')
2025-09-02 18:54:08,667:INFO:create_model() successfully completed......................................
2025-09-02 18:54:08,847:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:08,847:INFO:Creating metrics dataframe
2025-09-02 18:54:08,853:INFO:Initializing SVM - Linear Kernel
2025-09-02 18:54:08,853:INFO:Total runtime is 0.03449799219767252 minutes
2025-09-02 18:54:08,858:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:08,858:INFO:Initializing create_model()
2025-09-02 18:54:08,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:08,858:INFO:Checking exceptions
2025-09-02 18:54:08,858:INFO:Importing libraries
2025-09-02 18:54:08,858:INFO:Copying training dataset
2025-09-02 18:54:08,866:INFO:Defining folds
2025-09-02 18:54:08,866:INFO:Declaring metric variables
2025-09-02 18:54:08,869:INFO:Importing untrained model
2025-09-02 18:54:08,875:INFO:SVM - Linear Kernel Imported successfully
2025-09-02 18:54:08,887:INFO:Starting cross validation
2025-09-02 18:54:08,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:08,931:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,933:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,941:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,943:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,943:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,949:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,951:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,953:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,954:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,957:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,982:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,985:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,988:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,989:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,992:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:08,998:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,001:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,003:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,004:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,008:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,012:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,028:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,031:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,032:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,033:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,034:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,035:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,052:INFO:Calculating mean and std
2025-09-02 18:54:09,053:INFO:Creating metrics dataframe
2025-09-02 18:54:09,055:INFO:Uploading results into container
2025-09-02 18:54:09,055:INFO:Uploading model into container now
2025-09-02 18:54:09,056:INFO:_master_model_container: 5
2025-09-02 18:54:09,056:INFO:_display_container: 2
2025-09-02 18:54:09,057:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3743, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-02 18:54:09,057:INFO:create_model() successfully completed......................................
2025-09-02 18:54:09,235:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:09,235:INFO:Creating metrics dataframe
2025-09-02 18:54:09,241:INFO:Initializing Ridge Classifier
2025-09-02 18:54:09,241:INFO:Total runtime is 0.04096626043319702 minutes
2025-09-02 18:54:09,245:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:09,246:INFO:Initializing create_model()
2025-09-02 18:54:09,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:09,246:INFO:Checking exceptions
2025-09-02 18:54:09,246:INFO:Importing libraries
2025-09-02 18:54:09,246:INFO:Copying training dataset
2025-09-02 18:54:09,252:INFO:Defining folds
2025-09-02 18:54:09,252:INFO:Declaring metric variables
2025-09-02 18:54:09,254:INFO:Importing untrained model
2025-09-02 18:54:09,260:INFO:Ridge Classifier Imported successfully
2025-09-02 18:54:09,272:INFO:Starting cross validation
2025-09-02 18:54:09,274:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:09,302:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.90384e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:09,305:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.542e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:09,310:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.74599e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:09,315:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.70854e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:09,315:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,318:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,321:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,322:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,325:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,325:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,326:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,330:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,334:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,334:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,337:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,340:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,349:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.03379e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:09,352:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.91415e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:09,363:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,364:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.68038e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:09,365:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.07588e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:09,366:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,367:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,369:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,370:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,372:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,377:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,380:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,382:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,383:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,385:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,386:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,393:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.76752e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:09,405:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,407:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,407:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,409:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,409:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,429:INFO:Calculating mean and std
2025-09-02 18:54:09,430:INFO:Creating metrics dataframe
2025-09-02 18:54:09,432:INFO:Uploading results into container
2025-09-02 18:54:09,432:INFO:Uploading model into container now
2025-09-02 18:54:09,433:INFO:_master_model_container: 6
2025-09-02 18:54:09,434:INFO:_display_container: 2
2025-09-02 18:54:09,435:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3743, solver='auto',
                tol=0.0001)
2025-09-02 18:54:09,435:INFO:create_model() successfully completed......................................
2025-09-02 18:54:09,613:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:09,614:INFO:Creating metrics dataframe
2025-09-02 18:54:09,620:INFO:Initializing Random Forest Classifier
2025-09-02 18:54:09,620:INFO:Total runtime is 0.047278638680775954 minutes
2025-09-02 18:54:09,622:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:09,623:INFO:Initializing create_model()
2025-09-02 18:54:09,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:09,623:INFO:Checking exceptions
2025-09-02 18:54:09,623:INFO:Importing libraries
2025-09-02 18:54:09,623:INFO:Copying training dataset
2025-09-02 18:54:09,630:INFO:Defining folds
2025-09-02 18:54:09,630:INFO:Declaring metric variables
2025-09-02 18:54:09,633:INFO:Importing untrained model
2025-09-02 18:54:09,639:INFO:Random Forest Classifier Imported successfully
2025-09-02 18:54:09,650:INFO:Starting cross validation
2025-09-02 18:54:09,652:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:09,979:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,979:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,980:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,982:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,982:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,983:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,985:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:09,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,025:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,030:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,032:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,262:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,264:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,265:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,267:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,268:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,271:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,306:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,310:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,313:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,418:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,421:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,424:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,545:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,548:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,551:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,551:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,568:INFO:Calculating mean and std
2025-09-02 18:54:10,570:INFO:Creating metrics dataframe
2025-09-02 18:54:10,573:INFO:Uploading results into container
2025-09-02 18:54:10,573:INFO:Uploading model into container now
2025-09-02 18:54:10,574:INFO:_master_model_container: 7
2025-09-02 18:54:10,574:INFO:_display_container: 2
2025-09-02 18:54:10,575:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3743, verbose=0,
                       warm_start=False)
2025-09-02 18:54:10,576:INFO:create_model() successfully completed......................................
2025-09-02 18:54:10,761:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:10,761:INFO:Creating metrics dataframe
2025-09-02 18:54:10,770:INFO:Initializing Quadratic Discriminant Analysis
2025-09-02 18:54:10,770:INFO:Total runtime is 0.06644428173700968 minutes
2025-09-02 18:54:10,772:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:10,773:INFO:Initializing create_model()
2025-09-02 18:54:10,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:10,773:INFO:Checking exceptions
2025-09-02 18:54:10,773:INFO:Importing libraries
2025-09-02 18:54:10,773:INFO:Copying training dataset
2025-09-02 18:54:10,781:INFO:Defining folds
2025-09-02 18:54:10,781:INFO:Declaring metric variables
2025-09-02 18:54:10,784:INFO:Importing untrained model
2025-09-02 18:54:10,790:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-02 18:54:10,799:INFO:Starting cross validation
2025-09-02 18:54:10,801:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:10,843:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,846:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,846:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,847:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,856:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,860:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,862:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,865:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,895:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,899:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,903:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,933:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,937:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,965:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,969:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,976:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,977:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,980:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,983:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,988:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:10,993:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,005:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,020:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,024:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,026:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,037:INFO:Calculating mean and std
2025-09-02 18:54:11,038:INFO:Creating metrics dataframe
2025-09-02 18:54:11,040:INFO:Uploading results into container
2025-09-02 18:54:11,041:INFO:Uploading model into container now
2025-09-02 18:54:11,042:INFO:_master_model_container: 8
2025-09-02 18:54:11,043:INFO:_display_container: 2
2025-09-02 18:54:11,044:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-02 18:54:11,044:INFO:create_model() successfully completed......................................
2025-09-02 18:54:11,222:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:11,222:INFO:Creating metrics dataframe
2025-09-02 18:54:11,230:INFO:Initializing Ada Boost Classifier
2025-09-02 18:54:11,230:INFO:Total runtime is 0.07411340872446696 minutes
2025-09-02 18:54:11,232:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:11,233:INFO:Initializing create_model()
2025-09-02 18:54:11,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:11,233:INFO:Checking exceptions
2025-09-02 18:54:11,233:INFO:Importing libraries
2025-09-02 18:54:11,233:INFO:Copying training dataset
2025-09-02 18:54:11,240:INFO:Defining folds
2025-09-02 18:54:11,240:INFO:Declaring metric variables
2025-09-02 18:54:11,243:INFO:Importing untrained model
2025-09-02 18:54:11,250:INFO:Ada Boost Classifier Imported successfully
2025-09-02 18:54:11,260:INFO:Starting cross validation
2025-09-02 18:54:11,262:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:11,288:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:11,288:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:11,301:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:11,305:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:11,487:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,487:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,491:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,492:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,494:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,495:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,514:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,516:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:11,518:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,518:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:11,520:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,521:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,544:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:11,546:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:11,711:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,713:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,714:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,716:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,717:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,719:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,736:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:11,736:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,740:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,740:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,743:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:11,743:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,743:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,746:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,878:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,880:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,882:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,882:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,883:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,885:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:11,902:INFO:Calculating mean and std
2025-09-02 18:54:11,904:INFO:Creating metrics dataframe
2025-09-02 18:54:11,907:INFO:Uploading results into container
2025-09-02 18:54:11,908:INFO:Uploading model into container now
2025-09-02 18:54:11,908:INFO:_master_model_container: 9
2025-09-02 18:54:11,908:INFO:_display_container: 2
2025-09-02 18:54:11,908:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3743)
2025-09-02 18:54:11,908:INFO:create_model() successfully completed......................................
2025-09-02 18:54:12,092:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:12,092:INFO:Creating metrics dataframe
2025-09-02 18:54:12,099:INFO:Initializing Gradient Boosting Classifier
2025-09-02 18:54:12,099:INFO:Total runtime is 0.08858878215154012 minutes
2025-09-02 18:54:12,105:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:12,106:INFO:Initializing create_model()
2025-09-02 18:54:12,106:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:12,106:INFO:Checking exceptions
2025-09-02 18:54:12,106:INFO:Importing libraries
2025-09-02 18:54:12,106:INFO:Copying training dataset
2025-09-02 18:54:12,111:INFO:Defining folds
2025-09-02 18:54:12,112:INFO:Declaring metric variables
2025-09-02 18:54:12,114:INFO:Importing untrained model
2025-09-02 18:54:12,120:INFO:Gradient Boosting Classifier Imported successfully
2025-09-02 18:54:12,130:INFO:Starting cross validation
2025-09-02 18:54:12,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:12,656:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,660:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,662:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,663:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,664:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,665:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,665:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,667:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,670:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,672:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,674:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:12,674:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,185:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,187:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,189:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,190:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,191:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,192:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,193:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,194:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,196:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,202:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,206:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,209:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,579:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,581:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,584:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,584:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,590:INFO:Calculating mean and std
2025-09-02 18:54:13,591:INFO:Creating metrics dataframe
2025-09-02 18:54:13,594:INFO:Uploading results into container
2025-09-02 18:54:13,594:INFO:Uploading model into container now
2025-09-02 18:54:13,595:INFO:_master_model_container: 10
2025-09-02 18:54:13,595:INFO:_display_container: 2
2025-09-02 18:54:13,596:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3743, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-02 18:54:13,596:INFO:create_model() successfully completed......................................
2025-09-02 18:54:13,775:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:13,776:INFO:Creating metrics dataframe
2025-09-02 18:54:13,784:INFO:Initializing Linear Discriminant Analysis
2025-09-02 18:54:13,784:INFO:Total runtime is 0.11667774120966592 minutes
2025-09-02 18:54:13,788:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:13,788:INFO:Initializing create_model()
2025-09-02 18:54:13,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:13,788:INFO:Checking exceptions
2025-09-02 18:54:13,788:INFO:Importing libraries
2025-09-02 18:54:13,788:INFO:Copying training dataset
2025-09-02 18:54:13,793:INFO:Defining folds
2025-09-02 18:54:13,794:INFO:Declaring metric variables
2025-09-02 18:54:13,801:INFO:Importing untrained model
2025-09-02 18:54:13,807:INFO:Linear Discriminant Analysis Imported successfully
2025-09-02 18:54:13,813:INFO:Starting cross validation
2025-09-02 18:54:13,815:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:13,858:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,861:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,863:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,864:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,866:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,870:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,871:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,872:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,876:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,879:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,893:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,896:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,908:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,908:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,911:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,911:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,912:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,913:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,914:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,916:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,919:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,934:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,937:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,942:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,944:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,946:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,949:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,953:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,955:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:13,966:INFO:Calculating mean and std
2025-09-02 18:54:13,967:INFO:Creating metrics dataframe
2025-09-02 18:54:13,968:INFO:Uploading results into container
2025-09-02 18:54:13,969:INFO:Uploading model into container now
2025-09-02 18:54:13,969:INFO:_master_model_container: 11
2025-09-02 18:54:13,969:INFO:_display_container: 2
2025-09-02 18:54:13,969:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-02 18:54:13,969:INFO:create_model() successfully completed......................................
2025-09-02 18:54:14,149:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:14,149:INFO:Creating metrics dataframe
2025-09-02 18:54:14,159:INFO:Initializing Extra Trees Classifier
2025-09-02 18:54:14,159:INFO:Total runtime is 0.12293050289154052 minutes
2025-09-02 18:54:14,162:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:14,162:INFO:Initializing create_model()
2025-09-02 18:54:14,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:14,163:INFO:Checking exceptions
2025-09-02 18:54:14,163:INFO:Importing libraries
2025-09-02 18:54:14,163:INFO:Copying training dataset
2025-09-02 18:54:14,172:INFO:Defining folds
2025-09-02 18:54:14,172:INFO:Declaring metric variables
2025-09-02 18:54:14,176:INFO:Importing untrained model
2025-09-02 18:54:14,181:INFO:Extra Trees Classifier Imported successfully
2025-09-02 18:54:14,193:INFO:Starting cross validation
2025-09-02 18:54:14,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:14,423:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,425:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,426:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,426:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,428:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,429:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,429:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,432:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,433:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,499:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,502:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,506:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,638:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,641:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,643:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,654:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,656:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,659:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,663:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,667:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,765:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,768:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,771:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,858:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,861:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,861:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,864:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,865:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:14,884:INFO:Calculating mean and std
2025-09-02 18:54:14,886:INFO:Creating metrics dataframe
2025-09-02 18:54:14,890:INFO:Uploading results into container
2025-09-02 18:54:14,891:INFO:Uploading model into container now
2025-09-02 18:54:14,891:INFO:_master_model_container: 12
2025-09-02 18:54:14,891:INFO:_display_container: 2
2025-09-02 18:54:14,892:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3743, verbose=0,
                     warm_start=False)
2025-09-02 18:54:14,892:INFO:create_model() successfully completed......................................
2025-09-02 18:54:15,072:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:15,072:INFO:Creating metrics dataframe
2025-09-02 18:54:15,085:INFO:Initializing Light Gradient Boosting Machine
2025-09-02 18:54:15,086:INFO:Total runtime is 0.13838356335957844 minutes
2025-09-02 18:54:15,090:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:15,090:INFO:Initializing create_model()
2025-09-02 18:54:15,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:15,090:INFO:Checking exceptions
2025-09-02 18:54:15,090:INFO:Importing libraries
2025-09-02 18:54:15,090:INFO:Copying training dataset
2025-09-02 18:54:15,097:INFO:Defining folds
2025-09-02 18:54:15,097:INFO:Declaring metric variables
2025-09-02 18:54:15,100:INFO:Importing untrained model
2025-09-02 18:54:15,107:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-02 18:54:15,118:INFO:Starting cross validation
2025-09-02 18:54:15,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:15,338:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,341:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,346:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,349:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,352:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,355:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,363:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,366:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,370:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,405:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,408:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,410:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,565:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,569:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,572:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,586:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,589:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,595:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,613:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,617:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,620:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,642:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,646:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,742:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,746:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,748:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,756:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,758:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,761:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:15,773:INFO:Calculating mean and std
2025-09-02 18:54:15,775:INFO:Creating metrics dataframe
2025-09-02 18:54:15,779:INFO:Uploading results into container
2025-09-02 18:54:15,780:INFO:Uploading model into container now
2025-09-02 18:54:15,781:INFO:_master_model_container: 13
2025-09-02 18:54:15,781:INFO:_display_container: 2
2025-09-02 18:54:15,782:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3743, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-02 18:54:15,782:INFO:create_model() successfully completed......................................
2025-09-02 18:54:15,972:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:15,972:INFO:Creating metrics dataframe
2025-09-02 18:54:15,981:INFO:Initializing Dummy Classifier
2025-09-02 18:54:15,981:INFO:Total runtime is 0.15328940153121948 minutes
2025-09-02 18:54:15,984:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:15,984:INFO:Initializing create_model()
2025-09-02 18:54:15,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024348C77E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:15,985:INFO:Checking exceptions
2025-09-02 18:54:15,985:INFO:Importing libraries
2025-09-02 18:54:15,985:INFO:Copying training dataset
2025-09-02 18:54:15,990:INFO:Defining folds
2025-09-02 18:54:15,991:INFO:Declaring metric variables
2025-09-02 18:54:15,997:INFO:Importing untrained model
2025-09-02 18:54:16,001:INFO:Dummy Classifier Imported successfully
2025-09-02 18:54:16,011:INFO:Starting cross validation
2025-09-02 18:54:16,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:16,056:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,062:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,065:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,067:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:16,073:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,076:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,078:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:16,080:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,083:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,084:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:16,086:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,087:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,088:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:16,090:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,108:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,119:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,079:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,141:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,151:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,159:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,167:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,170:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:16,171:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,177:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,179:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,181:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:16,180:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:16,183:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,185:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,203:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,204:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:16,206:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,220:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,221:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,224:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,225:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:16,225:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:16,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:16,243:INFO:Calculating mean and std
2025-09-02 18:54:16,244:INFO:Creating metrics dataframe
2025-09-02 18:54:16,246:INFO:Uploading results into container
2025-09-02 18:54:16,246:INFO:Uploading model into container now
2025-09-02 18:54:16,248:INFO:_master_model_container: 14
2025-09-02 18:54:16,248:INFO:_display_container: 2
2025-09-02 18:54:16,248:INFO:DummyClassifier(constant=None, random_state=3743, strategy='prior')
2025-09-02 18:54:16,248:INFO:create_model() successfully completed......................................
2025-09-02 18:54:16,427:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:16,427:INFO:Creating metrics dataframe
2025-09-02 18:54:16,446:INFO:Initializing create_model()
2025-09-02 18:54:16,447:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3743), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:16,447:INFO:Checking exceptions
2025-09-02 18:54:16,449:INFO:Importing libraries
2025-09-02 18:54:16,449:INFO:Copying training dataset
2025-09-02 18:54:16,453:INFO:Defining folds
2025-09-02 18:54:16,453:INFO:Declaring metric variables
2025-09-02 18:54:16,453:INFO:Importing untrained model
2025-09-02 18:54:16,453:INFO:Declaring custom model
2025-09-02 18:54:16,454:INFO:Ada Boost Classifier Imported successfully
2025-09-02 18:54:16,454:INFO:Cross validation set to False
2025-09-02 18:54:16,454:INFO:Fitting Model
2025-09-02 18:54:16,585:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3743)
2025-09-02 18:54:16,585:INFO:create_model() successfully completed......................................
2025-09-02 18:54:16,788:INFO:_master_model_container: 14
2025-09-02 18:54:16,789:INFO:_display_container: 2
2025-09-02 18:54:16,789:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3743)
2025-09-02 18:54:16,789:INFO:compare_models() successfully completed......................................
2025-09-02 18:54:16,790:INFO:Initializing create_model()
2025-09-02 18:54:16,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002434A0C0EE0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:16,790:INFO:Checking exceptions
2025-09-02 18:54:29,905:INFO:PyCaret ClassificationExperiment
2025-09-02 18:54:29,905:INFO:Logging name: clf-default-name
2025-09-02 18:54:29,905:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-02 18:54:29,905:INFO:version 3.3.2
2025-09-02 18:54:29,905:INFO:Initializing setup()
2025-09-02 18:54:29,905:INFO:self.USI: f1cf
2025-09-02 18:54:29,905:INFO:self._variable_keys: {'fold_groups_param', '_ml_usecase', 'X', 'idx', 'seed', 'y_test', 'y_train', 'y', '_available_plots', 'X_train', 'exp_id', 'gpu_param', 'html_param', 'gpu_n_jobs_param', 'exp_name_log', 'is_multiclass', 'data', 'pipeline', 'n_jobs_param', 'target_param', 'fold_generator', 'log_plots_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fix_imbalance', 'X_test', 'memory'}
2025-09-02 18:54:29,905:INFO:Checking environment
2025-09-02 18:54:29,905:INFO:python_version: 3.10.11
2025-09-02 18:54:29,905:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-09-02 18:54:29,905:INFO:machine: AMD64
2025-09-02 18:54:29,905:INFO:platform: Windows-10-10.0.19045-SP0
2025-09-02 18:54:29,909:INFO:Memory: svmem(total=8299257856, available=888565760, percent=89.3, used=7410692096, free=888565760)
2025-09-02 18:54:29,909:INFO:Physical Core: 2
2025-09-02 18:54:29,909:INFO:Logical Core: 4
2025-09-02 18:54:29,909:INFO:Checking libraries
2025-09-02 18:54:29,909:INFO:System:
2025-09-02 18:54:29,909:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-09-02 18:54:29,909:INFO:executable: c:\Users\nguye\AppData\Local\Programs\Python\Python310\python.exe
2025-09-02 18:54:29,909:INFO:   machine: Windows-10-10.0.19045-SP0
2025-09-02 18:54:29,909:INFO:PyCaret required dependencies:
2025-09-02 18:54:29,910:INFO:                 pip: 23.0.1
2025-09-02 18:54:29,910:INFO:          setuptools: 65.5.0
2025-09-02 18:54:29,910:INFO:             pycaret: 3.3.2
2025-09-02 18:54:29,910:INFO:             IPython: 8.37.0
2025-09-02 18:54:29,910:INFO:          ipywidgets: 8.1.7
2025-09-02 18:54:29,910:INFO:                tqdm: 4.67.1
2025-09-02 18:54:29,910:INFO:               numpy: 1.26.4
2025-09-02 18:54:29,910:INFO:              pandas: 2.1.4
2025-09-02 18:54:29,910:INFO:              jinja2: 3.1.6
2025-09-02 18:54:29,910:INFO:               scipy: 1.11.4
2025-09-02 18:54:29,910:INFO:              joblib: 1.3.2
2025-09-02 18:54:29,910:INFO:             sklearn: 1.4.2
2025-09-02 18:54:29,910:INFO:                pyod: 2.0.5
2025-09-02 18:54:29,910:INFO:            imblearn: 0.14.0
2025-09-02 18:54:29,910:INFO:   category_encoders: 2.7.0
2025-09-02 18:54:29,910:INFO:            lightgbm: 4.6.0
2025-09-02 18:54:29,910:INFO:               numba: 0.61.2
2025-09-02 18:54:29,910:INFO:            requests: 2.32.4
2025-09-02 18:54:29,910:INFO:          matplotlib: 3.7.5
2025-09-02 18:54:29,910:INFO:          scikitplot: 0.3.7
2025-09-02 18:54:29,910:INFO:         yellowbrick: 1.5
2025-09-02 18:54:29,910:INFO:              plotly: 6.3.0
2025-09-02 18:54:29,910:INFO:    plotly-resampler: Not installed
2025-09-02 18:54:29,910:INFO:             kaleido: 1.0.0
2025-09-02 18:54:29,910:INFO:           schemdraw: 0.15
2025-09-02 18:54:29,910:INFO:         statsmodels: 0.14.5
2025-09-02 18:54:29,910:INFO:              sktime: 0.26.0
2025-09-02 18:54:29,910:INFO:               tbats: 1.1.3
2025-09-02 18:54:29,910:INFO:            pmdarima: 2.0.4
2025-09-02 18:54:29,910:INFO:              psutil: 7.0.0
2025-09-02 18:54:29,910:INFO:          markupsafe: 3.0.2
2025-09-02 18:54:29,910:INFO:             pickle5: Not installed
2025-09-02 18:54:29,910:INFO:         cloudpickle: 3.1.1
2025-09-02 18:54:29,910:INFO:         deprecation: 2.1.0
2025-09-02 18:54:29,910:INFO:              xxhash: 3.5.0
2025-09-02 18:54:29,910:INFO:           wurlitzer: Not installed
2025-09-02 18:54:29,910:INFO:PyCaret optional dependencies:
2025-09-02 18:54:29,910:INFO:                shap: Not installed
2025-09-02 18:54:29,910:INFO:           interpret: Not installed
2025-09-02 18:54:29,910:INFO:                umap: Not installed
2025-09-02 18:54:29,910:INFO:     ydata_profiling: Not installed
2025-09-02 18:54:29,910:INFO:  explainerdashboard: Not installed
2025-09-02 18:54:29,910:INFO:             autoviz: Not installed
2025-09-02 18:54:29,910:INFO:           fairlearn: Not installed
2025-09-02 18:54:29,911:INFO:          deepchecks: Not installed
2025-09-02 18:54:29,911:INFO:             xgboost: Not installed
2025-09-02 18:54:29,911:INFO:            catboost: Not installed
2025-09-02 18:54:29,911:INFO:              kmodes: Not installed
2025-09-02 18:54:29,911:INFO:             mlxtend: Not installed
2025-09-02 18:54:29,911:INFO:       statsforecast: Not installed
2025-09-02 18:54:29,911:INFO:        tune_sklearn: Not installed
2025-09-02 18:54:29,911:INFO:                 ray: Not installed
2025-09-02 18:54:29,911:INFO:            hyperopt: Not installed
2025-09-02 18:54:29,911:INFO:              optuna: Not installed
2025-09-02 18:54:29,911:INFO:               skopt: Not installed
2025-09-02 18:54:29,911:INFO:              mlflow: Not installed
2025-09-02 18:54:29,911:INFO:              gradio: Not installed
2025-09-02 18:54:29,911:INFO:             fastapi: Not installed
2025-09-02 18:54:29,911:INFO:             uvicorn: Not installed
2025-09-02 18:54:29,911:INFO:              m2cgen: Not installed
2025-09-02 18:54:29,911:INFO:           evidently: Not installed
2025-09-02 18:54:29,911:INFO:               fugue: Not installed
2025-09-02 18:54:29,911:INFO:           streamlit: Not installed
2025-09-02 18:54:29,911:INFO:             prophet: Not installed
2025-09-02 18:54:29,911:INFO:None
2025-09-02 18:54:29,911:INFO:Set up data.
2025-09-02 18:54:29,918:INFO:Set up folding strategy.
2025-09-02 18:54:29,918:INFO:Set up train/test split.
2025-09-02 18:54:29,924:INFO:Set up index.
2025-09-02 18:54:29,924:INFO:Assigning column types.
2025-09-02 18:54:29,929:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-02 18:54:29,966:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:54:29,967:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:54:29,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:29,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,026:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:54:30,026:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:54:30,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,049:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-02 18:54:30,085:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:54:30,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,158:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:54:30,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,183:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-02 18:54:30,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,303:INFO:Preparing preprocessing pipeline...
2025-09-02 18:54:30,305:INFO:Set up label encoding.
2025-09-02 18:54:30,305:INFO:Set up simple imputation.
2025-09-02 18:54:30,306:INFO:Set up column name cleaning.
2025-09-02 18:54:30,330:INFO:Finished creating preprocessing pipeline.
2025-09-02 18:54:30,334:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nguye\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'conc...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-02 18:54:30,334:INFO:Creating final display dataframe.
2025-09-02 18:54:30,436:INFO:Setup _display_container:                     Description             Value
0                    Session id              1243
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              f1cf
2025-09-02 18:54:30,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:54:30,580:INFO:setup() successfully completed in 0.68s...............
2025-09-02 18:54:30,580:INFO:Initializing compare_models()
2025-09-02 18:54:30,580:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-02 18:54:30,580:INFO:Checking exceptions
2025-09-02 18:54:30,584:INFO:Preparing display monitor
2025-09-02 18:54:30,615:INFO:Initializing Logistic Regression
2025-09-02 18:54:30,615:INFO:Total runtime is 0.0 minutes
2025-09-02 18:54:30,622:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:30,623:INFO:Initializing create_model()
2025-09-02 18:54:30,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:30,623:INFO:Checking exceptions
2025-09-02 18:54:30,623:INFO:Importing libraries
2025-09-02 18:54:30,623:INFO:Copying training dataset
2025-09-02 18:54:30,640:INFO:Defining folds
2025-09-02 18:54:30,640:INFO:Declaring metric variables
2025-09-02 18:54:30,644:INFO:Importing untrained model
2025-09-02 18:54:30,648:INFO:Logistic Regression Imported successfully
2025-09-02 18:54:30,656:INFO:Starting cross validation
2025-09-02 18:54:30,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:30,867:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:30,880:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:30,888:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,891:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,900:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,901:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,901:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:30,905:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,907:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:30,915:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,922:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,926:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,931:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,934:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,935:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:30,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,073:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:31,088:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,090:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:31,091:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,097:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,100:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:31,105:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,109:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,110:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:31,113:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,120:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,123:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,126:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,127:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,130:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,133:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,211:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:31,219:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:54:31,219:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,221:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,228:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,230:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,232:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,236:INFO:Calculating mean and std
2025-09-02 18:54:31,237:INFO:Creating metrics dataframe
2025-09-02 18:54:31,238:INFO:Uploading results into container
2025-09-02 18:54:31,238:INFO:Uploading model into container now
2025-09-02 18:54:31,239:INFO:_master_model_container: 1
2025-09-02 18:54:31,239:INFO:_display_container: 2
2025-09-02 18:54:31,239:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-02 18:54:31,239:INFO:create_model() successfully completed......................................
2025-09-02 18:54:31,413:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:31,413:INFO:Creating metrics dataframe
2025-09-02 18:54:31,419:INFO:Initializing K Neighbors Classifier
2025-09-02 18:54:31,419:INFO:Total runtime is 0.013391705354054768 minutes
2025-09-02 18:54:31,423:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:31,423:INFO:Initializing create_model()
2025-09-02 18:54:31,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:31,423:INFO:Checking exceptions
2025-09-02 18:54:31,423:INFO:Importing libraries
2025-09-02 18:54:31,423:INFO:Copying training dataset
2025-09-02 18:54:31,428:INFO:Defining folds
2025-09-02 18:54:31,428:INFO:Declaring metric variables
2025-09-02 18:54:31,431:INFO:Importing untrained model
2025-09-02 18:54:31,437:INFO:K Neighbors Classifier Imported successfully
2025-09-02 18:54:31,445:INFO:Starting cross validation
2025-09-02 18:54:31,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:31,508:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,511:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,515:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,578:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,582:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,582:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,586:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,609:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,613:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,614:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,617:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,618:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,621:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,622:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,660:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,663:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,664:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,665:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,665:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,668:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,669:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,669:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,669:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,671:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,672:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,695:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,697:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,699:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,712:INFO:Calculating mean and std
2025-09-02 18:54:31,713:INFO:Creating metrics dataframe
2025-09-02 18:54:31,715:INFO:Uploading results into container
2025-09-02 18:54:31,715:INFO:Uploading model into container now
2025-09-02 18:54:31,715:INFO:_master_model_container: 2
2025-09-02 18:54:31,715:INFO:_display_container: 2
2025-09-02 18:54:31,716:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-02 18:54:31,716:INFO:create_model() successfully completed......................................
2025-09-02 18:54:31,892:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:31,892:INFO:Creating metrics dataframe
2025-09-02 18:54:31,899:INFO:Initializing Naive Bayes
2025-09-02 18:54:31,899:INFO:Total runtime is 0.02139756679534912 minutes
2025-09-02 18:54:31,906:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:31,906:INFO:Initializing create_model()
2025-09-02 18:54:31,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:31,906:INFO:Checking exceptions
2025-09-02 18:54:31,906:INFO:Importing libraries
2025-09-02 18:54:31,906:INFO:Copying training dataset
2025-09-02 18:54:31,912:INFO:Defining folds
2025-09-02 18:54:31,912:INFO:Declaring metric variables
2025-09-02 18:54:31,918:INFO:Importing untrained model
2025-09-02 18:54:31,923:INFO:Naive Bayes Imported successfully
2025-09-02 18:54:31,929:INFO:Starting cross validation
2025-09-02 18:54:31,931:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:31,970:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,971:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,973:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,974:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,974:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,977:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,978:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,980:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,990:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:31,999:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,017:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,019:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,020:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,021:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,024:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,024:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,027:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,027:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,045:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,048:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,051:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,057:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,059:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,060:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,062:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,063:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,065:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,070:INFO:Calculating mean and std
2025-09-02 18:54:32,071:INFO:Creating metrics dataframe
2025-09-02 18:54:32,074:INFO:Uploading results into container
2025-09-02 18:54:32,074:INFO:Uploading model into container now
2025-09-02 18:54:32,075:INFO:_master_model_container: 3
2025-09-02 18:54:32,075:INFO:_display_container: 2
2025-09-02 18:54:32,075:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-02 18:54:32,075:INFO:create_model() successfully completed......................................
2025-09-02 18:54:32,250:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:32,250:INFO:Creating metrics dataframe
2025-09-02 18:54:32,256:INFO:Initializing Decision Tree Classifier
2025-09-02 18:54:32,256:INFO:Total runtime is 0.027343841393788655 minutes
2025-09-02 18:54:32,259:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:32,260:INFO:Initializing create_model()
2025-09-02 18:54:32,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:32,260:INFO:Checking exceptions
2025-09-02 18:54:32,260:INFO:Importing libraries
2025-09-02 18:54:32,260:INFO:Copying training dataset
2025-09-02 18:54:32,266:INFO:Defining folds
2025-09-02 18:54:32,267:INFO:Declaring metric variables
2025-09-02 18:54:32,272:INFO:Importing untrained model
2025-09-02 18:54:32,276:INFO:Decision Tree Classifier Imported successfully
2025-09-02 18:54:32,284:INFO:Starting cross validation
2025-09-02 18:54:32,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:32,327:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,335:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,336:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,337:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,338:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,338:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,340:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,341:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,343:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,359:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,362:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,367:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,379:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,380:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,384:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,387:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,389:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,391:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,394:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,397:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,413:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,418:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,422:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,425:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,427:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,428:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,429:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,430:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,430:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,448:INFO:Calculating mean and std
2025-09-02 18:54:32,450:INFO:Creating metrics dataframe
2025-09-02 18:54:32,452:INFO:Uploading results into container
2025-09-02 18:54:32,453:INFO:Uploading model into container now
2025-09-02 18:54:32,453:INFO:_master_model_container: 4
2025-09-02 18:54:32,454:INFO:_display_container: 2
2025-09-02 18:54:32,454:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1243, splitter='best')
2025-09-02 18:54:32,455:INFO:create_model() successfully completed......................................
2025-09-02 18:54:32,630:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:32,630:INFO:Creating metrics dataframe
2025-09-02 18:54:32,637:INFO:Initializing SVM - Linear Kernel
2025-09-02 18:54:32,638:INFO:Total runtime is 0.03370583454767863 minutes
2025-09-02 18:54:32,641:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:32,641:INFO:Initializing create_model()
2025-09-02 18:54:32,641:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:32,641:INFO:Checking exceptions
2025-09-02 18:54:32,641:INFO:Importing libraries
2025-09-02 18:54:32,641:INFO:Copying training dataset
2025-09-02 18:54:32,649:INFO:Defining folds
2025-09-02 18:54:32,650:INFO:Declaring metric variables
2025-09-02 18:54:32,654:INFO:Importing untrained model
2025-09-02 18:54:32,656:INFO:SVM - Linear Kernel Imported successfully
2025-09-02 18:54:32,663:INFO:Starting cross validation
2025-09-02 18:54:32,665:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:32,723:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,725:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,725:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,733:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,733:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,733:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,741:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,756:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,759:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,773:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,776:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,776:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,779:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,779:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,779:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,783:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,784:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,790:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,802:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,805:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,807:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,814:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,817:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,817:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,819:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,821:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:32,838:INFO:Calculating mean and std
2025-09-02 18:54:32,839:INFO:Creating metrics dataframe
2025-09-02 18:54:32,842:INFO:Uploading results into container
2025-09-02 18:54:32,842:INFO:Uploading model into container now
2025-09-02 18:54:32,843:INFO:_master_model_container: 5
2025-09-02 18:54:32,843:INFO:_display_container: 2
2025-09-02 18:54:32,843:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1243, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-02 18:54:32,844:INFO:create_model() successfully completed......................................
2025-09-02 18:54:33,032:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:33,032:INFO:Creating metrics dataframe
2025-09-02 18:54:33,042:INFO:Initializing Ridge Classifier
2025-09-02 18:54:33,043:INFO:Total runtime is 0.04045580625534058 minutes
2025-09-02 18:54:33,046:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:33,047:INFO:Initializing create_model()
2025-09-02 18:54:33,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:33,048:INFO:Checking exceptions
2025-09-02 18:54:33,048:INFO:Importing libraries
2025-09-02 18:54:33,048:INFO:Copying training dataset
2025-09-02 18:54:33,058:INFO:Defining folds
2025-09-02 18:54:33,059:INFO:Declaring metric variables
2025-09-02 18:54:33,063:INFO:Importing untrained model
2025-09-02 18:54:33,069:INFO:Ridge Classifier Imported successfully
2025-09-02 18:54:33,076:INFO:Starting cross validation
2025-09-02 18:54:33,078:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:33,109:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.53149e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:33,111:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.78923e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:33,114:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.02423e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:33,122:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,124:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,125:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,127:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,128:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.37549e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:33,133:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,135:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,137:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,139:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,145:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,158:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,164:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.73553e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:33,166:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,170:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,174:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.62782e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:33,181:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,184:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,184:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,188:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,191:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,191:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,192:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.39184e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:33,200:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,204:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,210:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,210:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.45442e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:54:33,214:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,219:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,225:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,225:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,228:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,245:INFO:Calculating mean and std
2025-09-02 18:54:33,248:INFO:Creating metrics dataframe
2025-09-02 18:54:33,251:INFO:Uploading results into container
2025-09-02 18:54:33,251:INFO:Uploading model into container now
2025-09-02 18:54:33,252:INFO:_master_model_container: 6
2025-09-02 18:54:33,252:INFO:_display_container: 2
2025-09-02 18:54:33,252:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1243, solver='auto',
                tol=0.0001)
2025-09-02 18:54:33,252:INFO:create_model() successfully completed......................................
2025-09-02 18:54:33,428:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:33,429:INFO:Creating metrics dataframe
2025-09-02 18:54:33,440:INFO:Initializing Random Forest Classifier
2025-09-02 18:54:33,440:INFO:Total runtime is 0.04707672993342082 minutes
2025-09-02 18:54:33,443:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:33,443:INFO:Initializing create_model()
2025-09-02 18:54:33,443:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:33,443:INFO:Checking exceptions
2025-09-02 18:54:33,444:INFO:Importing libraries
2025-09-02 18:54:33,444:INFO:Copying training dataset
2025-09-02 18:54:33,456:INFO:Defining folds
2025-09-02 18:54:33,456:INFO:Declaring metric variables
2025-09-02 18:54:33,458:INFO:Importing untrained model
2025-09-02 18:54:33,465:INFO:Random Forest Classifier Imported successfully
2025-09-02 18:54:33,477:INFO:Starting cross validation
2025-09-02 18:54:33,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:33,807:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,810:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,815:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,816:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,822:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,826:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,854:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,857:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,860:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,868:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,872:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:33,875:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,120:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,124:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,130:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,169:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,173:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,176:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,183:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,187:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,191:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,276:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,283:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,288:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,430:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,433:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,436:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,437:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,440:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,441:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,452:INFO:Calculating mean and std
2025-09-02 18:54:34,453:INFO:Creating metrics dataframe
2025-09-02 18:54:34,455:INFO:Uploading results into container
2025-09-02 18:54:34,456:INFO:Uploading model into container now
2025-09-02 18:54:34,457:INFO:_master_model_container: 7
2025-09-02 18:54:34,457:INFO:_display_container: 2
2025-09-02 18:54:34,457:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1243, verbose=0,
                       warm_start=False)
2025-09-02 18:54:34,458:INFO:create_model() successfully completed......................................
2025-09-02 18:54:34,655:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:34,656:INFO:Creating metrics dataframe
2025-09-02 18:54:34,663:INFO:Initializing Quadratic Discriminant Analysis
2025-09-02 18:54:34,663:INFO:Total runtime is 0.06746069192886353 minutes
2025-09-02 18:54:34,666:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:34,666:INFO:Initializing create_model()
2025-09-02 18:54:34,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:34,666:INFO:Checking exceptions
2025-09-02 18:54:34,666:INFO:Importing libraries
2025-09-02 18:54:34,667:INFO:Copying training dataset
2025-09-02 18:54:34,673:INFO:Defining folds
2025-09-02 18:54:34,673:INFO:Declaring metric variables
2025-09-02 18:54:34,676:INFO:Importing untrained model
2025-09-02 18:54:34,683:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-02 18:54:34,689:INFO:Starting cross validation
2025-09-02 18:54:34,690:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:34,735:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,740:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,741:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,747:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,748:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,752:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,753:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,755:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,758:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,817:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,820:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,821:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,824:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,825:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,831:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,836:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,839:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,844:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,855:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,858:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,862:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,906:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,910:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,911:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,912:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,915:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,915:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,916:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,918:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,921:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:34,936:INFO:Calculating mean and std
2025-09-02 18:54:34,937:INFO:Creating metrics dataframe
2025-09-02 18:54:34,939:INFO:Uploading results into container
2025-09-02 18:54:34,940:INFO:Uploading model into container now
2025-09-02 18:54:34,940:INFO:_master_model_container: 8
2025-09-02 18:54:34,941:INFO:_display_container: 2
2025-09-02 18:54:34,943:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-02 18:54:34,943:INFO:create_model() successfully completed......................................
2025-09-02 18:54:35,120:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:35,120:INFO:Creating metrics dataframe
2025-09-02 18:54:35,127:INFO:Initializing Ada Boost Classifier
2025-09-02 18:54:35,127:INFO:Total runtime is 0.07519408861796062 minutes
2025-09-02 18:54:35,130:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:35,130:INFO:Initializing create_model()
2025-09-02 18:54:35,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:35,130:INFO:Checking exceptions
2025-09-02 18:54:35,130:INFO:Importing libraries
2025-09-02 18:54:35,130:INFO:Copying training dataset
2025-09-02 18:54:35,136:INFO:Defining folds
2025-09-02 18:54:35,136:INFO:Declaring metric variables
2025-09-02 18:54:35,139:INFO:Importing untrained model
2025-09-02 18:54:35,149:INFO:Ada Boost Classifier Imported successfully
2025-09-02 18:54:35,155:INFO:Starting cross validation
2025-09-02 18:54:35,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:35,186:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:35,187:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:35,190:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:35,211:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:35,392:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,393:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,394:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,395:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,396:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,397:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,398:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,399:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,400:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,416:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,420:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,422:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:35,422:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:35,425:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,425:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:35,452:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:35,633:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,636:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,643:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,644:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,646:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,647:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,650:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:35,666:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:54:35,679:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,681:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,684:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,810:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,813:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,814:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,816:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,817:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,818:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:35,824:INFO:Calculating mean and std
2025-09-02 18:54:35,825:INFO:Creating metrics dataframe
2025-09-02 18:54:35,827:INFO:Uploading results into container
2025-09-02 18:54:35,827:INFO:Uploading model into container now
2025-09-02 18:54:35,827:INFO:_master_model_container: 9
2025-09-02 18:54:35,827:INFO:_display_container: 2
2025-09-02 18:54:35,828:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1243)
2025-09-02 18:54:35,828:INFO:create_model() successfully completed......................................
2025-09-02 18:54:36,023:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:36,023:INFO:Creating metrics dataframe
2025-09-02 18:54:36,030:INFO:Initializing Gradient Boosting Classifier
2025-09-02 18:54:36,030:INFO:Total runtime is 0.0902383049329122 minutes
2025-09-02 18:54:36,032:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:36,032:INFO:Initializing create_model()
2025-09-02 18:54:36,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:36,033:INFO:Checking exceptions
2025-09-02 18:54:36,033:INFO:Importing libraries
2025-09-02 18:54:36,033:INFO:Copying training dataset
2025-09-02 18:54:36,039:INFO:Defining folds
2025-09-02 18:54:36,039:INFO:Declaring metric variables
2025-09-02 18:54:36,043:INFO:Importing untrained model
2025-09-02 18:54:36,049:INFO:Gradient Boosting Classifier Imported successfully
2025-09-02 18:54:36,058:INFO:Starting cross validation
2025-09-02 18:54:36,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:36,592:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,592:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,595:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,595:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,598:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,598:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,598:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,603:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,608:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,617:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,622:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:36,625:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,125:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,126:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,127:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,129:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,130:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,131:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,150:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,155:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,158:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,158:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,160:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,163:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,545:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,546:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,547:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,548:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,550:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,565:INFO:Calculating mean and std
2025-09-02 18:54:37,566:INFO:Creating metrics dataframe
2025-09-02 18:54:37,570:INFO:Uploading results into container
2025-09-02 18:54:37,571:INFO:Uploading model into container now
2025-09-02 18:54:37,571:INFO:_master_model_container: 10
2025-09-02 18:54:37,571:INFO:_display_container: 2
2025-09-02 18:54:37,572:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1243, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-02 18:54:37,573:INFO:create_model() successfully completed......................................
2025-09-02 18:54:37,757:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:37,757:INFO:Creating metrics dataframe
2025-09-02 18:54:37,764:INFO:Initializing Linear Discriminant Analysis
2025-09-02 18:54:37,764:INFO:Total runtime is 0.11914907693862915 minutes
2025-09-02 18:54:37,768:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:37,769:INFO:Initializing create_model()
2025-09-02 18:54:37,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:37,769:INFO:Checking exceptions
2025-09-02 18:54:37,769:INFO:Importing libraries
2025-09-02 18:54:37,769:INFO:Copying training dataset
2025-09-02 18:54:37,775:INFO:Defining folds
2025-09-02 18:54:37,775:INFO:Declaring metric variables
2025-09-02 18:54:37,780:INFO:Importing untrained model
2025-09-02 18:54:37,787:INFO:Linear Discriminant Analysis Imported successfully
2025-09-02 18:54:37,795:INFO:Starting cross validation
2025-09-02 18:54:37,797:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:37,842:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,844:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,849:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,851:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,854:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,856:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,856:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,858:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,862:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,863:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,869:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,870:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,896:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,899:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,899:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,903:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,904:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,907:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,907:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,910:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,914:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,915:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,920:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,923:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,933:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,937:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,943:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,945:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:37,950:INFO:Calculating mean and std
2025-09-02 18:54:37,952:INFO:Creating metrics dataframe
2025-09-02 18:54:37,953:INFO:Uploading results into container
2025-09-02 18:54:37,953:INFO:Uploading model into container now
2025-09-02 18:54:37,953:INFO:_master_model_container: 11
2025-09-02 18:54:37,954:INFO:_display_container: 2
2025-09-02 18:54:37,954:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-02 18:54:37,955:INFO:create_model() successfully completed......................................
2025-09-02 18:54:38,138:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:38,139:INFO:Creating metrics dataframe
2025-09-02 18:54:38,146:INFO:Initializing Extra Trees Classifier
2025-09-02 18:54:38,146:INFO:Total runtime is 0.12551132837931314 minutes
2025-09-02 18:54:38,148:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:38,149:INFO:Initializing create_model()
2025-09-02 18:54:38,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:38,150:INFO:Checking exceptions
2025-09-02 18:54:38,151:INFO:Importing libraries
2025-09-02 18:54:38,151:INFO:Copying training dataset
2025-09-02 18:54:38,156:INFO:Defining folds
2025-09-02 18:54:38,157:INFO:Declaring metric variables
2025-09-02 18:54:38,161:INFO:Importing untrained model
2025-09-02 18:54:38,168:INFO:Extra Trees Classifier Imported successfully
2025-09-02 18:54:38,178:INFO:Starting cross validation
2025-09-02 18:54:38,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:38,408:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,408:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,411:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,411:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,413:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,415:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,416:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,417:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,502:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,505:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,508:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,641:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,644:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,645:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,645:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,647:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,648:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,652:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,780:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,782:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,784:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,858:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,861:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,862:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,862:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:38,883:INFO:Calculating mean and std
2025-09-02 18:54:38,885:INFO:Creating metrics dataframe
2025-09-02 18:54:38,891:INFO:Uploading results into container
2025-09-02 18:54:38,892:INFO:Uploading model into container now
2025-09-02 18:54:38,893:INFO:_master_model_container: 12
2025-09-02 18:54:38,893:INFO:_display_container: 2
2025-09-02 18:54:38,893:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1243, verbose=0,
                     warm_start=False)
2025-09-02 18:54:38,893:INFO:create_model() successfully completed......................................
2025-09-02 18:54:39,071:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:39,071:INFO:Creating metrics dataframe
2025-09-02 18:54:39,078:INFO:Initializing Light Gradient Boosting Machine
2025-09-02 18:54:39,079:INFO:Total runtime is 0.1410650094350179 minutes
2025-09-02 18:54:39,083:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:39,084:INFO:Initializing create_model()
2025-09-02 18:54:39,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:39,084:INFO:Checking exceptions
2025-09-02 18:54:39,084:INFO:Importing libraries
2025-09-02 18:54:39,084:INFO:Copying training dataset
2025-09-02 18:54:39,090:INFO:Defining folds
2025-09-02 18:54:39,090:INFO:Declaring metric variables
2025-09-02 18:54:39,093:INFO:Importing untrained model
2025-09-02 18:54:39,101:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-02 18:54:39,109:INFO:Starting cross validation
2025-09-02 18:54:39,110:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:39,343:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,349:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,352:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,353:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,357:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,360:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,376:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,381:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,384:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,392:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,396:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,400:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,580:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,584:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,587:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,590:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,593:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,598:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,608:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,611:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,616:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,643:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,647:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,650:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,750:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,753:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,755:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,757:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,760:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,763:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:39,773:INFO:Calculating mean and std
2025-09-02 18:54:39,774:INFO:Creating metrics dataframe
2025-09-02 18:54:39,776:INFO:Uploading results into container
2025-09-02 18:54:39,777:INFO:Uploading model into container now
2025-09-02 18:54:39,777:INFO:_master_model_container: 13
2025-09-02 18:54:39,777:INFO:_display_container: 2
2025-09-02 18:54:39,781:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-02 18:54:39,781:INFO:create_model() successfully completed......................................
2025-09-02 18:54:39,970:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:39,970:INFO:Creating metrics dataframe
2025-09-02 18:54:39,979:INFO:Initializing Dummy Classifier
2025-09-02 18:54:39,979:INFO:Total runtime is 0.15607070525487263 minutes
2025-09-02 18:54:39,981:INFO:SubProcess create_model() called ==================================
2025-09-02 18:54:39,982:INFO:Initializing create_model()
2025-09-02 18:54:39,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024347BAC310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:39,982:INFO:Checking exceptions
2025-09-02 18:54:39,982:INFO:Importing libraries
2025-09-02 18:54:39,982:INFO:Copying training dataset
2025-09-02 18:54:39,988:INFO:Defining folds
2025-09-02 18:54:39,988:INFO:Declaring metric variables
2025-09-02 18:54:39,991:INFO:Importing untrained model
2025-09-02 18:54:40,000:INFO:Dummy Classifier Imported successfully
2025-09-02 18:54:40,023:INFO:Starting cross validation
2025-09-02 18:54:40,024:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:54:40,066:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,069:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,070:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,070:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,071:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:40,073:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,074:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,074:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:40,079:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,088:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:40,092:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,098:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,099:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,101:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:40,103:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,114:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,115:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,117:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,118:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,119:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:40,119:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:40,121:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,121:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,137:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,138:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,140:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,141:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,142:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:40,142:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:40,145:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,145:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,153:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,154:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,155:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:54:40,157:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,157:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:54:40,163:INFO:Calculating mean and std
2025-09-02 18:54:40,164:INFO:Creating metrics dataframe
2025-09-02 18:54:40,166:INFO:Uploading results into container
2025-09-02 18:54:40,166:INFO:Uploading model into container now
2025-09-02 18:54:40,167:INFO:_master_model_container: 14
2025-09-02 18:54:40,167:INFO:_display_container: 2
2025-09-02 18:54:40,168:INFO:DummyClassifier(constant=None, random_state=1243, strategy='prior')
2025-09-02 18:54:40,168:INFO:create_model() successfully completed......................................
2025-09-02 18:54:40,395:INFO:SubProcess create_model() end ==================================
2025-09-02 18:54:40,395:INFO:Creating metrics dataframe
2025-09-02 18:54:40,416:INFO:Initializing create_model()
2025-09-02 18:54:40,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1243, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:40,416:INFO:Checking exceptions
2025-09-02 18:54:40,418:INFO:Importing libraries
2025-09-02 18:54:40,418:INFO:Copying training dataset
2025-09-02 18:54:40,422:INFO:Defining folds
2025-09-02 18:54:40,422:INFO:Declaring metric variables
2025-09-02 18:54:40,422:INFO:Importing untrained model
2025-09-02 18:54:40,423:INFO:Declaring custom model
2025-09-02 18:54:40,423:INFO:Extra Trees Classifier Imported successfully
2025-09-02 18:54:40,424:INFO:Cross validation set to False
2025-09-02 18:54:40,424:INFO:Fitting Model
2025-09-02 18:54:40,528:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1243, verbose=0,
                     warm_start=False)
2025-09-02 18:54:40,529:INFO:create_model() successfully completed......................................
2025-09-02 18:54:40,729:INFO:_master_model_container: 14
2025-09-02 18:54:40,730:INFO:_display_container: 2
2025-09-02 18:54:40,730:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1243, verbose=0,
                     warm_start=False)
2025-09-02 18:54:40,731:INFO:compare_models() successfully completed......................................
2025-09-02 18:54:40,732:INFO:Initializing create_model()
2025-09-02 18:54:40,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024348F39AB0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:54:40,732:INFO:Checking exceptions
2025-09-02 18:58:00,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 18:58:00,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 18:58:00,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 18:58:00,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 18:58:05,244:INFO:PyCaret ClassificationExperiment
2025-09-02 18:58:05,244:INFO:Logging name: clf-default-name
2025-09-02 18:58:05,244:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-02 18:58:05,244:INFO:version 3.3.2
2025-09-02 18:58:05,244:INFO:Initializing setup()
2025-09-02 18:58:05,244:INFO:self.USI: 56d7
2025-09-02 18:58:05,244:INFO:self._variable_keys: {'html_param', 'data', 'fold_groups_param', 'y', 'is_multiclass', 'gpu_n_jobs_param', 'fold_shuffle_param', 'fold_generator', 'X', 'USI', 'X_test', 'idx', 'n_jobs_param', 'gpu_param', 'logging_param', 'exp_name_log', 'log_plots_param', 'target_param', 'X_train', 'fix_imbalance', 'memory', '_ml_usecase', '_available_plots', 'y_train', 'y_test', 'exp_id', 'pipeline', 'seed'}
2025-09-02 18:58:05,244:INFO:Checking environment
2025-09-02 18:58:05,244:INFO:python_version: 3.10.11
2025-09-02 18:58:05,244:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-09-02 18:58:05,244:INFO:machine: AMD64
2025-09-02 18:58:05,244:INFO:platform: Windows-10-10.0.19045-SP0
2025-09-02 18:58:05,246:INFO:Memory: svmem(total=8299257856, available=1164718080, percent=86.0, used=7134539776, free=1164718080)
2025-09-02 18:58:05,246:INFO:Physical Core: 2
2025-09-02 18:58:05,246:INFO:Logical Core: 4
2025-09-02 18:58:05,247:INFO:Checking libraries
2025-09-02 18:58:05,247:INFO:System:
2025-09-02 18:58:05,247:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-09-02 18:58:05,247:INFO:executable: c:\Users\nguye\AppData\Local\Programs\Python\Python310\python.exe
2025-09-02 18:58:05,247:INFO:   machine: Windows-10-10.0.19045-SP0
2025-09-02 18:58:05,247:INFO:PyCaret required dependencies:
2025-09-02 18:58:05,279:INFO:                 pip: 23.0.1
2025-09-02 18:58:05,279:INFO:          setuptools: 65.5.0
2025-09-02 18:58:05,279:INFO:             pycaret: 3.3.2
2025-09-02 18:58:05,279:INFO:             IPython: 8.37.0
2025-09-02 18:58:05,279:INFO:          ipywidgets: 8.1.7
2025-09-02 18:58:05,279:INFO:                tqdm: 4.67.1
2025-09-02 18:58:05,279:INFO:               numpy: 1.26.4
2025-09-02 18:58:05,279:INFO:              pandas: 2.1.4
2025-09-02 18:58:05,279:INFO:              jinja2: 3.1.6
2025-09-02 18:58:05,279:INFO:               scipy: 1.11.4
2025-09-02 18:58:05,279:INFO:              joblib: 1.3.2
2025-09-02 18:58:05,279:INFO:             sklearn: 1.4.2
2025-09-02 18:58:05,279:INFO:                pyod: 2.0.5
2025-09-02 18:58:05,279:INFO:            imblearn: 0.14.0
2025-09-02 18:58:05,279:INFO:   category_encoders: 2.7.0
2025-09-02 18:58:05,279:INFO:            lightgbm: 4.6.0
2025-09-02 18:58:05,279:INFO:               numba: 0.61.2
2025-09-02 18:58:05,279:INFO:            requests: 2.32.4
2025-09-02 18:58:05,279:INFO:          matplotlib: 3.7.5
2025-09-02 18:58:05,280:INFO:          scikitplot: 0.3.7
2025-09-02 18:58:05,280:INFO:         yellowbrick: 1.5
2025-09-02 18:58:05,280:INFO:              plotly: 6.3.0
2025-09-02 18:58:05,280:INFO:    plotly-resampler: Not installed
2025-09-02 18:58:05,280:INFO:             kaleido: 1.0.0
2025-09-02 18:58:05,280:INFO:           schemdraw: 0.15
2025-09-02 18:58:05,280:INFO:         statsmodels: 0.14.5
2025-09-02 18:58:05,280:INFO:              sktime: 0.26.0
2025-09-02 18:58:05,280:INFO:               tbats: 1.1.3
2025-09-02 18:58:05,280:INFO:            pmdarima: 2.0.4
2025-09-02 18:58:05,280:INFO:              psutil: 7.0.0
2025-09-02 18:58:05,280:INFO:          markupsafe: 3.0.2
2025-09-02 18:58:05,280:INFO:             pickle5: Not installed
2025-09-02 18:58:05,280:INFO:         cloudpickle: 3.1.1
2025-09-02 18:58:05,280:INFO:         deprecation: 2.1.0
2025-09-02 18:58:05,280:INFO:              xxhash: 3.5.0
2025-09-02 18:58:05,280:INFO:           wurlitzer: Not installed
2025-09-02 18:58:05,280:INFO:PyCaret optional dependencies:
2025-09-02 18:58:05,290:INFO:                shap: Not installed
2025-09-02 18:58:05,290:INFO:           interpret: Not installed
2025-09-02 18:58:05,290:INFO:                umap: Not installed
2025-09-02 18:58:05,290:INFO:     ydata_profiling: Not installed
2025-09-02 18:58:05,290:INFO:  explainerdashboard: Not installed
2025-09-02 18:58:05,290:INFO:             autoviz: Not installed
2025-09-02 18:58:05,290:INFO:           fairlearn: Not installed
2025-09-02 18:58:05,290:INFO:          deepchecks: Not installed
2025-09-02 18:58:05,290:INFO:             xgboost: Not installed
2025-09-02 18:58:05,290:INFO:            catboost: Not installed
2025-09-02 18:58:05,290:INFO:              kmodes: Not installed
2025-09-02 18:58:05,290:INFO:             mlxtend: Not installed
2025-09-02 18:58:05,290:INFO:       statsforecast: Not installed
2025-09-02 18:58:05,290:INFO:        tune_sklearn: Not installed
2025-09-02 18:58:05,290:INFO:                 ray: Not installed
2025-09-02 18:58:05,290:INFO:            hyperopt: Not installed
2025-09-02 18:58:05,290:INFO:              optuna: Not installed
2025-09-02 18:58:05,290:INFO:               skopt: Not installed
2025-09-02 18:58:05,290:INFO:              mlflow: Not installed
2025-09-02 18:58:05,290:INFO:              gradio: Not installed
2025-09-02 18:58:05,290:INFO:             fastapi: Not installed
2025-09-02 18:58:05,291:INFO:             uvicorn: Not installed
2025-09-02 18:58:05,291:INFO:              m2cgen: Not installed
2025-09-02 18:58:05,291:INFO:           evidently: Not installed
2025-09-02 18:58:05,291:INFO:               fugue: Not installed
2025-09-02 18:58:05,291:INFO:           streamlit: Not installed
2025-09-02 18:58:05,291:INFO:             prophet: Not installed
2025-09-02 18:58:05,291:INFO:None
2025-09-02 18:58:05,291:INFO:Set up data.
2025-09-02 18:58:05,297:INFO:Set up folding strategy.
2025-09-02 18:58:05,297:INFO:Set up train/test split.
2025-09-02 18:58:05,306:INFO:Set up index.
2025-09-02 18:58:05,307:INFO:Assigning column types.
2025-09-02 18:58:05,311:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-02 18:58:05,346:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:58:05,350:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:58:05,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,417:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 18:58:05,418:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:58:05,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,443:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-02 18:58:05,478:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:58:05,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,537:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 18:58:05,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,558:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-02 18:58:05,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,694:INFO:Preparing preprocessing pipeline...
2025-09-02 18:58:05,695:INFO:Set up label encoding.
2025-09-02 18:58:05,696:INFO:Set up simple imputation.
2025-09-02 18:58:05,696:INFO:Set up column name cleaning.
2025-09-02 18:58:05,746:INFO:Finished creating preprocessing pipeline.
2025-09-02 18:58:05,753:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nguye\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'conc...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-02 18:58:05,754:INFO:Creating final display dataframe.
2025-09-02 18:58:05,861:INFO:Setup _display_container:                     Description             Value
0                    Session id              2951
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              56d7
2025-09-02 18:58:05,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 18:58:05,999:INFO:setup() successfully completed in 0.76s...............
2025-09-02 18:58:05,999:INFO:Initializing compare_models()
2025-09-02 18:58:05,999:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-02 18:58:05,999:INFO:Checking exceptions
2025-09-02 18:58:06,004:INFO:Preparing display monitor
2025-09-02 18:58:06,043:INFO:Initializing Logistic Regression
2025-09-02 18:58:06,043:INFO:Total runtime is 0.0 minutes
2025-09-02 18:58:06,047:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:06,047:INFO:Initializing create_model()
2025-09-02 18:58:06,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:06,048:INFO:Checking exceptions
2025-09-02 18:58:06,048:INFO:Importing libraries
2025-09-02 18:58:06,048:INFO:Copying training dataset
2025-09-02 18:58:06,063:INFO:Defining folds
2025-09-02 18:58:06,063:INFO:Declaring metric variables
2025-09-02 18:58:06,075:INFO:Importing untrained model
2025-09-02 18:58:06,086:INFO:Logistic Regression Imported successfully
2025-09-02 18:58:06,103:INFO:Starting cross validation
2025-09-02 18:58:06,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:10,612:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:58:10,616:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:58:10,631:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,634:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,634:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,638:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,638:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,638:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:58:10,641:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,662:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,667:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,672:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,848:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:58:10,867:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,872:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,875:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,923:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:58:10,930:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:58:10,939:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,944:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,946:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,947:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,949:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,950:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:58:10,957:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,970:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,974:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:10,978:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,124:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:58:11,139:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,139:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:58:11,142:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,144:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 18:58:11,144:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,153:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,156:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,158:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,158:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,160:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,161:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,172:INFO:Calculating mean and std
2025-09-02 18:58:11,173:INFO:Creating metrics dataframe
2025-09-02 18:58:11,177:INFO:Uploading results into container
2025-09-02 18:58:11,178:INFO:Uploading model into container now
2025-09-02 18:58:11,178:INFO:_master_model_container: 1
2025-09-02 18:58:11,178:INFO:_display_container: 2
2025-09-02 18:58:11,178:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2951, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-02 18:58:11,178:INFO:create_model() successfully completed......................................
2025-09-02 18:58:11,349:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:11,350:INFO:Creating metrics dataframe
2025-09-02 18:58:11,356:INFO:Initializing K Neighbors Classifier
2025-09-02 18:58:11,357:INFO:Total runtime is 0.08855063915252685 minutes
2025-09-02 18:58:11,360:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:11,360:INFO:Initializing create_model()
2025-09-02 18:58:11,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:11,360:INFO:Checking exceptions
2025-09-02 18:58:11,360:INFO:Importing libraries
2025-09-02 18:58:11,360:INFO:Copying training dataset
2025-09-02 18:58:11,366:INFO:Defining folds
2025-09-02 18:58:11,366:INFO:Declaring metric variables
2025-09-02 18:58:11,375:INFO:Importing untrained model
2025-09-02 18:58:11,379:INFO:K Neighbors Classifier Imported successfully
2025-09-02 18:58:11,388:INFO:Starting cross validation
2025-09-02 18:58:11,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:11,531:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,538:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,539:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,542:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,542:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,545:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,547:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,551:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,557:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,557:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,561:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,564:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,584:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,587:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,588:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,590:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,591:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,594:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,601:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,604:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,609:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,612:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,616:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,620:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,629:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,631:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,631:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,632:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,634:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,636:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,654:INFO:Calculating mean and std
2025-09-02 18:58:11,655:INFO:Creating metrics dataframe
2025-09-02 18:58:11,658:INFO:Uploading results into container
2025-09-02 18:58:11,658:INFO:Uploading model into container now
2025-09-02 18:58:11,659:INFO:_master_model_container: 2
2025-09-02 18:58:11,659:INFO:_display_container: 2
2025-09-02 18:58:11,659:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-02 18:58:11,659:INFO:create_model() successfully completed......................................
2025-09-02 18:58:11,781:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:11,781:INFO:Creating metrics dataframe
2025-09-02 18:58:11,788:INFO:Initializing Naive Bayes
2025-09-02 18:58:11,788:INFO:Total runtime is 0.09576492309570313 minutes
2025-09-02 18:58:11,790:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:11,791:INFO:Initializing create_model()
2025-09-02 18:58:11,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:11,791:INFO:Checking exceptions
2025-09-02 18:58:11,791:INFO:Importing libraries
2025-09-02 18:58:11,791:INFO:Copying training dataset
2025-09-02 18:58:11,797:INFO:Defining folds
2025-09-02 18:58:11,797:INFO:Declaring metric variables
2025-09-02 18:58:11,800:INFO:Importing untrained model
2025-09-02 18:58:11,807:INFO:Naive Bayes Imported successfully
2025-09-02 18:58:11,814:INFO:Starting cross validation
2025-09-02 18:58:11,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:11,861:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,862:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,871:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,872:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,873:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,874:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,876:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,876:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,879:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,896:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,906:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,909:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,915:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,921:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,922:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,924:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,926:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,928:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,928:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,936:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,948:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,953:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,955:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,959:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,962:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,964:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,964:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,969:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,971:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:11,983:INFO:Calculating mean and std
2025-09-02 18:58:11,984:INFO:Creating metrics dataframe
2025-09-02 18:58:11,986:INFO:Uploading results into container
2025-09-02 18:58:11,986:INFO:Uploading model into container now
2025-09-02 18:58:11,987:INFO:_master_model_container: 3
2025-09-02 18:58:11,987:INFO:_display_container: 2
2025-09-02 18:58:11,987:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-02 18:58:11,988:INFO:create_model() successfully completed......................................
2025-09-02 18:58:12,120:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:12,120:INFO:Creating metrics dataframe
2025-09-02 18:58:12,125:INFO:Initializing Decision Tree Classifier
2025-09-02 18:58:12,125:INFO:Total runtime is 0.10137617190678914 minutes
2025-09-02 18:58:12,128:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:12,129:INFO:Initializing create_model()
2025-09-02 18:58:12,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:12,129:INFO:Checking exceptions
2025-09-02 18:58:12,129:INFO:Importing libraries
2025-09-02 18:58:12,129:INFO:Copying training dataset
2025-09-02 18:58:12,137:INFO:Defining folds
2025-09-02 18:58:12,137:INFO:Declaring metric variables
2025-09-02 18:58:12,140:INFO:Importing untrained model
2025-09-02 18:58:12,148:INFO:Decision Tree Classifier Imported successfully
2025-09-02 18:58:12,161:INFO:Starting cross validation
2025-09-02 18:58:12,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:12,214:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,219:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,226:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,229:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,236:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,243:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,244:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,246:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,247:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,253:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,274:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,277:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,277:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,280:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,280:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,288:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,290:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,292:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,293:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,295:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,296:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,317:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,318:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,318:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,320:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,322:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,329:INFO:Calculating mean and std
2025-09-02 18:58:12,330:INFO:Creating metrics dataframe
2025-09-02 18:58:12,335:INFO:Uploading results into container
2025-09-02 18:58:12,336:INFO:Uploading model into container now
2025-09-02 18:58:12,336:INFO:_master_model_container: 4
2025-09-02 18:58:12,336:INFO:_display_container: 2
2025-09-02 18:58:12,336:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2951, splitter='best')
2025-09-02 18:58:12,336:INFO:create_model() successfully completed......................................
2025-09-02 18:58:12,459:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:12,460:INFO:Creating metrics dataframe
2025-09-02 18:58:12,466:INFO:Initializing SVM - Linear Kernel
2025-09-02 18:58:12,466:INFO:Total runtime is 0.10705812374750773 minutes
2025-09-02 18:58:12,469:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:12,469:INFO:Initializing create_model()
2025-09-02 18:58:12,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:12,469:INFO:Checking exceptions
2025-09-02 18:58:12,469:INFO:Importing libraries
2025-09-02 18:58:12,469:INFO:Copying training dataset
2025-09-02 18:58:12,476:INFO:Defining folds
2025-09-02 18:58:12,476:INFO:Declaring metric variables
2025-09-02 18:58:12,481:INFO:Importing untrained model
2025-09-02 18:58:12,489:INFO:SVM - Linear Kernel Imported successfully
2025-09-02 18:58:12,496:INFO:Starting cross validation
2025-09-02 18:58:12,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:12,540:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,542:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,551:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,552:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,557:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,558:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,561:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,561:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,568:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,587:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,591:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,594:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,608:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,609:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,611:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,612:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,617:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,617:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,620:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,624:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,635:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,639:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,643:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,650:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,652:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,655:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,655:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,657:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,660:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,672:INFO:Calculating mean and std
2025-09-02 18:58:12,673:INFO:Creating metrics dataframe
2025-09-02 18:58:12,674:INFO:Uploading results into container
2025-09-02 18:58:12,674:INFO:Uploading model into container now
2025-09-02 18:58:12,674:INFO:_master_model_container: 5
2025-09-02 18:58:12,674:INFO:_display_container: 2
2025-09-02 18:58:12,674:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2951, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-02 18:58:12,674:INFO:create_model() successfully completed......................................
2025-09-02 18:58:12,795:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:12,795:INFO:Creating metrics dataframe
2025-09-02 18:58:12,805:INFO:Initializing Ridge Classifier
2025-09-02 18:58:12,805:INFO:Total runtime is 0.1127095341682434 minutes
2025-09-02 18:58:12,808:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:12,809:INFO:Initializing create_model()
2025-09-02 18:58:12,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:12,809:INFO:Checking exceptions
2025-09-02 18:58:12,809:INFO:Importing libraries
2025-09-02 18:58:12,809:INFO:Copying training dataset
2025-09-02 18:58:12,817:INFO:Defining folds
2025-09-02 18:58:12,818:INFO:Declaring metric variables
2025-09-02 18:58:12,820:INFO:Importing untrained model
2025-09-02 18:58:12,826:INFO:Ridge Classifier Imported successfully
2025-09-02 18:58:12,837:INFO:Starting cross validation
2025-09-02 18:58:12,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:12,871:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.02827e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:58:12,872:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.05669e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:58:12,876:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.79224e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:58:12,892:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,893:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,895:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,895:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,898:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,899:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,899:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.1917e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:58:12,900:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,902:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,902:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,926:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,928:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.78963e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:58:12,928:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,928:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.84905e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:58:12,934:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,943:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,944:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,947:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,948:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,949:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,950:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,951:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,952:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,954:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,960:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.08255e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:58:12,971:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.64858e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:58:12,972:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.82837e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 18:58:12,976:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,980:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,980:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,982:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,983:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,989:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,991:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:12,997:INFO:Calculating mean and std
2025-09-02 18:58:12,998:INFO:Creating metrics dataframe
2025-09-02 18:58:13,001:INFO:Uploading results into container
2025-09-02 18:58:13,002:INFO:Uploading model into container now
2025-09-02 18:58:13,002:INFO:_master_model_container: 6
2025-09-02 18:58:13,002:INFO:_display_container: 2
2025-09-02 18:58:13,002:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2951, solver='auto',
                tol=0.0001)
2025-09-02 18:58:13,002:INFO:create_model() successfully completed......................................
2025-09-02 18:58:13,125:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:13,126:INFO:Creating metrics dataframe
2025-09-02 18:58:13,133:INFO:Initializing Random Forest Classifier
2025-09-02 18:58:13,133:INFO:Total runtime is 0.11817302703857421 minutes
2025-09-02 18:58:13,137:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:13,137:INFO:Initializing create_model()
2025-09-02 18:58:13,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:13,138:INFO:Checking exceptions
2025-09-02 18:58:13,138:INFO:Importing libraries
2025-09-02 18:58:13,138:INFO:Copying training dataset
2025-09-02 18:58:13,143:INFO:Defining folds
2025-09-02 18:58:13,144:INFO:Declaring metric variables
2025-09-02 18:58:13,147:INFO:Importing untrained model
2025-09-02 18:58:13,154:INFO:Random Forest Classifier Imported successfully
2025-09-02 18:58:13,164:INFO:Starting cross validation
2025-09-02 18:58:13,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:13,470:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,473:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,475:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,487:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,488:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,491:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,491:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,494:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,494:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,546:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,551:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,749:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,753:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,755:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,764:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,768:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,772:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,782:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,786:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,792:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,918:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,921:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,924:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:13,997:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,000:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,001:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,028:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,031:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,034:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,039:INFO:Calculating mean and std
2025-09-02 18:58:14,040:INFO:Creating metrics dataframe
2025-09-02 18:58:14,041:INFO:Uploading results into container
2025-09-02 18:58:14,042:INFO:Uploading model into container now
2025-09-02 18:58:14,042:INFO:_master_model_container: 7
2025-09-02 18:58:14,042:INFO:_display_container: 2
2025-09-02 18:58:14,045:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2951, verbose=0,
                       warm_start=False)
2025-09-02 18:58:14,045:INFO:create_model() successfully completed......................................
2025-09-02 18:58:14,169:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:14,169:INFO:Creating metrics dataframe
2025-09-02 18:58:14,176:INFO:Initializing Quadratic Discriminant Analysis
2025-09-02 18:58:14,177:INFO:Total runtime is 0.1355746070543925 minutes
2025-09-02 18:58:14,180:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:14,180:INFO:Initializing create_model()
2025-09-02 18:58:14,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:14,181:INFO:Checking exceptions
2025-09-02 18:58:14,181:INFO:Importing libraries
2025-09-02 18:58:14,181:INFO:Copying training dataset
2025-09-02 18:58:14,187:INFO:Defining folds
2025-09-02 18:58:14,187:INFO:Declaring metric variables
2025-09-02 18:58:14,190:INFO:Importing untrained model
2025-09-02 18:58:14,198:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-02 18:58:14,205:INFO:Starting cross validation
2025-09-02 18:58:14,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:14,296:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,300:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,303:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,305:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,310:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,316:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,335:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,336:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,339:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,340:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,344:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,344:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,358:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,362:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,366:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,372:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,379:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,382:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,393:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,397:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,398:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,400:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,401:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,404:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,406:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,410:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,413:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,415:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,417:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,419:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,430:INFO:Calculating mean and std
2025-09-02 18:58:14,431:INFO:Creating metrics dataframe
2025-09-02 18:58:14,432:INFO:Uploading results into container
2025-09-02 18:58:14,433:INFO:Uploading model into container now
2025-09-02 18:58:14,433:INFO:_master_model_container: 8
2025-09-02 18:58:14,433:INFO:_display_container: 2
2025-09-02 18:58:14,433:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-02 18:58:14,433:INFO:create_model() successfully completed......................................
2025-09-02 18:58:14,554:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:14,554:INFO:Creating metrics dataframe
2025-09-02 18:58:14,564:INFO:Initializing Ada Boost Classifier
2025-09-02 18:58:14,564:INFO:Total runtime is 0.14202003876368205 minutes
2025-09-02 18:58:14,568:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:14,568:INFO:Initializing create_model()
2025-09-02 18:58:14,568:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:14,569:INFO:Checking exceptions
2025-09-02 18:58:14,569:INFO:Importing libraries
2025-09-02 18:58:14,569:INFO:Copying training dataset
2025-09-02 18:58:14,576:INFO:Defining folds
2025-09-02 18:58:14,576:INFO:Declaring metric variables
2025-09-02 18:58:14,582:INFO:Importing untrained model
2025-09-02 18:58:14,599:INFO:Ada Boost Classifier Imported successfully
2025-09-02 18:58:14,615:INFO:Starting cross validation
2025-09-02 18:58:14,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:14,643:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:58:14,644:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:58:14,646:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:58:14,657:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:58:14,837:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,840:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,842:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,844:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,845:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,848:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,851:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,855:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,859:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,864:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,867:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,868:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:58:14,869:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:58:14,871:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:14,883:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:58:14,894:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:58:15,060:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,063:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,064:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,066:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,067:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,069:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,071:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,077:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,080:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,087:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,087:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:58:15,091:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,093:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,095:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 18:58:15,236:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,239:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,242:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,242:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,244:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,246:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,263:INFO:Calculating mean and std
2025-09-02 18:58:15,264:INFO:Creating metrics dataframe
2025-09-02 18:58:15,269:INFO:Uploading results into container
2025-09-02 18:58:15,269:INFO:Uploading model into container now
2025-09-02 18:58:15,269:INFO:_master_model_container: 9
2025-09-02 18:58:15,269:INFO:_display_container: 2
2025-09-02 18:58:15,270:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2951)
2025-09-02 18:58:15,270:INFO:create_model() successfully completed......................................
2025-09-02 18:58:15,393:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:15,393:INFO:Creating metrics dataframe
2025-09-02 18:58:15,400:INFO:Initializing Gradient Boosting Classifier
2025-09-02 18:58:15,400:INFO:Total runtime is 0.15596141815185546 minutes
2025-09-02 18:58:15,402:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:15,403:INFO:Initializing create_model()
2025-09-02 18:58:15,403:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:15,403:INFO:Checking exceptions
2025-09-02 18:58:15,403:INFO:Importing libraries
2025-09-02 18:58:15,403:INFO:Copying training dataset
2025-09-02 18:58:15,411:INFO:Defining folds
2025-09-02 18:58:15,411:INFO:Declaring metric variables
2025-09-02 18:58:15,414:INFO:Importing untrained model
2025-09-02 18:58:15,421:INFO:Gradient Boosting Classifier Imported successfully
2025-09-02 18:58:15,432:INFO:Starting cross validation
2025-09-02 18:58:15,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:15,962:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,964:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,965:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,967:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,968:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,970:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,973:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,976:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,979:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,979:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,989:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:15,991:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,496:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,499:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,502:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,502:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,504:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,506:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,508:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,509:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,512:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,517:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,521:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,523:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,917:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,920:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,921:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,922:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,923:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,924:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:16,933:INFO:Calculating mean and std
2025-09-02 18:58:16,934:INFO:Creating metrics dataframe
2025-09-02 18:58:16,936:INFO:Uploading results into container
2025-09-02 18:58:16,937:INFO:Uploading model into container now
2025-09-02 18:58:16,937:INFO:_master_model_container: 10
2025-09-02 18:58:16,937:INFO:_display_container: 2
2025-09-02 18:58:16,938:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2951, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-02 18:58:16,938:INFO:create_model() successfully completed......................................
2025-09-02 18:58:17,062:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:17,062:INFO:Creating metrics dataframe
2025-09-02 18:58:17,069:INFO:Initializing Linear Discriminant Analysis
2025-09-02 18:58:17,070:INFO:Total runtime is 0.1837898333867391 minutes
2025-09-02 18:58:17,072:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:17,073:INFO:Initializing create_model()
2025-09-02 18:58:17,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:17,073:INFO:Checking exceptions
2025-09-02 18:58:17,073:INFO:Importing libraries
2025-09-02 18:58:17,073:INFO:Copying training dataset
2025-09-02 18:58:17,080:INFO:Defining folds
2025-09-02 18:58:17,081:INFO:Declaring metric variables
2025-09-02 18:58:17,083:INFO:Importing untrained model
2025-09-02 18:58:17,092:INFO:Linear Discriminant Analysis Imported successfully
2025-09-02 18:58:17,100:INFO:Starting cross validation
2025-09-02 18:58:17,101:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:17,152:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,155:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,156:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,161:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,161:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,165:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,165:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,174:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,179:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,193:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,198:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,205:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,207:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,210:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,212:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,214:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,215:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,221:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,226:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,229:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,233:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,249:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,253:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,255:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,257:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,258:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,258:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,261:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,261:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,264:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,278:INFO:Calculating mean and std
2025-09-02 18:58:17,279:INFO:Creating metrics dataframe
2025-09-02 18:58:17,281:INFO:Uploading results into container
2025-09-02 18:58:17,282:INFO:Uploading model into container now
2025-09-02 18:58:17,284:INFO:_master_model_container: 11
2025-09-02 18:58:17,284:INFO:_display_container: 2
2025-09-02 18:58:17,287:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-02 18:58:17,287:INFO:create_model() successfully completed......................................
2025-09-02 18:58:17,416:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:17,416:INFO:Creating metrics dataframe
2025-09-02 18:58:17,424:INFO:Initializing Extra Trees Classifier
2025-09-02 18:58:17,424:INFO:Total runtime is 0.18969016472498576 minutes
2025-09-02 18:58:17,427:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:17,427:INFO:Initializing create_model()
2025-09-02 18:58:17,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:17,427:INFO:Checking exceptions
2025-09-02 18:58:17,427:INFO:Importing libraries
2025-09-02 18:58:17,427:INFO:Copying training dataset
2025-09-02 18:58:17,433:INFO:Defining folds
2025-09-02 18:58:17,433:INFO:Declaring metric variables
2025-09-02 18:58:17,438:INFO:Importing untrained model
2025-09-02 18:58:17,445:INFO:Extra Trees Classifier Imported successfully
2025-09-02 18:58:17,456:INFO:Starting cross validation
2025-09-02 18:58:17,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:17,694:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,697:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,701:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,710:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,714:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,716:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,725:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,731:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,742:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,744:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,747:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,929:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,936:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,942:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,958:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,960:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,962:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,974:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,977:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:17,980:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,004:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,006:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,009:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,112:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,117:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,120:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,128:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,129:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,131:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,141:INFO:Calculating mean and std
2025-09-02 18:58:18,142:INFO:Creating metrics dataframe
2025-09-02 18:58:18,143:INFO:Uploading results into container
2025-09-02 18:58:18,144:INFO:Uploading model into container now
2025-09-02 18:58:18,144:INFO:_master_model_container: 12
2025-09-02 18:58:18,144:INFO:_display_container: 2
2025-09-02 18:58:18,145:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2951, verbose=0,
                     warm_start=False)
2025-09-02 18:58:18,145:INFO:create_model() successfully completed......................................
2025-09-02 18:58:18,271:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:18,272:INFO:Creating metrics dataframe
2025-09-02 18:58:18,280:INFO:Initializing Light Gradient Boosting Machine
2025-09-02 18:58:18,280:INFO:Total runtime is 0.20396289428075154 minutes
2025-09-02 18:58:18,287:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:18,287:INFO:Initializing create_model()
2025-09-02 18:58:18,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:18,287:INFO:Checking exceptions
2025-09-02 18:58:18,287:INFO:Importing libraries
2025-09-02 18:58:18,288:INFO:Copying training dataset
2025-09-02 18:58:18,293:INFO:Defining folds
2025-09-02 18:58:18,293:INFO:Declaring metric variables
2025-09-02 18:58:18,297:INFO:Importing untrained model
2025-09-02 18:58:18,302:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-02 18:58:18,318:INFO:Starting cross validation
2025-09-02 18:58:18,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:18,565:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,569:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,569:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,572:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,575:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,578:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,583:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,587:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,632:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,636:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,639:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,799:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,802:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,805:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,809:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,812:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,817:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,827:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,832:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,835:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,875:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,878:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,881:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,970:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,973:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,975:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,980:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,983:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:18,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,000:INFO:Calculating mean and std
2025-09-02 18:58:19,001:INFO:Creating metrics dataframe
2025-09-02 18:58:19,006:INFO:Uploading results into container
2025-09-02 18:58:19,007:INFO:Uploading model into container now
2025-09-02 18:58:19,007:INFO:_master_model_container: 13
2025-09-02 18:58:19,007:INFO:_display_container: 2
2025-09-02 18:58:19,008:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2951, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-02 18:58:19,008:INFO:create_model() successfully completed......................................
2025-09-02 18:58:19,143:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:19,143:INFO:Creating metrics dataframe
2025-09-02 18:58:19,151:INFO:Initializing Dummy Classifier
2025-09-02 18:58:19,151:INFO:Total runtime is 0.21846657196680705 minutes
2025-09-02 18:58:19,154:INFO:SubProcess create_model() called ==================================
2025-09-02 18:58:19,154:INFO:Initializing create_model()
2025-09-02 18:58:19,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A9096560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:19,154:INFO:Checking exceptions
2025-09-02 18:58:19,155:INFO:Importing libraries
2025-09-02 18:58:19,155:INFO:Copying training dataset
2025-09-02 18:58:19,160:INFO:Defining folds
2025-09-02 18:58:19,160:INFO:Declaring metric variables
2025-09-02 18:58:19,165:INFO:Importing untrained model
2025-09-02 18:58:19,170:INFO:Dummy Classifier Imported successfully
2025-09-02 18:58:19,178:INFO:Starting cross validation
2025-09-02 18:58:19,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 18:58:19,220:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,224:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,225:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:58:19,225:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,229:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,233:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,236:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:58:19,237:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,238:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,238:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,240:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,241:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,242:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:58:19,242:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:58:19,245:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,247:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,269:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,270:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,272:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,273:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:58:19,274:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,275:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:58:19,275:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,277:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,286:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,289:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,290:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,291:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:58:19,292:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,293:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,293:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:58:19,297:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,304:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,306:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,307:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:58:19,307:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,308:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,309:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,310:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 18:58:19,311:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 18:58:19,327:INFO:Calculating mean and std
2025-09-02 18:58:19,328:INFO:Creating metrics dataframe
2025-09-02 18:58:19,331:INFO:Uploading results into container
2025-09-02 18:58:19,332:INFO:Uploading model into container now
2025-09-02 18:58:19,332:INFO:_master_model_container: 14
2025-09-02 18:58:19,333:INFO:_display_container: 2
2025-09-02 18:58:19,333:INFO:DummyClassifier(constant=None, random_state=2951, strategy='prior')
2025-09-02 18:58:19,333:INFO:create_model() successfully completed......................................
2025-09-02 18:58:19,457:INFO:SubProcess create_model() end ==================================
2025-09-02 18:58:19,457:INFO:Creating metrics dataframe
2025-09-02 18:58:19,476:INFO:Initializing create_model()
2025-09-02 18:58:19,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2951, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:19,476:INFO:Checking exceptions
2025-09-02 18:58:19,478:INFO:Importing libraries
2025-09-02 18:58:19,478:INFO:Copying training dataset
2025-09-02 18:58:19,484:INFO:Defining folds
2025-09-02 18:58:19,484:INFO:Declaring metric variables
2025-09-02 18:58:19,485:INFO:Importing untrained model
2025-09-02 18:58:19,485:INFO:Declaring custom model
2025-09-02 18:58:19,486:INFO:Extra Trees Classifier Imported successfully
2025-09-02 18:58:19,487:INFO:Cross validation set to False
2025-09-02 18:58:19,487:INFO:Fitting Model
2025-09-02 18:58:19,643:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2951, verbose=0,
                     warm_start=False)
2025-09-02 18:58:19,643:INFO:create_model() successfully completed......................................
2025-09-02 18:58:19,792:INFO:_master_model_container: 14
2025-09-02 18:58:19,792:INFO:_display_container: 2
2025-09-02 18:58:19,792:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2951, verbose=0,
                     warm_start=False)
2025-09-02 18:58:19,792:INFO:compare_models() successfully completed......................................
2025-09-02 18:58:19,793:INFO:Initializing create_model()
2025-09-02 18:58:19,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6933130>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 18:58:19,793:INFO:Checking exceptions
2025-09-02 19:00:06,999:INFO:PyCaret ClassificationExperiment
2025-09-02 19:00:06,999:INFO:Logging name: clf-default-name
2025-09-02 19:00:06,999:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-02 19:00:06,999:INFO:version 3.3.2
2025-09-02 19:00:06,999:INFO:Initializing setup()
2025-09-02 19:00:06,999:INFO:self.USI: c35c
2025-09-02 19:00:06,999:INFO:self._variable_keys: {'html_param', 'data', 'fold_groups_param', 'y', 'is_multiclass', 'gpu_n_jobs_param', 'fold_shuffle_param', 'fold_generator', 'X', 'USI', 'X_test', 'idx', 'n_jobs_param', 'gpu_param', 'logging_param', 'exp_name_log', 'log_plots_param', 'target_param', 'X_train', 'fix_imbalance', 'memory', '_ml_usecase', '_available_plots', 'y_train', 'y_test', 'exp_id', 'pipeline', 'seed'}
2025-09-02 19:00:06,999:INFO:Checking environment
2025-09-02 19:00:06,999:INFO:python_version: 3.10.11
2025-09-02 19:00:06,999:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-09-02 19:00:06,999:INFO:machine: AMD64
2025-09-02 19:00:06,999:INFO:platform: Windows-10-10.0.19045-SP0
2025-09-02 19:00:07,003:INFO:Memory: svmem(total=8299257856, available=1012252672, percent=87.8, used=7287005184, free=1012252672)
2025-09-02 19:00:07,003:INFO:Physical Core: 2
2025-09-02 19:00:07,003:INFO:Logical Core: 4
2025-09-02 19:00:07,003:INFO:Checking libraries
2025-09-02 19:00:07,003:INFO:System:
2025-09-02 19:00:07,003:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-09-02 19:00:07,003:INFO:executable: c:\Users\nguye\AppData\Local\Programs\Python\Python310\python.exe
2025-09-02 19:00:07,003:INFO:   machine: Windows-10-10.0.19045-SP0
2025-09-02 19:00:07,003:INFO:PyCaret required dependencies:
2025-09-02 19:00:07,003:INFO:                 pip: 23.0.1
2025-09-02 19:00:07,003:INFO:          setuptools: 65.5.0
2025-09-02 19:00:07,003:INFO:             pycaret: 3.3.2
2025-09-02 19:00:07,003:INFO:             IPython: 8.37.0
2025-09-02 19:00:07,003:INFO:          ipywidgets: 8.1.7
2025-09-02 19:00:07,003:INFO:                tqdm: 4.67.1
2025-09-02 19:00:07,003:INFO:               numpy: 1.26.4
2025-09-02 19:00:07,003:INFO:              pandas: 2.1.4
2025-09-02 19:00:07,003:INFO:              jinja2: 3.1.6
2025-09-02 19:00:07,003:INFO:               scipy: 1.11.4
2025-09-02 19:00:07,003:INFO:              joblib: 1.3.2
2025-09-02 19:00:07,003:INFO:             sklearn: 1.4.2
2025-09-02 19:00:07,003:INFO:                pyod: 2.0.5
2025-09-02 19:00:07,003:INFO:            imblearn: 0.14.0
2025-09-02 19:00:07,004:INFO:   category_encoders: 2.7.0
2025-09-02 19:00:07,004:INFO:            lightgbm: 4.6.0
2025-09-02 19:00:07,004:INFO:               numba: 0.61.2
2025-09-02 19:00:07,004:INFO:            requests: 2.32.4
2025-09-02 19:00:07,004:INFO:          matplotlib: 3.7.5
2025-09-02 19:00:07,004:INFO:          scikitplot: 0.3.7
2025-09-02 19:00:07,004:INFO:         yellowbrick: 1.5
2025-09-02 19:00:07,004:INFO:              plotly: 6.3.0
2025-09-02 19:00:07,004:INFO:    plotly-resampler: Not installed
2025-09-02 19:00:07,004:INFO:             kaleido: 1.0.0
2025-09-02 19:00:07,004:INFO:           schemdraw: 0.15
2025-09-02 19:00:07,004:INFO:         statsmodels: 0.14.5
2025-09-02 19:00:07,004:INFO:              sktime: 0.26.0
2025-09-02 19:00:07,004:INFO:               tbats: 1.1.3
2025-09-02 19:00:07,004:INFO:            pmdarima: 2.0.4
2025-09-02 19:00:07,004:INFO:              psutil: 7.0.0
2025-09-02 19:00:07,004:INFO:          markupsafe: 3.0.2
2025-09-02 19:00:07,004:INFO:             pickle5: Not installed
2025-09-02 19:00:07,004:INFO:         cloudpickle: 3.1.1
2025-09-02 19:00:07,004:INFO:         deprecation: 2.1.0
2025-09-02 19:00:07,004:INFO:              xxhash: 3.5.0
2025-09-02 19:00:07,004:INFO:           wurlitzer: Not installed
2025-09-02 19:00:07,004:INFO:PyCaret optional dependencies:
2025-09-02 19:00:07,004:INFO:                shap: Not installed
2025-09-02 19:00:07,004:INFO:           interpret: Not installed
2025-09-02 19:00:07,004:INFO:                umap: Not installed
2025-09-02 19:00:07,004:INFO:     ydata_profiling: Not installed
2025-09-02 19:00:07,004:INFO:  explainerdashboard: Not installed
2025-09-02 19:00:07,004:INFO:             autoviz: Not installed
2025-09-02 19:00:07,004:INFO:           fairlearn: Not installed
2025-09-02 19:00:07,004:INFO:          deepchecks: Not installed
2025-09-02 19:00:07,004:INFO:             xgboost: Not installed
2025-09-02 19:00:07,004:INFO:            catboost: Not installed
2025-09-02 19:00:07,004:INFO:              kmodes: Not installed
2025-09-02 19:00:07,004:INFO:             mlxtend: Not installed
2025-09-02 19:00:07,004:INFO:       statsforecast: Not installed
2025-09-02 19:00:07,004:INFO:        tune_sklearn: Not installed
2025-09-02 19:00:07,004:INFO:                 ray: Not installed
2025-09-02 19:00:07,004:INFO:            hyperopt: Not installed
2025-09-02 19:00:07,004:INFO:              optuna: Not installed
2025-09-02 19:00:07,005:INFO:               skopt: Not installed
2025-09-02 19:00:07,005:INFO:              mlflow: Not installed
2025-09-02 19:00:07,005:INFO:              gradio: Not installed
2025-09-02 19:00:07,005:INFO:             fastapi: Not installed
2025-09-02 19:00:07,005:INFO:             uvicorn: Not installed
2025-09-02 19:00:07,005:INFO:              m2cgen: Not installed
2025-09-02 19:00:07,005:INFO:           evidently: Not installed
2025-09-02 19:00:07,005:INFO:               fugue: Not installed
2025-09-02 19:00:07,005:INFO:           streamlit: Not installed
2025-09-02 19:00:07,005:INFO:             prophet: Not installed
2025-09-02 19:00:07,005:INFO:None
2025-09-02 19:00:07,005:INFO:Set up data.
2025-09-02 19:00:07,012:INFO:Set up folding strategy.
2025-09-02 19:00:07,012:INFO:Set up train/test split.
2025-09-02 19:00:07,016:INFO:Set up index.
2025-09-02 19:00:07,016:INFO:Assigning column types.
2025-09-02 19:00:07,022:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-02 19:00:07,058:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 19:00:07,059:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:00:07,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,115:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 19:00:07,116:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:00:07,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,139:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-02 19:00:07,181:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:00:07,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,239:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:00:07,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,262:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-02 19:00:07,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,380:INFO:Preparing preprocessing pipeline...
2025-09-02 19:00:07,381:INFO:Set up label encoding.
2025-09-02 19:00:07,381:INFO:Set up simple imputation.
2025-09-02 19:00:07,382:INFO:Set up column name cleaning.
2025-09-02 19:00:07,413:INFO:Finished creating preprocessing pipeline.
2025-09-02 19:00:07,417:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nguye\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'conc...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-02 19:00:07,417:INFO:Creating final display dataframe.
2025-09-02 19:00:07,512:INFO:Setup _display_container:                     Description             Value
0                    Session id              3560
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              c35c
2025-09-02 19:00:07,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,643:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:07,644:INFO:setup() successfully completed in 0.65s...............
2025-09-02 19:00:07,645:INFO:Initializing compare_models()
2025-09-02 19:00:07,645:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-02 19:00:07,645:INFO:Checking exceptions
2025-09-02 19:00:07,648:INFO:Preparing display monitor
2025-09-02 19:00:07,678:INFO:Initializing Logistic Regression
2025-09-02 19:00:07,678:INFO:Total runtime is 0.0 minutes
2025-09-02 19:00:07,686:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:07,687:INFO:Initializing create_model()
2025-09-02 19:00:07,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:07,687:INFO:Checking exceptions
2025-09-02 19:00:07,687:INFO:Importing libraries
2025-09-02 19:00:07,687:INFO:Copying training dataset
2025-09-02 19:00:07,704:INFO:Defining folds
2025-09-02 19:00:07,704:INFO:Declaring metric variables
2025-09-02 19:00:07,709:INFO:Importing untrained model
2025-09-02 19:00:07,711:INFO:Logistic Regression Imported successfully
2025-09-02 19:00:07,721:INFO:Starting cross validation
2025-09-02 19:00:07,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:07,908:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:07,921:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:07,923:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,925:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:07,925:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:07,925:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,928:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,943:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,943:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,944:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,946:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,946:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:07,947:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,108:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:08,111:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:08,114:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:08,115:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:08,122:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,125:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,125:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,127:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,128:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,128:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,128:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,130:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,131:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,135:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,136:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,139:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,229:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:08,231:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:08,240:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,242:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,242:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,245:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,245:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,247:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,256:INFO:Calculating mean and std
2025-09-02 19:00:08,256:INFO:Creating metrics dataframe
2025-09-02 19:00:08,258:INFO:Uploading results into container
2025-09-02 19:00:08,258:INFO:Uploading model into container now
2025-09-02 19:00:08,258:INFO:_master_model_container: 1
2025-09-02 19:00:08,258:INFO:_display_container: 2
2025-09-02 19:00:08,259:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-02 19:00:08,259:INFO:create_model() successfully completed......................................
2025-09-02 19:00:08,415:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:08,415:INFO:Creating metrics dataframe
2025-09-02 19:00:08,420:INFO:Initializing K Neighbors Classifier
2025-09-02 19:00:08,420:INFO:Total runtime is 0.01236569086710612 minutes
2025-09-02 19:00:08,423:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:08,423:INFO:Initializing create_model()
2025-09-02 19:00:08,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:08,423:INFO:Checking exceptions
2025-09-02 19:00:08,424:INFO:Importing libraries
2025-09-02 19:00:08,424:INFO:Copying training dataset
2025-09-02 19:00:08,429:INFO:Defining folds
2025-09-02 19:00:08,429:INFO:Declaring metric variables
2025-09-02 19:00:08,434:INFO:Importing untrained model
2025-09-02 19:00:08,436:INFO:K Neighbors Classifier Imported successfully
2025-09-02 19:00:08,446:INFO:Starting cross validation
2025-09-02 19:00:08,447:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:08,494:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,495:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,495:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,499:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,499:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,500:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,502:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,502:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,503:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,519:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,523:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,526:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,545:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,546:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,550:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,552:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,554:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,555:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,555:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,558:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,571:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,575:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,578:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,587:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,590:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,593:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,594:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,596:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,600:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,618:INFO:Calculating mean and std
2025-09-02 19:00:08,618:INFO:Creating metrics dataframe
2025-09-02 19:00:08,620:INFO:Uploading results into container
2025-09-02 19:00:08,620:INFO:Uploading model into container now
2025-09-02 19:00:08,621:INFO:_master_model_container: 2
2025-09-02 19:00:08,621:INFO:_display_container: 2
2025-09-02 19:00:08,621:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-02 19:00:08,621:INFO:create_model() successfully completed......................................
2025-09-02 19:00:08,776:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:08,776:INFO:Creating metrics dataframe
2025-09-02 19:00:08,783:INFO:Initializing Naive Bayes
2025-09-02 19:00:08,783:INFO:Total runtime is 0.01841783126195272 minutes
2025-09-02 19:00:08,785:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:08,787:INFO:Initializing create_model()
2025-09-02 19:00:08,787:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:08,787:INFO:Checking exceptions
2025-09-02 19:00:08,787:INFO:Importing libraries
2025-09-02 19:00:08,787:INFO:Copying training dataset
2025-09-02 19:00:08,793:INFO:Defining folds
2025-09-02 19:00:08,793:INFO:Declaring metric variables
2025-09-02 19:00:08,796:INFO:Importing untrained model
2025-09-02 19:00:08,828:INFO:Naive Bayes Imported successfully
2025-09-02 19:00:08,839:INFO:Starting cross validation
2025-09-02 19:00:08,841:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:08,916:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,919:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,920:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,921:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,922:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,923:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,924:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,926:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,927:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,931:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,942:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,942:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,958:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,961:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,961:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,966:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,969:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,987:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,990:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,991:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,993:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,994:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:08,999:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,001:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,003:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,005:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,007:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,009:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,011:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,025:INFO:Calculating mean and std
2025-09-02 19:00:09,026:INFO:Creating metrics dataframe
2025-09-02 19:00:09,027:INFO:Uploading results into container
2025-09-02 19:00:09,028:INFO:Uploading model into container now
2025-09-02 19:00:09,028:INFO:_master_model_container: 3
2025-09-02 19:00:09,028:INFO:_display_container: 2
2025-09-02 19:00:09,028:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-02 19:00:09,029:INFO:create_model() successfully completed......................................
2025-09-02 19:00:09,187:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:09,187:INFO:Creating metrics dataframe
2025-09-02 19:00:09,194:INFO:Initializing Decision Tree Classifier
2025-09-02 19:00:09,195:INFO:Total runtime is 0.025269750754038492 minutes
2025-09-02 19:00:09,200:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:09,201:INFO:Initializing create_model()
2025-09-02 19:00:09,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:09,201:INFO:Checking exceptions
2025-09-02 19:00:09,201:INFO:Importing libraries
2025-09-02 19:00:09,201:INFO:Copying training dataset
2025-09-02 19:00:09,206:INFO:Defining folds
2025-09-02 19:00:09,207:INFO:Declaring metric variables
2025-09-02 19:00:09,210:INFO:Importing untrained model
2025-09-02 19:00:09,218:INFO:Decision Tree Classifier Imported successfully
2025-09-02 19:00:09,224:INFO:Starting cross validation
2025-09-02 19:00:09,227:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:09,276:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,277:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,277:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,280:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,281:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,283:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,284:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,285:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,301:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,305:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,308:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,327:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,330:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,331:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,332:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,334:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,334:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,335:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,337:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,339:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,353:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,355:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,357:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,371:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,372:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,374:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,375:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,376:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,379:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,385:INFO:Calculating mean and std
2025-09-02 19:00:09,386:INFO:Creating metrics dataframe
2025-09-02 19:00:09,388:INFO:Uploading results into container
2025-09-02 19:00:09,391:INFO:Uploading model into container now
2025-09-02 19:00:09,391:INFO:_master_model_container: 4
2025-09-02 19:00:09,391:INFO:_display_container: 2
2025-09-02 19:00:09,391:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3560, splitter='best')
2025-09-02 19:00:09,392:INFO:create_model() successfully completed......................................
2025-09-02 19:00:09,552:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:09,552:INFO:Creating metrics dataframe
2025-09-02 19:00:09,558:INFO:Initializing SVM - Linear Kernel
2025-09-02 19:00:09,558:INFO:Total runtime is 0.03132415215174357 minutes
2025-09-02 19:00:09,563:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:09,563:INFO:Initializing create_model()
2025-09-02 19:00:09,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:09,564:INFO:Checking exceptions
2025-09-02 19:00:09,564:INFO:Importing libraries
2025-09-02 19:00:09,564:INFO:Copying training dataset
2025-09-02 19:00:09,569:INFO:Defining folds
2025-09-02 19:00:09,570:INFO:Declaring metric variables
2025-09-02 19:00:09,573:INFO:Importing untrained model
2025-09-02 19:00:09,658:INFO:SVM - Linear Kernel Imported successfully
2025-09-02 19:00:09,720:INFO:Starting cross validation
2025-09-02 19:00:09,721:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:09,790:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,791:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,792:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,798:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,800:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,800:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,801:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,804:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,804:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,813:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,847:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,849:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,852:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,853:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,855:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,859:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,863:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,864:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,866:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,867:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,870:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,890:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,892:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,895:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,897:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,900:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,903:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,903:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,905:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,908:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:09,927:INFO:Calculating mean and std
2025-09-02 19:00:09,929:INFO:Creating metrics dataframe
2025-09-02 19:00:09,934:INFO:Uploading results into container
2025-09-02 19:00:09,935:INFO:Uploading model into container now
2025-09-02 19:00:09,936:INFO:_master_model_container: 5
2025-09-02 19:00:09,936:INFO:_display_container: 2
2025-09-02 19:00:09,936:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3560, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-02 19:00:09,936:INFO:create_model() successfully completed......................................
2025-09-02 19:00:10,133:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:10,134:INFO:Creating metrics dataframe
2025-09-02 19:00:10,139:INFO:Initializing Ridge Classifier
2025-09-02 19:00:10,140:INFO:Total runtime is 0.04103034337361654 minutes
2025-09-02 19:00:10,146:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:10,146:INFO:Initializing create_model()
2025-09-02 19:00:10,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:10,146:INFO:Checking exceptions
2025-09-02 19:00:10,146:INFO:Importing libraries
2025-09-02 19:00:10,146:INFO:Copying training dataset
2025-09-02 19:00:10,152:INFO:Defining folds
2025-09-02 19:00:10,153:INFO:Declaring metric variables
2025-09-02 19:00:10,158:INFO:Importing untrained model
2025-09-02 19:00:10,173:INFO:Ridge Classifier Imported successfully
2025-09-02 19:00:10,185:INFO:Starting cross validation
2025-09-02 19:00:10,187:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:10,215:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.71214e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:00:10,215:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.63155e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:00:10,218:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.3263e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:00:10,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.646e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:00:10,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,228:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,231:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,231:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,236:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,236:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,237:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,239:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,239:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,241:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,263:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,265:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.32807e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:00:10,266:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,269:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.86497e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:00:10,269:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.67995e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:00:10,280:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,283:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,284:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,286:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,286:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,287:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,289:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,290:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,294:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,296:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.30464e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:00:10,308:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.46981e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:00:10,310:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,314:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,314:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.51928e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:00:10,317:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,322:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,322:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,324:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,328:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,328:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,345:INFO:Calculating mean and std
2025-09-02 19:00:10,346:INFO:Creating metrics dataframe
2025-09-02 19:00:10,350:INFO:Uploading results into container
2025-09-02 19:00:10,351:INFO:Uploading model into container now
2025-09-02 19:00:10,351:INFO:_master_model_container: 6
2025-09-02 19:00:10,351:INFO:_display_container: 2
2025-09-02 19:00:10,352:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3560, solver='auto',
                tol=0.0001)
2025-09-02 19:00:10,352:INFO:create_model() successfully completed......................................
2025-09-02 19:00:10,529:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:10,530:INFO:Creating metrics dataframe
2025-09-02 19:00:10,541:INFO:Initializing Random Forest Classifier
2025-09-02 19:00:10,541:INFO:Total runtime is 0.04770764509836833 minutes
2025-09-02 19:00:10,546:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:10,546:INFO:Initializing create_model()
2025-09-02 19:00:10,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:10,546:INFO:Checking exceptions
2025-09-02 19:00:10,546:INFO:Importing libraries
2025-09-02 19:00:10,546:INFO:Copying training dataset
2025-09-02 19:00:10,553:INFO:Defining folds
2025-09-02 19:00:10,553:INFO:Declaring metric variables
2025-09-02 19:00:10,559:INFO:Importing untrained model
2025-09-02 19:00:10,565:INFO:Random Forest Classifier Imported successfully
2025-09-02 19:00:10,571:INFO:Starting cross validation
2025-09-02 19:00:10,573:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:10,879:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,883:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,883:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,885:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,886:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,886:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,890:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,890:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:10,896:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,082:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,085:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,088:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,188:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,192:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,194:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,195:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,202:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,202:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,204:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,208:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,355:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,361:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,367:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,484:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,491:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,491:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,495:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,508:INFO:Calculating mean and std
2025-09-02 19:00:11,509:INFO:Creating metrics dataframe
2025-09-02 19:00:11,510:INFO:Uploading results into container
2025-09-02 19:00:11,511:INFO:Uploading model into container now
2025-09-02 19:00:11,511:INFO:_master_model_container: 7
2025-09-02 19:00:11,511:INFO:_display_container: 2
2025-09-02 19:00:11,512:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3560, verbose=0,
                       warm_start=False)
2025-09-02 19:00:11,512:INFO:create_model() successfully completed......................................
2025-09-02 19:00:11,702:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:11,703:INFO:Creating metrics dataframe
2025-09-02 19:00:11,713:INFO:Initializing Quadratic Discriminant Analysis
2025-09-02 19:00:11,713:INFO:Total runtime is 0.06725104649861653 minutes
2025-09-02 19:00:11,717:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:11,717:INFO:Initializing create_model()
2025-09-02 19:00:11,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:11,717:INFO:Checking exceptions
2025-09-02 19:00:11,717:INFO:Importing libraries
2025-09-02 19:00:11,717:INFO:Copying training dataset
2025-09-02 19:00:11,725:INFO:Defining folds
2025-09-02 19:00:11,725:INFO:Declaring metric variables
2025-09-02 19:00:11,732:INFO:Importing untrained model
2025-09-02 19:00:11,736:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-02 19:00:11,748:INFO:Starting cross validation
2025-09-02 19:00:11,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:11,790:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,793:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,793:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,793:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,799:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,799:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,799:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,802:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,802:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,816:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,819:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,840:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,841:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,842:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,843:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,845:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,845:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,847:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,848:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,849:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,869:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,874:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,874:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,876:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,877:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,877:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,883:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,884:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,886:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:11,893:INFO:Calculating mean and std
2025-09-02 19:00:11,894:INFO:Creating metrics dataframe
2025-09-02 19:00:11,896:INFO:Uploading results into container
2025-09-02 19:00:11,897:INFO:Uploading model into container now
2025-09-02 19:00:11,898:INFO:_master_model_container: 8
2025-09-02 19:00:11,898:INFO:_display_container: 2
2025-09-02 19:00:11,899:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-02 19:00:11,899:INFO:create_model() successfully completed......................................
2025-09-02 19:00:12,127:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:12,127:INFO:Creating metrics dataframe
2025-09-02 19:00:12,134:INFO:Initializing Ada Boost Classifier
2025-09-02 19:00:12,134:INFO:Total runtime is 0.07425686120986938 minutes
2025-09-02 19:00:12,138:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:12,139:INFO:Initializing create_model()
2025-09-02 19:00:12,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:12,139:INFO:Checking exceptions
2025-09-02 19:00:12,139:INFO:Importing libraries
2025-09-02 19:00:12,139:INFO:Copying training dataset
2025-09-02 19:00:12,146:INFO:Defining folds
2025-09-02 19:00:12,146:INFO:Declaring metric variables
2025-09-02 19:00:12,152:INFO:Importing untrained model
2025-09-02 19:00:12,158:INFO:Ada Boost Classifier Imported successfully
2025-09-02 19:00:12,164:INFO:Starting cross validation
2025-09-02 19:00:12,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:12,192:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:00:12,193:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:00:12,195:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:00:12,200:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:00:12,390:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,393:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,394:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,394:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,396:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,397:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,398:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,400:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,401:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,416:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:00:12,422:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,422:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:00:12,424:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,427:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,428:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:00:12,449:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:00:12,706:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,710:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,713:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,713:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,717:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,723:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,725:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,727:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,731:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,737:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:00:12,746:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:00:12,751:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,757:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,760:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,927:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,930:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,932:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,935:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,938:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:12,950:INFO:Calculating mean and std
2025-09-02 19:00:12,953:INFO:Creating metrics dataframe
2025-09-02 19:00:12,955:INFO:Uploading results into container
2025-09-02 19:00:12,955:INFO:Uploading model into container now
2025-09-02 19:00:12,956:INFO:_master_model_container: 9
2025-09-02 19:00:12,956:INFO:_display_container: 2
2025-09-02 19:00:12,957:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3560)
2025-09-02 19:00:12,957:INFO:create_model() successfully completed......................................
2025-09-02 19:00:13,130:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:13,130:INFO:Creating metrics dataframe
2025-09-02 19:00:13,138:INFO:Initializing Gradient Boosting Classifier
2025-09-02 19:00:13,139:INFO:Total runtime is 0.0910065213839213 minutes
2025-09-02 19:00:13,142:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:13,142:INFO:Initializing create_model()
2025-09-02 19:00:13,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:13,142:INFO:Checking exceptions
2025-09-02 19:00:13,142:INFO:Importing libraries
2025-09-02 19:00:13,143:INFO:Copying training dataset
2025-09-02 19:00:13,148:INFO:Defining folds
2025-09-02 19:00:13,148:INFO:Declaring metric variables
2025-09-02 19:00:13,155:INFO:Importing untrained model
2025-09-02 19:00:13,160:INFO:Gradient Boosting Classifier Imported successfully
2025-09-02 19:00:13,166:INFO:Starting cross validation
2025-09-02 19:00:13,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:13,690:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,694:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,694:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,696:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,697:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,701:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,703:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,706:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,710:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,726:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,730:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:13,732:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,307:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,309:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,311:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,312:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,314:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,317:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,352:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,360:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,363:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,370:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,373:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,375:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,896:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,900:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,904:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,904:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,909:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,914:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:14,933:INFO:Calculating mean and std
2025-09-02 19:00:14,935:INFO:Creating metrics dataframe
2025-09-02 19:00:14,941:INFO:Uploading results into container
2025-09-02 19:00:14,942:INFO:Uploading model into container now
2025-09-02 19:00:14,943:INFO:_master_model_container: 10
2025-09-02 19:00:14,943:INFO:_display_container: 2
2025-09-02 19:00:14,944:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3560, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-02 19:00:14,944:INFO:create_model() successfully completed......................................
2025-09-02 19:00:15,164:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:15,164:INFO:Creating metrics dataframe
2025-09-02 19:00:15,177:INFO:Initializing Linear Discriminant Analysis
2025-09-02 19:00:15,178:INFO:Total runtime is 0.12497594356536865 minutes
2025-09-02 19:00:15,184:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:15,185:INFO:Initializing create_model()
2025-09-02 19:00:15,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:15,185:INFO:Checking exceptions
2025-09-02 19:00:15,185:INFO:Importing libraries
2025-09-02 19:00:15,185:INFO:Copying training dataset
2025-09-02 19:00:15,192:INFO:Defining folds
2025-09-02 19:00:15,192:INFO:Declaring metric variables
2025-09-02 19:00:15,199:INFO:Importing untrained model
2025-09-02 19:00:15,208:INFO:Linear Discriminant Analysis Imported successfully
2025-09-02 19:00:15,221:INFO:Starting cross validation
2025-09-02 19:00:15,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:15,272:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,275:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,275:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,278:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,281:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,281:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,283:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,284:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,286:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,306:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,310:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,316:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,324:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,327:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,332:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,334:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,337:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,338:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,341:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,341:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,344:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,355:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,357:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,360:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,373:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,376:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,378:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,380:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,381:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,385:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,397:INFO:Calculating mean and std
2025-09-02 19:00:15,397:INFO:Creating metrics dataframe
2025-09-02 19:00:15,403:INFO:Uploading results into container
2025-09-02 19:00:15,404:INFO:Uploading model into container now
2025-09-02 19:00:15,404:INFO:_master_model_container: 11
2025-09-02 19:00:15,405:INFO:_display_container: 2
2025-09-02 19:00:15,405:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-02 19:00:15,405:INFO:create_model() successfully completed......................................
2025-09-02 19:00:15,636:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:15,637:INFO:Creating metrics dataframe
2025-09-02 19:00:15,664:INFO:Initializing Extra Trees Classifier
2025-09-02 19:00:15,664:INFO:Total runtime is 0.1330880840619405 minutes
2025-09-02 19:00:15,670:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:15,670:INFO:Initializing create_model()
2025-09-02 19:00:15,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:15,671:INFO:Checking exceptions
2025-09-02 19:00:15,671:INFO:Importing libraries
2025-09-02 19:00:15,671:INFO:Copying training dataset
2025-09-02 19:00:15,680:INFO:Defining folds
2025-09-02 19:00:15,680:INFO:Declaring metric variables
2025-09-02 19:00:15,686:INFO:Importing untrained model
2025-09-02 19:00:15,692:INFO:Extra Trees Classifier Imported successfully
2025-09-02 19:00:15,701:INFO:Starting cross validation
2025-09-02 19:00:15,703:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:15,973:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,976:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,977:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,980:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,981:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,984:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,992:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,992:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:15,997:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,000:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,001:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,242:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,247:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,252:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,259:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,262:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,264:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,266:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,269:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,271:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,271:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,273:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,275:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,490:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,491:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,494:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,497:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,499:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,504:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:16,514:INFO:Calculating mean and std
2025-09-02 19:00:16,516:INFO:Creating metrics dataframe
2025-09-02 19:00:16,523:INFO:Uploading results into container
2025-09-02 19:00:16,524:INFO:Uploading model into container now
2025-09-02 19:00:16,525:INFO:_master_model_container: 12
2025-09-02 19:00:16,525:INFO:_display_container: 2
2025-09-02 19:00:16,526:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3560, verbose=0,
                     warm_start=False)
2025-09-02 19:00:16,526:INFO:create_model() successfully completed......................................
2025-09-02 19:00:16,742:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:16,742:INFO:Creating metrics dataframe
2025-09-02 19:00:16,751:INFO:Initializing Light Gradient Boosting Machine
2025-09-02 19:00:16,751:INFO:Total runtime is 0.1512163519859314 minutes
2025-09-02 19:00:16,755:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:16,756:INFO:Initializing create_model()
2025-09-02 19:00:16,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:16,756:INFO:Checking exceptions
2025-09-02 19:00:16,756:INFO:Importing libraries
2025-09-02 19:00:16,756:INFO:Copying training dataset
2025-09-02 19:00:16,765:INFO:Defining folds
2025-09-02 19:00:16,766:INFO:Declaring metric variables
2025-09-02 19:00:16,774:INFO:Importing untrained model
2025-09-02 19:00:16,781:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-02 19:00:16,788:INFO:Starting cross validation
2025-09-02 19:00:16,790:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:17,042:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,046:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,048:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,050:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,052:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,054:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,056:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,059:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,066:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,098:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,102:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,105:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,313:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,317:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,317:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,320:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,321:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,328:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,332:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,336:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,375:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,380:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,383:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,501:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,504:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,508:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,508:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,511:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,514:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,523:INFO:Calculating mean and std
2025-09-02 19:00:17,525:INFO:Creating metrics dataframe
2025-09-02 19:00:17,528:INFO:Uploading results into container
2025-09-02 19:00:17,529:INFO:Uploading model into container now
2025-09-02 19:00:17,530:INFO:_master_model_container: 13
2025-09-02 19:00:17,530:INFO:_display_container: 2
2025-09-02 19:00:17,531:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3560, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-02 19:00:17,531:INFO:create_model() successfully completed......................................
2025-09-02 19:00:17,740:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:17,740:INFO:Creating metrics dataframe
2025-09-02 19:00:17,758:INFO:Initializing Dummy Classifier
2025-09-02 19:00:17,759:INFO:Total runtime is 0.1680009643236796 minutes
2025-09-02 19:00:17,763:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:17,764:INFO:Initializing create_model()
2025-09-02 19:00:17,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A64DEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:17,764:INFO:Checking exceptions
2025-09-02 19:00:17,764:INFO:Importing libraries
2025-09-02 19:00:17,764:INFO:Copying training dataset
2025-09-02 19:00:17,774:INFO:Defining folds
2025-09-02 19:00:17,775:INFO:Declaring metric variables
2025-09-02 19:00:17,781:INFO:Importing untrained model
2025-09-02 19:00:17,798:INFO:Dummy Classifier Imported successfully
2025-09-02 19:00:17,817:INFO:Starting cross validation
2025-09-02 19:00:17,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:17,870:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,876:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,876:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,877:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:00:17,878:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,880:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,880:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,881:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:00:17,883:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,883:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,884:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:00:17,887:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,889:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,904:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,908:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:00:17,910:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,921:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,925:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,925:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,927:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,927:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:00:17,929:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,929:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,931:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:00:17,931:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,932:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:00:17,933:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,934:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,950:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,953:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,956:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:00:17,959:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,966:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,966:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,969:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,969:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,970:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:00:17,971:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:00:17,973:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,973:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:17,989:INFO:Calculating mean and std
2025-09-02 19:00:17,990:INFO:Creating metrics dataframe
2025-09-02 19:00:17,992:INFO:Uploading results into container
2025-09-02 19:00:17,995:INFO:Uploading model into container now
2025-09-02 19:00:17,995:INFO:_master_model_container: 14
2025-09-02 19:00:17,997:INFO:_display_container: 2
2025-09-02 19:00:17,997:INFO:DummyClassifier(constant=None, random_state=3560, strategy='prior')
2025-09-02 19:00:17,997:INFO:create_model() successfully completed......................................
2025-09-02 19:00:18,210:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:18,210:INFO:Creating metrics dataframe
2025-09-02 19:00:18,246:INFO:Initializing create_model()
2025-09-02 19:00:18,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3560, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:18,247:INFO:Checking exceptions
2025-09-02 19:00:18,248:INFO:Importing libraries
2025-09-02 19:00:18,249:INFO:Copying training dataset
2025-09-02 19:00:18,257:INFO:Defining folds
2025-09-02 19:00:18,257:INFO:Declaring metric variables
2025-09-02 19:00:18,257:INFO:Importing untrained model
2025-09-02 19:00:18,257:INFO:Declaring custom model
2025-09-02 19:00:18,259:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-02 19:00:18,260:INFO:Cross validation set to False
2025-09-02 19:00:18,260:INFO:Fitting Model
2025-09-02 19:00:18,274:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-09-02 19:00:18,275:INFO:[LightGBM] [Info] Number of positive: 148, number of negative: 250
2025-09-02 19:00:18,275:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000226 seconds.
2025-09-02 19:00:18,275:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-09-02 19:00:18,275:INFO:[LightGBM] [Info] Total Bins 3972
2025-09-02 19:00:18,276:INFO:[LightGBM] [Info] Number of data points in the train set: 398, number of used features: 30
2025-09-02 19:00:18,277:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.371859 -> initscore=-0.524249
2025-09-02 19:00:18,277:INFO:[LightGBM] [Info] Start training from score -0.524249
2025-09-02 19:00:18,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,310:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,315:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,315:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,315:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-09-02 19:00:18,335:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3560, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-02 19:00:18,335:INFO:create_model() successfully completed......................................
2025-09-02 19:00:18,615:INFO:_master_model_container: 14
2025-09-02 19:00:18,616:INFO:_display_container: 2
2025-09-02 19:00:18,617:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3560, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-02 19:00:18,617:INFO:compare_models() successfully completed......................................
2025-09-02 19:00:18,618:INFO:Initializing create_model()
2025-09-02 19:00:18,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A6A83C40>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:18,618:INFO:Checking exceptions
2025-09-02 19:00:57,465:INFO:PyCaret ClassificationExperiment
2025-09-02 19:00:57,466:INFO:Logging name: clf-default-name
2025-09-02 19:00:57,466:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-02 19:00:57,466:INFO:version 3.3.2
2025-09-02 19:00:57,466:INFO:Initializing setup()
2025-09-02 19:00:57,466:INFO:self.USI: 6caa
2025-09-02 19:00:57,466:INFO:self._variable_keys: {'html_param', 'data', 'fold_groups_param', 'y', 'is_multiclass', 'gpu_n_jobs_param', 'fold_shuffle_param', 'fold_generator', 'X', 'USI', 'X_test', 'idx', 'n_jobs_param', 'gpu_param', 'logging_param', 'exp_name_log', 'log_plots_param', 'target_param', 'X_train', 'fix_imbalance', 'memory', '_ml_usecase', '_available_plots', 'y_train', 'y_test', 'exp_id', 'pipeline', 'seed'}
2025-09-02 19:00:57,466:INFO:Checking environment
2025-09-02 19:00:57,466:INFO:python_version: 3.10.11
2025-09-02 19:00:57,466:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-09-02 19:00:57,466:INFO:machine: AMD64
2025-09-02 19:00:57,466:INFO:platform: Windows-10-10.0.19045-SP0
2025-09-02 19:00:57,468:INFO:Memory: svmem(total=8299257856, available=1016025088, percent=87.8, used=7283232768, free=1016025088)
2025-09-02 19:00:57,468:INFO:Physical Core: 2
2025-09-02 19:00:57,468:INFO:Logical Core: 4
2025-09-02 19:00:57,468:INFO:Checking libraries
2025-09-02 19:00:57,468:INFO:System:
2025-09-02 19:00:57,468:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-09-02 19:00:57,468:INFO:executable: c:\Users\nguye\AppData\Local\Programs\Python\Python310\python.exe
2025-09-02 19:00:57,468:INFO:   machine: Windows-10-10.0.19045-SP0
2025-09-02 19:00:57,468:INFO:PyCaret required dependencies:
2025-09-02 19:00:57,468:INFO:                 pip: 23.0.1
2025-09-02 19:00:57,468:INFO:          setuptools: 65.5.0
2025-09-02 19:00:57,468:INFO:             pycaret: 3.3.2
2025-09-02 19:00:57,469:INFO:             IPython: 8.37.0
2025-09-02 19:00:57,469:INFO:          ipywidgets: 8.1.7
2025-09-02 19:00:57,469:INFO:                tqdm: 4.67.1
2025-09-02 19:00:57,469:INFO:               numpy: 1.26.4
2025-09-02 19:00:57,469:INFO:              pandas: 2.1.4
2025-09-02 19:00:57,469:INFO:              jinja2: 3.1.6
2025-09-02 19:00:57,469:INFO:               scipy: 1.11.4
2025-09-02 19:00:57,469:INFO:              joblib: 1.3.2
2025-09-02 19:00:57,469:INFO:             sklearn: 1.4.2
2025-09-02 19:00:57,469:INFO:                pyod: 2.0.5
2025-09-02 19:00:57,469:INFO:            imblearn: 0.14.0
2025-09-02 19:00:57,469:INFO:   category_encoders: 2.7.0
2025-09-02 19:00:57,469:INFO:            lightgbm: 4.6.0
2025-09-02 19:00:57,469:INFO:               numba: 0.61.2
2025-09-02 19:00:57,469:INFO:            requests: 2.32.4
2025-09-02 19:00:57,469:INFO:          matplotlib: 3.7.5
2025-09-02 19:00:57,469:INFO:          scikitplot: 0.3.7
2025-09-02 19:00:57,469:INFO:         yellowbrick: 1.5
2025-09-02 19:00:57,469:INFO:              plotly: 6.3.0
2025-09-02 19:00:57,469:INFO:    plotly-resampler: Not installed
2025-09-02 19:00:57,469:INFO:             kaleido: 1.0.0
2025-09-02 19:00:57,469:INFO:           schemdraw: 0.15
2025-09-02 19:00:57,469:INFO:         statsmodels: 0.14.5
2025-09-02 19:00:57,469:INFO:              sktime: 0.26.0
2025-09-02 19:00:57,469:INFO:               tbats: 1.1.3
2025-09-02 19:00:57,469:INFO:            pmdarima: 2.0.4
2025-09-02 19:00:57,469:INFO:              psutil: 7.0.0
2025-09-02 19:00:57,469:INFO:          markupsafe: 3.0.2
2025-09-02 19:00:57,469:INFO:             pickle5: Not installed
2025-09-02 19:00:57,469:INFO:         cloudpickle: 3.1.1
2025-09-02 19:00:57,469:INFO:         deprecation: 2.1.0
2025-09-02 19:00:57,469:INFO:              xxhash: 3.5.0
2025-09-02 19:00:57,469:INFO:           wurlitzer: Not installed
2025-09-02 19:00:57,469:INFO:PyCaret optional dependencies:
2025-09-02 19:00:57,469:INFO:                shap: Not installed
2025-09-02 19:00:57,469:INFO:           interpret: Not installed
2025-09-02 19:00:57,469:INFO:                umap: Not installed
2025-09-02 19:00:57,469:INFO:     ydata_profiling: Not installed
2025-09-02 19:00:57,470:INFO:  explainerdashboard: Not installed
2025-09-02 19:00:57,470:INFO:             autoviz: Not installed
2025-09-02 19:00:57,470:INFO:           fairlearn: Not installed
2025-09-02 19:00:57,470:INFO:          deepchecks: Not installed
2025-09-02 19:00:57,470:INFO:             xgboost: Not installed
2025-09-02 19:00:57,470:INFO:            catboost: Not installed
2025-09-02 19:00:57,470:INFO:              kmodes: Not installed
2025-09-02 19:00:57,470:INFO:             mlxtend: Not installed
2025-09-02 19:00:57,470:INFO:       statsforecast: Not installed
2025-09-02 19:00:57,470:INFO:        tune_sklearn: Not installed
2025-09-02 19:00:57,470:INFO:                 ray: Not installed
2025-09-02 19:00:57,470:INFO:            hyperopt: Not installed
2025-09-02 19:00:57,470:INFO:              optuna: Not installed
2025-09-02 19:00:57,470:INFO:               skopt: Not installed
2025-09-02 19:00:57,470:INFO:              mlflow: Not installed
2025-09-02 19:00:57,470:INFO:              gradio: Not installed
2025-09-02 19:00:57,470:INFO:             fastapi: Not installed
2025-09-02 19:00:57,470:INFO:             uvicorn: Not installed
2025-09-02 19:00:57,470:INFO:              m2cgen: Not installed
2025-09-02 19:00:57,470:INFO:           evidently: Not installed
2025-09-02 19:00:57,470:INFO:               fugue: Not installed
2025-09-02 19:00:57,470:INFO:           streamlit: Not installed
2025-09-02 19:00:57,470:INFO:             prophet: Not installed
2025-09-02 19:00:57,470:INFO:None
2025-09-02 19:00:57,470:INFO:Set up data.
2025-09-02 19:00:57,476:INFO:Set up folding strategy.
2025-09-02 19:00:57,476:INFO:Set up train/test split.
2025-09-02 19:00:57,483:INFO:Set up index.
2025-09-02 19:00:57,483:INFO:Assigning column types.
2025-09-02 19:00:57,487:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-02 19:00:57,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 19:00:57,529:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:00:57,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,588:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 19:00:57,589:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:00:57,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,666:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-02 19:00:57,710:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:00:57,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,773:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:00:57,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,798:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-02 19:00:57,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:57,930:INFO:Preparing preprocessing pipeline...
2025-09-02 19:00:57,932:INFO:Set up label encoding.
2025-09-02 19:00:57,932:INFO:Set up simple imputation.
2025-09-02 19:00:57,932:INFO:Set up column name cleaning.
2025-09-02 19:00:57,964:INFO:Finished creating preprocessing pipeline.
2025-09-02 19:00:57,968:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nguye\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'conc...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-02 19:00:57,968:INFO:Creating final display dataframe.
2025-09-02 19:00:58,068:INFO:Setup _display_container:                     Description             Value
0                    Session id              4890
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              6caa
2025-09-02 19:00:58,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:58,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:58,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:58,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:00:58,210:INFO:setup() successfully completed in 0.75s...............
2025-09-02 19:00:58,211:INFO:Initializing compare_models()
2025-09-02 19:00:58,211:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-02 19:00:58,211:INFO:Checking exceptions
2025-09-02 19:00:58,217:INFO:Preparing display monitor
2025-09-02 19:00:58,244:INFO:Initializing Logistic Regression
2025-09-02 19:00:58,244:INFO:Total runtime is 0.0 minutes
2025-09-02 19:00:58,253:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:58,254:INFO:Initializing create_model()
2025-09-02 19:00:58,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:58,254:INFO:Checking exceptions
2025-09-02 19:00:58,254:INFO:Importing libraries
2025-09-02 19:00:58,254:INFO:Copying training dataset
2025-09-02 19:00:58,267:INFO:Defining folds
2025-09-02 19:00:58,267:INFO:Declaring metric variables
2025-09-02 19:00:58,272:INFO:Importing untrained model
2025-09-02 19:00:58,289:INFO:Logistic Regression Imported successfully
2025-09-02 19:00:58,320:INFO:Starting cross validation
2025-09-02 19:00:58,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:58,518:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:58,520:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:58,533:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,534:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,535:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,536:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,538:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,538:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:58,539:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,540:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:58,554:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,556:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,557:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,560:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,560:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,563:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,702:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:58,708:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:58,717:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,720:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,723:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,723:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,723:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:58,726:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,732:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:58,734:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,738:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,742:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,746:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,746:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,749:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,754:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,917:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:58,929:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,930:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:00:58,932:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,934:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,942:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,945:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:58,962:INFO:Calculating mean and std
2025-09-02 19:00:58,963:INFO:Creating metrics dataframe
2025-09-02 19:00:58,965:INFO:Uploading results into container
2025-09-02 19:00:58,965:INFO:Uploading model into container now
2025-09-02 19:00:58,966:INFO:_master_model_container: 1
2025-09-02 19:00:58,966:INFO:_display_container: 2
2025-09-02 19:00:58,966:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4890, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-02 19:00:58,966:INFO:create_model() successfully completed......................................
2025-09-02 19:00:59,140:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:59,140:INFO:Creating metrics dataframe
2025-09-02 19:00:59,145:INFO:Initializing K Neighbors Classifier
2025-09-02 19:00:59,146:INFO:Total runtime is 0.015037246545155843 minutes
2025-09-02 19:00:59,150:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:59,151:INFO:Initializing create_model()
2025-09-02 19:00:59,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:59,151:INFO:Checking exceptions
2025-09-02 19:00:59,151:INFO:Importing libraries
2025-09-02 19:00:59,151:INFO:Copying training dataset
2025-09-02 19:00:59,157:INFO:Defining folds
2025-09-02 19:00:59,157:INFO:Declaring metric variables
2025-09-02 19:00:59,159:INFO:Importing untrained model
2025-09-02 19:00:59,165:INFO:K Neighbors Classifier Imported successfully
2025-09-02 19:00:59,171:INFO:Starting cross validation
2025-09-02 19:00:59,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:59,217:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,221:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,225:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,226:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,229:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,229:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,230:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,232:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,248:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,252:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,256:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,275:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,278:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,279:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,280:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,281:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,282:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,283:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,284:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,286:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,299:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,301:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,303:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,318:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,319:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,320:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,322:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,322:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,325:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,335:INFO:Calculating mean and std
2025-09-02 19:00:59,336:INFO:Creating metrics dataframe
2025-09-02 19:00:59,338:INFO:Uploading results into container
2025-09-02 19:00:59,338:INFO:Uploading model into container now
2025-09-02 19:00:59,338:INFO:_master_model_container: 2
2025-09-02 19:00:59,338:INFO:_display_container: 2
2025-09-02 19:00:59,338:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-02 19:00:59,339:INFO:create_model() successfully completed......................................
2025-09-02 19:00:59,515:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:59,515:INFO:Creating metrics dataframe
2025-09-02 19:00:59,521:INFO:Initializing Naive Bayes
2025-09-02 19:00:59,521:INFO:Total runtime is 0.021281254291534425 minutes
2025-09-02 19:00:59,526:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:59,527:INFO:Initializing create_model()
2025-09-02 19:00:59,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:59,527:INFO:Checking exceptions
2025-09-02 19:00:59,527:INFO:Importing libraries
2025-09-02 19:00:59,527:INFO:Copying training dataset
2025-09-02 19:00:59,533:INFO:Defining folds
2025-09-02 19:00:59,533:INFO:Declaring metric variables
2025-09-02 19:00:59,539:INFO:Importing untrained model
2025-09-02 19:00:59,546:INFO:Naive Bayes Imported successfully
2025-09-02 19:00:59,554:INFO:Starting cross validation
2025-09-02 19:00:59,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:00:59,596:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,598:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,599:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,600:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,603:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,604:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,605:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,606:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,607:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,615:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,621:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,627:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,644:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,646:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,647:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,647:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,649:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,650:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,650:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,653:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,668:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,670:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,672:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,684:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,687:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,689:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,689:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:00:59,707:INFO:Calculating mean and std
2025-09-02 19:00:59,709:INFO:Creating metrics dataframe
2025-09-02 19:00:59,711:INFO:Uploading results into container
2025-09-02 19:00:59,712:INFO:Uploading model into container now
2025-09-02 19:00:59,712:INFO:_master_model_container: 3
2025-09-02 19:00:59,712:INFO:_display_container: 2
2025-09-02 19:00:59,713:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-02 19:00:59,713:INFO:create_model() successfully completed......................................
2025-09-02 19:00:59,890:INFO:SubProcess create_model() end ==================================
2025-09-02 19:00:59,891:INFO:Creating metrics dataframe
2025-09-02 19:00:59,898:INFO:Initializing Decision Tree Classifier
2025-09-02 19:00:59,899:INFO:Total runtime is 0.027580010890960696 minutes
2025-09-02 19:00:59,902:INFO:SubProcess create_model() called ==================================
2025-09-02 19:00:59,902:INFO:Initializing create_model()
2025-09-02 19:00:59,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:00:59,902:INFO:Checking exceptions
2025-09-02 19:00:59,902:INFO:Importing libraries
2025-09-02 19:00:59,902:INFO:Copying training dataset
2025-09-02 19:00:59,909:INFO:Defining folds
2025-09-02 19:00:59,910:INFO:Declaring metric variables
2025-09-02 19:00:59,913:INFO:Importing untrained model
2025-09-02 19:00:59,920:INFO:Decision Tree Classifier Imported successfully
2025-09-02 19:00:59,966:INFO:Starting cross validation
2025-09-02 19:00:59,968:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:00,017:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,018:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,020:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,021:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,025:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,026:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,062:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,064:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,065:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,067:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,068:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,070:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,083:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,086:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,088:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,091:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,093:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,096:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,119:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,121:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,122:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,126:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,126:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,129:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,138:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,139:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,141:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,142:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,143:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,144:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,158:INFO:Calculating mean and std
2025-09-02 19:01:00,159:INFO:Creating metrics dataframe
2025-09-02 19:01:00,161:INFO:Uploading results into container
2025-09-02 19:01:00,161:INFO:Uploading model into container now
2025-09-02 19:01:00,161:INFO:_master_model_container: 4
2025-09-02 19:01:00,161:INFO:_display_container: 2
2025-09-02 19:01:00,162:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4890, splitter='best')
2025-09-02 19:01:00,162:INFO:create_model() successfully completed......................................
2025-09-02 19:01:00,342:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:00,342:INFO:Creating metrics dataframe
2025-09-02 19:01:00,349:INFO:Initializing SVM - Linear Kernel
2025-09-02 19:01:00,349:INFO:Total runtime is 0.035082169373830165 minutes
2025-09-02 19:01:00,353:INFO:SubProcess create_model() called ==================================
2025-09-02 19:01:00,353:INFO:Initializing create_model()
2025-09-02 19:01:00,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:00,353:INFO:Checking exceptions
2025-09-02 19:01:00,353:INFO:Importing libraries
2025-09-02 19:01:00,353:INFO:Copying training dataset
2025-09-02 19:01:00,360:INFO:Defining folds
2025-09-02 19:01:00,360:INFO:Declaring metric variables
2025-09-02 19:01:00,366:INFO:Importing untrained model
2025-09-02 19:01:00,371:INFO:SVM - Linear Kernel Imported successfully
2025-09-02 19:01:00,380:INFO:Starting cross validation
2025-09-02 19:01:00,382:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:00,427:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,430:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,436:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,437:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,443:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,443:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,446:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,450:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,492:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,497:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,502:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,511:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,513:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,515:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,516:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,519:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,519:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,527:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,531:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,534:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,548:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,552:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,555:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,570:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,570:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,574:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,575:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,579:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,582:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,592:INFO:Calculating mean and std
2025-09-02 19:01:00,593:INFO:Creating metrics dataframe
2025-09-02 19:01:00,595:INFO:Uploading results into container
2025-09-02 19:01:00,596:INFO:Uploading model into container now
2025-09-02 19:01:00,596:INFO:_master_model_container: 5
2025-09-02 19:01:00,597:INFO:_display_container: 2
2025-09-02 19:01:00,597:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4890, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-02 19:01:00,597:INFO:create_model() successfully completed......................................
2025-09-02 19:01:00,777:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:00,777:INFO:Creating metrics dataframe
2025-09-02 19:01:00,783:INFO:Initializing Ridge Classifier
2025-09-02 19:01:00,783:INFO:Total runtime is 0.04231798648834229 minutes
2025-09-02 19:01:00,787:INFO:SubProcess create_model() called ==================================
2025-09-02 19:01:00,789:INFO:Initializing create_model()
2025-09-02 19:01:00,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:00,789:INFO:Checking exceptions
2025-09-02 19:01:00,789:INFO:Importing libraries
2025-09-02 19:01:00,789:INFO:Copying training dataset
2025-09-02 19:01:00,796:INFO:Defining folds
2025-09-02 19:01:00,796:INFO:Declaring metric variables
2025-09-02 19:01:00,799:INFO:Importing untrained model
2025-09-02 19:01:00,807:INFO:Ridge Classifier Imported successfully
2025-09-02 19:01:00,815:INFO:Starting cross validation
2025-09-02 19:01:00,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:00,845:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.33395e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:01:00,848:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.56612e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:01:00,861:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,862:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.75066e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:01:00,863:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,864:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,866:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,867:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,869:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,877:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,878:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,884:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,885:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,887:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,890:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,891:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.67695e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:01:00,894:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.17058e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:01:00,910:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,913:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,914:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,915:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.70563e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:01:00,917:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,920:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,923:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.346e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:01:00,927:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,929:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,932:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,936:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,941:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.46015e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:01:00,941:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,944:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,947:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,950:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.43204e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:01:00,956:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,958:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,961:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,963:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,965:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,967:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:00,977:INFO:Calculating mean and std
2025-09-02 19:01:00,978:INFO:Creating metrics dataframe
2025-09-02 19:01:00,980:INFO:Uploading results into container
2025-09-02 19:01:00,981:INFO:Uploading model into container now
2025-09-02 19:01:00,981:INFO:_master_model_container: 6
2025-09-02 19:01:00,981:INFO:_display_container: 2
2025-09-02 19:01:00,981:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4890, solver='auto',
                tol=0.0001)
2025-09-02 19:01:00,981:INFO:create_model() successfully completed......................................
2025-09-02 19:01:01,152:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:01,153:INFO:Creating metrics dataframe
2025-09-02 19:01:01,164:INFO:Initializing Random Forest Classifier
2025-09-02 19:01:01,164:INFO:Total runtime is 0.04867337942123414 minutes
2025-09-02 19:01:01,167:INFO:SubProcess create_model() called ==================================
2025-09-02 19:01:01,167:INFO:Initializing create_model()
2025-09-02 19:01:01,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:01,168:INFO:Checking exceptions
2025-09-02 19:01:01,168:INFO:Importing libraries
2025-09-02 19:01:01,168:INFO:Copying training dataset
2025-09-02 19:01:01,176:INFO:Defining folds
2025-09-02 19:01:01,176:INFO:Declaring metric variables
2025-09-02 19:01:01,182:INFO:Importing untrained model
2025-09-02 19:01:01,187:INFO:Random Forest Classifier Imported successfully
2025-09-02 19:01:01,198:INFO:Starting cross validation
2025-09-02 19:01:01,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:01,528:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,529:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,532:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,545:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,546:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,550:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,556:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,557:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,590:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,593:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,595:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,850:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,855:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,859:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,865:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,870:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,870:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,873:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:01,876:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,063:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,066:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,073:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,192:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,192:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,198:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,198:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,201:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,201:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,212:INFO:Calculating mean and std
2025-09-02 19:01:02,214:INFO:Creating metrics dataframe
2025-09-02 19:01:02,217:INFO:Uploading results into container
2025-09-02 19:01:02,218:INFO:Uploading model into container now
2025-09-02 19:01:02,221:INFO:_master_model_container: 7
2025-09-02 19:01:02,221:INFO:_display_container: 2
2025-09-02 19:01:02,221:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4890, verbose=0,
                       warm_start=False)
2025-09-02 19:01:02,222:INFO:create_model() successfully completed......................................
2025-09-02 19:01:02,400:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:02,400:INFO:Creating metrics dataframe
2025-09-02 19:01:02,406:INFO:Initializing Quadratic Discriminant Analysis
2025-09-02 19:01:02,406:INFO:Total runtime is 0.06936693191528322 minutes
2025-09-02 19:01:02,409:INFO:SubProcess create_model() called ==================================
2025-09-02 19:01:02,409:INFO:Initializing create_model()
2025-09-02 19:01:02,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:02,410:INFO:Checking exceptions
2025-09-02 19:01:02,410:INFO:Importing libraries
2025-09-02 19:01:02,410:INFO:Copying training dataset
2025-09-02 19:01:02,416:INFO:Defining folds
2025-09-02 19:01:02,416:INFO:Declaring metric variables
2025-09-02 19:01:02,420:INFO:Importing untrained model
2025-09-02 19:01:02,426:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-02 19:01:02,433:INFO:Starting cross validation
2025-09-02 19:01:02,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:02,477:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,480:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,481:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,485:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,486:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,486:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,488:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,489:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,489:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,498:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,512:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,521:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,530:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,534:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,538:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,542:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,543:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,546:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,549:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,551:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,563:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,587:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,590:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,594:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,594:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,596:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,598:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,606:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,607:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,609:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:02,617:INFO:Calculating mean and std
2025-09-02 19:01:02,619:INFO:Creating metrics dataframe
2025-09-02 19:01:02,620:INFO:Uploading results into container
2025-09-02 19:01:02,621:INFO:Uploading model into container now
2025-09-02 19:01:02,622:INFO:_master_model_container: 8
2025-09-02 19:01:02,622:INFO:_display_container: 2
2025-09-02 19:01:02,622:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-02 19:01:02,623:INFO:create_model() successfully completed......................................
2025-09-02 19:01:02,774:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:02,774:INFO:Creating metrics dataframe
2025-09-02 19:01:02,781:INFO:Initializing Ada Boost Classifier
2025-09-02 19:01:02,781:INFO:Total runtime is 0.075625745455424 minutes
2025-09-02 19:01:02,785:INFO:SubProcess create_model() called ==================================
2025-09-02 19:01:02,785:INFO:Initializing create_model()
2025-09-02 19:01:02,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:02,786:INFO:Checking exceptions
2025-09-02 19:01:02,786:INFO:Importing libraries
2025-09-02 19:01:02,786:INFO:Copying training dataset
2025-09-02 19:01:02,793:INFO:Defining folds
2025-09-02 19:01:02,793:INFO:Declaring metric variables
2025-09-02 19:01:02,796:INFO:Importing untrained model
2025-09-02 19:01:02,804:INFO:Ada Boost Classifier Imported successfully
2025-09-02 19:01:02,817:INFO:Starting cross validation
2025-09-02 19:01:02,819:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:02,845:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:01:02,847:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:01:02,851:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:01:02,872:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:01:03,117:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,120:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,123:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,126:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,135:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,138:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,139:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,142:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,143:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:01:03,145:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,158:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,159:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:01:03,162:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,166:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,171:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:01:03,186:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:01:03,347:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,353:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,356:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,359:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,363:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,366:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,367:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,369:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,372:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,377:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:01:03,385:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:01:03,386:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,389:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,392:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,512:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,516:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,518:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,521:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,523:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,525:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:03,529:INFO:Calculating mean and std
2025-09-02 19:01:03,532:INFO:Creating metrics dataframe
2025-09-02 19:01:03,534:INFO:Uploading results into container
2025-09-02 19:01:03,535:INFO:Uploading model into container now
2025-09-02 19:01:03,536:INFO:_master_model_container: 9
2025-09-02 19:01:03,536:INFO:_display_container: 2
2025-09-02 19:01:03,537:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4890)
2025-09-02 19:01:03,537:INFO:create_model() successfully completed......................................
2025-09-02 19:01:03,686:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:03,686:INFO:Creating metrics dataframe
2025-09-02 19:01:03,693:INFO:Initializing Gradient Boosting Classifier
2025-09-02 19:01:03,693:INFO:Total runtime is 0.09082191785176597 minutes
2025-09-02 19:01:03,698:INFO:SubProcess create_model() called ==================================
2025-09-02 19:01:03,698:INFO:Initializing create_model()
2025-09-02 19:01:03,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:03,699:INFO:Checking exceptions
2025-09-02 19:01:03,699:INFO:Importing libraries
2025-09-02 19:01:03,699:INFO:Copying training dataset
2025-09-02 19:01:03,705:INFO:Defining folds
2025-09-02 19:01:03,705:INFO:Declaring metric variables
2025-09-02 19:01:03,707:INFO:Importing untrained model
2025-09-02 19:01:03,716:INFO:Gradient Boosting Classifier Imported successfully
2025-09-02 19:01:03,724:INFO:Starting cross validation
2025-09-02 19:01:03,726:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:04,249:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,252:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,255:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,255:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,258:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,263:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,266:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,272:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,275:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,276:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,281:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,781:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,782:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,784:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,785:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,787:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,788:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,801:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,805:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,809:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,816:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,820:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:04,823:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,195:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,197:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,199:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,202:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,204:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,206:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,222:INFO:Calculating mean and std
2025-09-02 19:01:05,223:INFO:Creating metrics dataframe
2025-09-02 19:01:05,225:INFO:Uploading results into container
2025-09-02 19:01:05,225:INFO:Uploading model into container now
2025-09-02 19:01:05,227:INFO:_master_model_container: 10
2025-09-02 19:01:05,227:INFO:_display_container: 2
2025-09-02 19:01:05,228:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4890, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-02 19:01:05,228:INFO:create_model() successfully completed......................................
2025-09-02 19:01:05,379:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:05,379:INFO:Creating metrics dataframe
2025-09-02 19:01:05,386:INFO:Initializing Linear Discriminant Analysis
2025-09-02 19:01:05,386:INFO:Total runtime is 0.11903584400812786 minutes
2025-09-02 19:01:05,389:INFO:SubProcess create_model() called ==================================
2025-09-02 19:01:05,389:INFO:Initializing create_model()
2025-09-02 19:01:05,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:05,390:INFO:Checking exceptions
2025-09-02 19:01:05,390:INFO:Importing libraries
2025-09-02 19:01:05,390:INFO:Copying training dataset
2025-09-02 19:01:05,397:INFO:Defining folds
2025-09-02 19:01:05,397:INFO:Declaring metric variables
2025-09-02 19:01:05,400:INFO:Importing untrained model
2025-09-02 19:01:05,407:INFO:Linear Discriminant Analysis Imported successfully
2025-09-02 19:01:05,417:INFO:Starting cross validation
2025-09-02 19:01:05,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:05,457:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,461:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,464:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,461:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,469:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,469:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,472:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,473:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,484:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,489:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,494:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,512:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,515:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,515:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,518:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,521:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,529:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,532:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,532:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,535:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,538:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,553:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,554:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,555:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,556:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,557:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,558:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:05,566:INFO:Calculating mean and std
2025-09-02 19:01:05,567:INFO:Creating metrics dataframe
2025-09-02 19:01:05,570:INFO:Uploading results into container
2025-09-02 19:01:05,570:INFO:Uploading model into container now
2025-09-02 19:01:05,571:INFO:_master_model_container: 11
2025-09-02 19:01:05,571:INFO:_display_container: 2
2025-09-02 19:01:05,571:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-02 19:01:05,571:INFO:create_model() successfully completed......................................
2025-09-02 19:01:05,718:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:05,719:INFO:Creating metrics dataframe
2025-09-02 19:01:05,727:INFO:Initializing Extra Trees Classifier
2025-09-02 19:01:05,727:INFO:Total runtime is 0.1247240742047628 minutes
2025-09-02 19:01:05,732:INFO:SubProcess create_model() called ==================================
2025-09-02 19:01:05,732:INFO:Initializing create_model()
2025-09-02 19:01:05,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:05,732:INFO:Checking exceptions
2025-09-02 19:01:05,733:INFO:Importing libraries
2025-09-02 19:01:05,733:INFO:Copying training dataset
2025-09-02 19:01:05,739:INFO:Defining folds
2025-09-02 19:01:05,739:INFO:Declaring metric variables
2025-09-02 19:01:05,743:INFO:Importing untrained model
2025-09-02 19:01:05,750:INFO:Extra Trees Classifier Imported successfully
2025-09-02 19:01:05,767:INFO:Starting cross validation
2025-09-02 19:01:05,769:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:06,003:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,004:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,004:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,007:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,008:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,009:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,010:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,012:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,012:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,066:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,068:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,071:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,220:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,224:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,228:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,228:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,237:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,251:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,254:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,259:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,330:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,334:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,338:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,408:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,410:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,413:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,441:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,443:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,446:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,451:INFO:Calculating mean and std
2025-09-02 19:01:06,452:INFO:Creating metrics dataframe
2025-09-02 19:01:06,454:INFO:Uploading results into container
2025-09-02 19:01:06,454:INFO:Uploading model into container now
2025-09-02 19:01:06,455:INFO:_master_model_container: 12
2025-09-02 19:01:06,455:INFO:_display_container: 2
2025-09-02 19:01:06,458:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4890, verbose=0,
                     warm_start=False)
2025-09-02 19:01:06,459:INFO:create_model() successfully completed......................................
2025-09-02 19:01:06,608:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:06,608:INFO:Creating metrics dataframe
2025-09-02 19:01:06,615:INFO:Initializing Light Gradient Boosting Machine
2025-09-02 19:01:06,616:INFO:Total runtime is 0.13953416744867964 minutes
2025-09-02 19:01:06,618:INFO:SubProcess create_model() called ==================================
2025-09-02 19:01:06,619:INFO:Initializing create_model()
2025-09-02 19:01:06,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:06,619:INFO:Checking exceptions
2025-09-02 19:01:06,619:INFO:Importing libraries
2025-09-02 19:01:06,619:INFO:Copying training dataset
2025-09-02 19:01:06,628:INFO:Defining folds
2025-09-02 19:01:06,628:INFO:Declaring metric variables
2025-09-02 19:01:06,631:INFO:Importing untrained model
2025-09-02 19:01:06,638:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-02 19:01:06,648:INFO:Starting cross validation
2025-09-02 19:01:06,650:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:06,911:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,914:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,919:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,923:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,927:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,930:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,940:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,943:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,947:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,985:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,989:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:06,993:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,182:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,186:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,190:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,190:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,202:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,206:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,210:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,261:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,264:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,267:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,364:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,366:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,366:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,369:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,369:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,373:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,388:INFO:Calculating mean and std
2025-09-02 19:01:07,390:INFO:Creating metrics dataframe
2025-09-02 19:01:07,393:INFO:Uploading results into container
2025-09-02 19:01:07,394:INFO:Uploading model into container now
2025-09-02 19:01:07,395:INFO:_master_model_container: 13
2025-09-02 19:01:07,395:INFO:_display_container: 2
2025-09-02 19:01:07,396:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4890, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-02 19:01:07,396:INFO:create_model() successfully completed......................................
2025-09-02 19:01:07,561:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:07,562:INFO:Creating metrics dataframe
2025-09-02 19:01:07,569:INFO:Initializing Dummy Classifier
2025-09-02 19:01:07,569:INFO:Total runtime is 0.1554126818974813 minutes
2025-09-02 19:01:07,573:INFO:SubProcess create_model() called ==================================
2025-09-02 19:01:07,573:INFO:Initializing create_model()
2025-09-02 19:01:07,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000157A4B10190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:07,574:INFO:Checking exceptions
2025-09-02 19:01:07,574:INFO:Importing libraries
2025-09-02 19:01:07,574:INFO:Copying training dataset
2025-09-02 19:01:07,579:INFO:Defining folds
2025-09-02 19:01:07,580:INFO:Declaring metric variables
2025-09-02 19:01:07,584:INFO:Importing untrained model
2025-09-02 19:01:07,592:INFO:Dummy Classifier Imported successfully
2025-09-02 19:01:07,601:INFO:Starting cross validation
2025-09-02 19:01:07,601:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:01:07,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,643:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,643:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,645:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:01:07,646:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,647:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,648:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:01:07,650:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,663:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,664:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,666:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:01:07,666:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,668:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:01:07,668:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,674:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,683:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,689:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,692:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,693:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,694:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:01:07,694:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:01:07,695:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,696:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,709:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,711:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,712:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,714:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:01:07,714:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,716:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:01:07,716:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,718:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,725:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,726:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,727:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:01:07,728:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,729:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:01:07,729:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,730:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:01:07,748:INFO:Calculating mean and std
2025-09-02 19:01:07,749:INFO:Creating metrics dataframe
2025-09-02 19:01:07,754:INFO:Uploading results into container
2025-09-02 19:01:07,755:INFO:Uploading model into container now
2025-09-02 19:01:07,756:INFO:_master_model_container: 14
2025-09-02 19:01:07,756:INFO:_display_container: 2
2025-09-02 19:01:07,756:INFO:DummyClassifier(constant=None, random_state=4890, strategy='prior')
2025-09-02 19:01:07,756:INFO:create_model() successfully completed......................................
2025-09-02 19:01:07,907:INFO:SubProcess create_model() end ==================================
2025-09-02 19:01:07,907:INFO:Creating metrics dataframe
2025-09-02 19:01:07,926:INFO:Initializing create_model()
2025-09-02 19:01:07,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4890, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:07,926:INFO:Checking exceptions
2025-09-02 19:01:07,928:INFO:Importing libraries
2025-09-02 19:01:07,928:INFO:Copying training dataset
2025-09-02 19:01:07,934:INFO:Defining folds
2025-09-02 19:01:07,934:INFO:Declaring metric variables
2025-09-02 19:01:07,934:INFO:Importing untrained model
2025-09-02 19:01:07,934:INFO:Declaring custom model
2025-09-02 19:01:07,934:INFO:Gradient Boosting Classifier Imported successfully
2025-09-02 19:01:07,935:INFO:Cross validation set to False
2025-09-02 19:01:07,936:INFO:Fitting Model
2025-09-02 19:01:08,332:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4890, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-02 19:01:08,332:INFO:create_model() successfully completed......................................
2025-09-02 19:01:08,505:INFO:_master_model_container: 14
2025-09-02 19:01:08,506:INFO:_display_container: 2
2025-09-02 19:01:08,506:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4890, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-02 19:01:08,506:INFO:compare_models() successfully completed......................................
2025-09-02 19:01:08,507:INFO:Initializing create_model()
2025-09-02 19:01:08,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000157A7FD17B0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:01:08,507:INFO:Checking exceptions
2025-09-02 19:03:14,665:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 19:03:14,665:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 19:03:14,665:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 19:03:14,665:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 19:03:18,943:INFO:PyCaret ClassificationExperiment
2025-09-02 19:03:18,943:INFO:Logging name: clf-default-name
2025-09-02 19:03:18,943:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-02 19:03:18,943:INFO:version 3.3.2
2025-09-02 19:03:18,943:INFO:Initializing setup()
2025-09-02 19:03:18,943:INFO:self.USI: 7034
2025-09-02 19:03:18,943:INFO:self._variable_keys: {'exp_id', 'target_param', 'fold_groups_param', 'memory', 'html_param', 'logging_param', 'pipeline', 'X_train', 'y_test', 'data', 'seed', '_ml_usecase', 'idx', 'exp_name_log', 'is_multiclass', 'USI', 'n_jobs_param', '_available_plots', 'y_train', 'y', 'fold_shuffle_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'X_test', 'fix_imbalance', 'gpu_n_jobs_param', 'X'}
2025-09-02 19:03:18,943:INFO:Checking environment
2025-09-02 19:03:18,943:INFO:python_version: 3.10.11
2025-09-02 19:03:18,943:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-09-02 19:03:18,943:INFO:machine: AMD64
2025-09-02 19:03:18,943:INFO:platform: Windows-10-10.0.19045-SP0
2025-09-02 19:03:18,946:INFO:Memory: svmem(total=8299257856, available=1377157120, percent=83.4, used=6922100736, free=1377157120)
2025-09-02 19:03:18,946:INFO:Physical Core: 2
2025-09-02 19:03:18,947:INFO:Logical Core: 4
2025-09-02 19:03:18,947:INFO:Checking libraries
2025-09-02 19:03:18,947:INFO:System:
2025-09-02 19:03:18,947:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-09-02 19:03:18,947:INFO:executable: c:\Users\nguye\AppData\Local\Programs\Python\Python310\python.exe
2025-09-02 19:03:18,947:INFO:   machine: Windows-10-10.0.19045-SP0
2025-09-02 19:03:18,947:INFO:PyCaret required dependencies:
2025-09-02 19:03:18,982:INFO:                 pip: 23.0.1
2025-09-02 19:03:18,982:INFO:          setuptools: 65.5.0
2025-09-02 19:03:18,982:INFO:             pycaret: 3.3.2
2025-09-02 19:03:18,982:INFO:             IPython: 8.37.0
2025-09-02 19:03:18,982:INFO:          ipywidgets: 8.1.7
2025-09-02 19:03:18,982:INFO:                tqdm: 4.67.1
2025-09-02 19:03:18,982:INFO:               numpy: 1.26.4
2025-09-02 19:03:18,982:INFO:              pandas: 2.1.4
2025-09-02 19:03:18,982:INFO:              jinja2: 3.1.6
2025-09-02 19:03:18,982:INFO:               scipy: 1.11.4
2025-09-02 19:03:18,983:INFO:              joblib: 1.3.2
2025-09-02 19:03:18,983:INFO:             sklearn: 1.4.2
2025-09-02 19:03:18,983:INFO:                pyod: 2.0.5
2025-09-02 19:03:18,983:INFO:            imblearn: 0.14.0
2025-09-02 19:03:18,983:INFO:   category_encoders: 2.7.0
2025-09-02 19:03:18,983:INFO:            lightgbm: 4.6.0
2025-09-02 19:03:18,983:INFO:               numba: 0.61.2
2025-09-02 19:03:18,983:INFO:            requests: 2.32.4
2025-09-02 19:03:18,983:INFO:          matplotlib: 3.7.5
2025-09-02 19:03:18,983:INFO:          scikitplot: 0.3.7
2025-09-02 19:03:18,983:INFO:         yellowbrick: 1.5
2025-09-02 19:03:18,983:INFO:              plotly: 6.3.0
2025-09-02 19:03:18,983:INFO:    plotly-resampler: Not installed
2025-09-02 19:03:18,983:INFO:             kaleido: 1.0.0
2025-09-02 19:03:18,983:INFO:           schemdraw: 0.15
2025-09-02 19:03:18,983:INFO:         statsmodels: 0.14.5
2025-09-02 19:03:18,983:INFO:              sktime: 0.26.0
2025-09-02 19:03:18,983:INFO:               tbats: 1.1.3
2025-09-02 19:03:18,983:INFO:            pmdarima: 2.0.4
2025-09-02 19:03:18,983:INFO:              psutil: 7.0.0
2025-09-02 19:03:18,983:INFO:          markupsafe: 3.0.2
2025-09-02 19:03:18,983:INFO:             pickle5: Not installed
2025-09-02 19:03:18,983:INFO:         cloudpickle: 3.1.1
2025-09-02 19:03:18,983:INFO:         deprecation: 2.1.0
2025-09-02 19:03:18,983:INFO:              xxhash: 3.5.0
2025-09-02 19:03:18,983:INFO:           wurlitzer: Not installed
2025-09-02 19:03:18,983:INFO:PyCaret optional dependencies:
2025-09-02 19:03:18,992:INFO:                shap: Not installed
2025-09-02 19:03:18,992:INFO:           interpret: Not installed
2025-09-02 19:03:18,992:INFO:                umap: Not installed
2025-09-02 19:03:18,992:INFO:     ydata_profiling: Not installed
2025-09-02 19:03:18,992:INFO:  explainerdashboard: Not installed
2025-09-02 19:03:18,992:INFO:             autoviz: Not installed
2025-09-02 19:03:18,992:INFO:           fairlearn: Not installed
2025-09-02 19:03:18,992:INFO:          deepchecks: Not installed
2025-09-02 19:03:18,992:INFO:             xgboost: Not installed
2025-09-02 19:03:18,992:INFO:            catboost: Not installed
2025-09-02 19:03:18,992:INFO:              kmodes: Not installed
2025-09-02 19:03:18,993:INFO:             mlxtend: Not installed
2025-09-02 19:03:18,993:INFO:       statsforecast: Not installed
2025-09-02 19:03:18,993:INFO:        tune_sklearn: Not installed
2025-09-02 19:03:18,993:INFO:                 ray: Not installed
2025-09-02 19:03:18,993:INFO:            hyperopt: Not installed
2025-09-02 19:03:18,993:INFO:              optuna: Not installed
2025-09-02 19:03:18,993:INFO:               skopt: Not installed
2025-09-02 19:03:18,993:INFO:              mlflow: Not installed
2025-09-02 19:03:18,993:INFO:              gradio: Not installed
2025-09-02 19:03:18,993:INFO:             fastapi: Not installed
2025-09-02 19:03:18,993:INFO:             uvicorn: Not installed
2025-09-02 19:03:18,993:INFO:              m2cgen: Not installed
2025-09-02 19:03:18,993:INFO:           evidently: Not installed
2025-09-02 19:03:18,993:INFO:               fugue: Not installed
2025-09-02 19:03:18,993:INFO:           streamlit: Not installed
2025-09-02 19:03:18,993:INFO:             prophet: Not installed
2025-09-02 19:03:18,993:INFO:None
2025-09-02 19:03:18,993:INFO:Set up data.
2025-09-02 19:03:19,000:INFO:Set up folding strategy.
2025-09-02 19:03:19,000:INFO:Set up train/test split.
2025-09-02 19:03:19,008:INFO:Set up index.
2025-09-02 19:03:19,009:INFO:Assigning column types.
2025-09-02 19:03:19,014:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-02 19:03:19,050:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 19:03:19,055:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:03:19,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-02 19:03:19,136:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:03:19,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,162:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-02 19:03:19,199:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:03:19,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,263:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-02 19:03:19,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,288:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-02 19:03:19,347:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,407:INFO:Preparing preprocessing pipeline...
2025-09-02 19:03:19,409:INFO:Set up label encoding.
2025-09-02 19:03:19,409:INFO:Set up simple imputation.
2025-09-02 19:03:19,410:INFO:Set up column name cleaning.
2025-09-02 19:03:19,440:INFO:Finished creating preprocessing pipeline.
2025-09-02 19:03:19,447:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nguye\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'conc...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-02 19:03:19,447:INFO:Creating final display dataframe.
2025-09-02 19:03:19,548:INFO:Setup _display_container:                     Description             Value
0                    Session id              3680
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              7034
2025-09-02 19:03:19,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-02 19:03:19,916:INFO:setup() successfully completed in 0.97s...............
2025-09-02 19:03:19,916:INFO:Initializing compare_models()
2025-09-02 19:03:19,916:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-02 19:03:19,916:INFO:Checking exceptions
2025-09-02 19:03:19,920:INFO:Preparing display monitor
2025-09-02 19:03:19,949:INFO:Initializing Logistic Regression
2025-09-02 19:03:19,949:INFO:Total runtime is 0.0 minutes
2025-09-02 19:03:19,956:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:19,957:INFO:Initializing create_model()
2025-09-02 19:03:19,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:19,958:INFO:Checking exceptions
2025-09-02 19:03:19,958:INFO:Importing libraries
2025-09-02 19:03:19,958:INFO:Copying training dataset
2025-09-02 19:03:19,972:INFO:Defining folds
2025-09-02 19:03:19,972:INFO:Declaring metric variables
2025-09-02 19:03:19,981:INFO:Importing untrained model
2025-09-02 19:03:19,986:INFO:Logistic Regression Imported successfully
2025-09-02 19:03:20,003:INFO:Starting cross validation
2025-09-02 19:03:20,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:24,626:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:03:24,642:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,648:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,651:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,654:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:03:24,680:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,685:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,689:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,770:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:03:24,788:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,792:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,797:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,871:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:03:24,889:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,893:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,897:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,922:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:03:24,939:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,942:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,947:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,957:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:03:24,977:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,983:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:24,987:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,042:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:03:25,064:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,068:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,071:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,215:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:03:25,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:03:25,231:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,234:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,237:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,239:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,241:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-02 19:03:25,243:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,246:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,253:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,255:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,257:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,271:INFO:Calculating mean and std
2025-09-02 19:03:25,272:INFO:Creating metrics dataframe
2025-09-02 19:03:25,274:INFO:Uploading results into container
2025-09-02 19:03:25,274:INFO:Uploading model into container now
2025-09-02 19:03:25,275:INFO:_master_model_container: 1
2025-09-02 19:03:25,275:INFO:_display_container: 2
2025-09-02 19:03:25,275:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3680, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-02 19:03:25,275:INFO:create_model() successfully completed......................................
2025-09-02 19:03:25,416:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:25,416:INFO:Creating metrics dataframe
2025-09-02 19:03:25,421:INFO:Initializing K Neighbors Classifier
2025-09-02 19:03:25,421:INFO:Total runtime is 0.09120978116989135 minutes
2025-09-02 19:03:25,428:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:25,429:INFO:Initializing create_model()
2025-09-02 19:03:25,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:25,429:INFO:Checking exceptions
2025-09-02 19:03:25,429:INFO:Importing libraries
2025-09-02 19:03:25,429:INFO:Copying training dataset
2025-09-02 19:03:25,437:INFO:Defining folds
2025-09-02 19:03:25,437:INFO:Declaring metric variables
2025-09-02 19:03:25,446:INFO:Importing untrained model
2025-09-02 19:03:25,454:INFO:K Neighbors Classifier Imported successfully
2025-09-02 19:03:25,469:INFO:Starting cross validation
2025-09-02 19:03:25,471:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:25,600:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,601:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,601:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,603:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,604:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,604:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,606:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,607:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,607:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,615:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,619:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,622:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,650:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,652:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,653:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,654:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,655:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,656:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,657:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,658:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,662:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,672:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,675:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,680:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,698:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,699:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,701:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,702:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,703:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,705:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,720:INFO:Calculating mean and std
2025-09-02 19:03:25,722:INFO:Creating metrics dataframe
2025-09-02 19:03:25,728:INFO:Uploading results into container
2025-09-02 19:03:25,730:INFO:Uploading model into container now
2025-09-02 19:03:25,730:INFO:_master_model_container: 2
2025-09-02 19:03:25,730:INFO:_display_container: 2
2025-09-02 19:03:25,731:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-02 19:03:25,731:INFO:create_model() successfully completed......................................
2025-09-02 19:03:25,889:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:25,889:INFO:Creating metrics dataframe
2025-09-02 19:03:25,896:INFO:Initializing Naive Bayes
2025-09-02 19:03:25,896:INFO:Total runtime is 0.09912452697753905 minutes
2025-09-02 19:03:25,899:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:25,899:INFO:Initializing create_model()
2025-09-02 19:03:25,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:25,900:INFO:Checking exceptions
2025-09-02 19:03:25,900:INFO:Importing libraries
2025-09-02 19:03:25,900:INFO:Copying training dataset
2025-09-02 19:03:25,907:INFO:Defining folds
2025-09-02 19:03:25,907:INFO:Declaring metric variables
2025-09-02 19:03:25,913:INFO:Importing untrained model
2025-09-02 19:03:25,919:INFO:Naive Bayes Imported successfully
2025-09-02 19:03:25,930:INFO:Starting cross validation
2025-09-02 19:03:25,931:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:25,973:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,981:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,983:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,987:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,987:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,987:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,991:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,991:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,991:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,995:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:25,998:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,001:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,036:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,038:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,039:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,041:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,043:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,045:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,046:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,049:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,053:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,056:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,061:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,064:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,076:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,079:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,081:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,082:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,084:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,086:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,093:INFO:Calculating mean and std
2025-09-02 19:03:26,094:INFO:Creating metrics dataframe
2025-09-02 19:03:26,095:INFO:Uploading results into container
2025-09-02 19:03:26,096:INFO:Uploading model into container now
2025-09-02 19:03:26,096:INFO:_master_model_container: 3
2025-09-02 19:03:26,097:INFO:_display_container: 2
2025-09-02 19:03:26,097:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-02 19:03:26,098:INFO:create_model() successfully completed......................................
2025-09-02 19:03:26,223:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:26,223:INFO:Creating metrics dataframe
2025-09-02 19:03:26,230:INFO:Initializing Decision Tree Classifier
2025-09-02 19:03:26,230:INFO:Total runtime is 0.1046839674313863 minutes
2025-09-02 19:03:26,233:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:26,234:INFO:Initializing create_model()
2025-09-02 19:03:26,234:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:26,234:INFO:Checking exceptions
2025-09-02 19:03:26,234:INFO:Importing libraries
2025-09-02 19:03:26,234:INFO:Copying training dataset
2025-09-02 19:03:26,239:INFO:Defining folds
2025-09-02 19:03:26,239:INFO:Declaring metric variables
2025-09-02 19:03:26,245:INFO:Importing untrained model
2025-09-02 19:03:26,252:INFO:Decision Tree Classifier Imported successfully
2025-09-02 19:03:26,262:INFO:Starting cross validation
2025-09-02 19:03:26,264:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:26,319:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,320:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,321:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,322:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,324:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,324:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,327:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,330:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,331:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,360:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,362:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,365:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,371:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,375:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,378:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,379:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,383:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,386:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,394:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,398:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,401:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,404:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,408:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,412:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,419:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,419:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,421:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,422:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,426:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,426:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,432:INFO:Calculating mean and std
2025-09-02 19:03:26,433:INFO:Creating metrics dataframe
2025-09-02 19:03:26,435:INFO:Uploading results into container
2025-09-02 19:03:26,436:INFO:Uploading model into container now
2025-09-02 19:03:26,437:INFO:_master_model_container: 4
2025-09-02 19:03:26,437:INFO:_display_container: 2
2025-09-02 19:03:26,437:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3680, splitter='best')
2025-09-02 19:03:26,437:INFO:create_model() successfully completed......................................
2025-09-02 19:03:26,564:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:26,565:INFO:Creating metrics dataframe
2025-09-02 19:03:26,570:INFO:Initializing SVM - Linear Kernel
2025-09-02 19:03:26,570:INFO:Total runtime is 0.11035038630167643 minutes
2025-09-02 19:03:26,575:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:26,575:INFO:Initializing create_model()
2025-09-02 19:03:26,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:26,575:INFO:Checking exceptions
2025-09-02 19:03:26,575:INFO:Importing libraries
2025-09-02 19:03:26,575:INFO:Copying training dataset
2025-09-02 19:03:26,581:INFO:Defining folds
2025-09-02 19:03:26,581:INFO:Declaring metric variables
2025-09-02 19:03:26,584:INFO:Importing untrained model
2025-09-02 19:03:26,595:INFO:SVM - Linear Kernel Imported successfully
2025-09-02 19:03:26,601:INFO:Starting cross validation
2025-09-02 19:03:26,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:26,649:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,648:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,658:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,659:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,659:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,662:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,663:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,666:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,694:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,698:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,701:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,701:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,702:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,704:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,705:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,705:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,708:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,710:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,712:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,713:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,735:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,737:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,739:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,745:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,746:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,747:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,748:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,749:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,750:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,760:INFO:Calculating mean and std
2025-09-02 19:03:26,761:INFO:Creating metrics dataframe
2025-09-02 19:03:26,763:INFO:Uploading results into container
2025-09-02 19:03:26,764:INFO:Uploading model into container now
2025-09-02 19:03:26,764:INFO:_master_model_container: 5
2025-09-02 19:03:26,764:INFO:_display_container: 2
2025-09-02 19:03:26,765:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3680, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-02 19:03:26,765:INFO:create_model() successfully completed......................................
2025-09-02 19:03:26,891:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:26,891:INFO:Creating metrics dataframe
2025-09-02 19:03:26,896:INFO:Initializing Ridge Classifier
2025-09-02 19:03:26,897:INFO:Total runtime is 0.11579116185506184 minutes
2025-09-02 19:03:26,899:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:26,901:INFO:Initializing create_model()
2025-09-02 19:03:26,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:26,901:INFO:Checking exceptions
2025-09-02 19:03:26,901:INFO:Importing libraries
2025-09-02 19:03:26,901:INFO:Copying training dataset
2025-09-02 19:03:26,907:INFO:Defining folds
2025-09-02 19:03:26,907:INFO:Declaring metric variables
2025-09-02 19:03:26,911:INFO:Importing untrained model
2025-09-02 19:03:26,917:INFO:Ridge Classifier Imported successfully
2025-09-02 19:03:26,929:INFO:Starting cross validation
2025-09-02 19:03:26,933:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:26,970:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.66936e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:03:26,970:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.98705e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:03:26,983:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.33574e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:03:26,983:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.18633e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:03:26,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,991:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,991:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,995:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,995:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,999:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:26,999:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,002:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,002:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,008:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,012:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,018:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.82355e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:03:27,019:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.54977e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:03:27,034:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,034:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,035:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.49318e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:03:27,036:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.49908e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:03:27,037:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,037:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,041:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,042:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,051:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,052:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,055:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,058:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,059:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,061:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,064:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.63138e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:03:27,065:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.85484e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-09-02 19:03:27,076:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,078:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,078:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,079:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,080:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,081:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,087:INFO:Calculating mean and std
2025-09-02 19:03:27,089:INFO:Creating metrics dataframe
2025-09-02 19:03:27,093:INFO:Uploading results into container
2025-09-02 19:03:27,094:INFO:Uploading model into container now
2025-09-02 19:03:27,094:INFO:_master_model_container: 6
2025-09-02 19:03:27,094:INFO:_display_container: 2
2025-09-02 19:03:27,094:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3680, solver='auto',
                tol=0.0001)
2025-09-02 19:03:27,094:INFO:create_model() successfully completed......................................
2025-09-02 19:03:27,221:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:27,221:INFO:Creating metrics dataframe
2025-09-02 19:03:27,228:INFO:Initializing Random Forest Classifier
2025-09-02 19:03:27,228:INFO:Total runtime is 0.12131488720575968 minutes
2025-09-02 19:03:27,232:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:27,232:INFO:Initializing create_model()
2025-09-02 19:03:27,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:27,232:INFO:Checking exceptions
2025-09-02 19:03:27,232:INFO:Importing libraries
2025-09-02 19:03:27,232:INFO:Copying training dataset
2025-09-02 19:03:27,238:INFO:Defining folds
2025-09-02 19:03:27,239:INFO:Declaring metric variables
2025-09-02 19:03:27,246:INFO:Importing untrained model
2025-09-02 19:03:27,250:INFO:Random Forest Classifier Imported successfully
2025-09-02 19:03:27,263:INFO:Starting cross validation
2025-09-02 19:03:27,264:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:27,655:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,656:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,656:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,659:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,659:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,659:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,661:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,662:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,662:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,669:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,675:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,678:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,963:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,966:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,970:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,979:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,982:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,986:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,996:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,996:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,999:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:27,999:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,002:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,003:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,215:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,218:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,218:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,224:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,238:INFO:Calculating mean and std
2025-09-02 19:03:28,240:INFO:Creating metrics dataframe
2025-09-02 19:03:28,242:INFO:Uploading results into container
2025-09-02 19:03:28,242:INFO:Uploading model into container now
2025-09-02 19:03:28,243:INFO:_master_model_container: 7
2025-09-02 19:03:28,243:INFO:_display_container: 2
2025-09-02 19:03:28,243:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3680, verbose=0,
                       warm_start=False)
2025-09-02 19:03:28,243:INFO:create_model() successfully completed......................................
2025-09-02 19:03:28,367:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:28,367:INFO:Creating metrics dataframe
2025-09-02 19:03:28,377:INFO:Initializing Quadratic Discriminant Analysis
2025-09-02 19:03:28,377:INFO:Total runtime is 0.14047534068425496 minutes
2025-09-02 19:03:28,380:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:28,380:INFO:Initializing create_model()
2025-09-02 19:03:28,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:28,381:INFO:Checking exceptions
2025-09-02 19:03:28,381:INFO:Importing libraries
2025-09-02 19:03:28,382:INFO:Copying training dataset
2025-09-02 19:03:28,390:INFO:Defining folds
2025-09-02 19:03:28,390:INFO:Declaring metric variables
2025-09-02 19:03:28,392:INFO:Importing untrained model
2025-09-02 19:03:28,398:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-02 19:03:28,410:INFO:Starting cross validation
2025-09-02 19:03:28,413:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:28,463:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,465:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,466:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,470:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,472:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,473:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,477:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,480:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,481:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,487:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,487:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,491:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,511:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,513:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,514:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,516:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,518:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,520:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,527:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,530:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,533:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,533:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,538:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,542:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,557:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,558:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,560:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,560:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,562:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,563:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,582:INFO:Calculating mean and std
2025-09-02 19:03:28,583:INFO:Creating metrics dataframe
2025-09-02 19:03:28,584:INFO:Uploading results into container
2025-09-02 19:03:28,586:INFO:Uploading model into container now
2025-09-02 19:03:28,588:INFO:_master_model_container: 8
2025-09-02 19:03:28,588:INFO:_display_container: 2
2025-09-02 19:03:28,589:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-02 19:03:28,589:INFO:create_model() successfully completed......................................
2025-09-02 19:03:28,713:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:28,713:INFO:Creating metrics dataframe
2025-09-02 19:03:28,720:INFO:Initializing Ada Boost Classifier
2025-09-02 19:03:28,720:INFO:Total runtime is 0.14618701934814454 minutes
2025-09-02 19:03:28,723:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:28,724:INFO:Initializing create_model()
2025-09-02 19:03:28,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:28,724:INFO:Checking exceptions
2025-09-02 19:03:28,724:INFO:Importing libraries
2025-09-02 19:03:28,724:INFO:Copying training dataset
2025-09-02 19:03:28,730:INFO:Defining folds
2025-09-02 19:03:28,730:INFO:Declaring metric variables
2025-09-02 19:03:28,733:INFO:Importing untrained model
2025-09-02 19:03:28,741:INFO:Ada Boost Classifier Imported successfully
2025-09-02 19:03:28,749:INFO:Starting cross validation
2025-09-02 19:03:28,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:28,781:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:03:28,784:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:03:28,785:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:03:28,811:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:03:28,984:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,988:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,990:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,991:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,991:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,993:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,994:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,996:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:28,997:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,012:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:03:29,018:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:03:29,019:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:03:29,026:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,029:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,032:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,052:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:03:29,220:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,220:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,223:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,227:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,230:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,244:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:03:29,248:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-02 19:03:29,251:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,255:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,257:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,385:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,388:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,390:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,390:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,392:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,394:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:29,410:INFO:Calculating mean and std
2025-09-02 19:03:29,411:INFO:Creating metrics dataframe
2025-09-02 19:03:29,414:INFO:Uploading results into container
2025-09-02 19:03:29,418:INFO:Uploading model into container now
2025-09-02 19:03:29,419:INFO:_master_model_container: 9
2025-09-02 19:03:29,419:INFO:_display_container: 2
2025-09-02 19:03:29,419:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3680)
2025-09-02 19:03:29,419:INFO:create_model() successfully completed......................................
2025-09-02 19:03:29,543:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:29,543:INFO:Creating metrics dataframe
2025-09-02 19:03:29,551:INFO:Initializing Gradient Boosting Classifier
2025-09-02 19:03:29,551:INFO:Total runtime is 0.1600367267926534 minutes
2025-09-02 19:03:29,554:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:29,554:INFO:Initializing create_model()
2025-09-02 19:03:29,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:29,554:INFO:Checking exceptions
2025-09-02 19:03:29,554:INFO:Importing libraries
2025-09-02 19:03:29,554:INFO:Copying training dataset
2025-09-02 19:03:29,560:INFO:Defining folds
2025-09-02 19:03:29,560:INFO:Declaring metric variables
2025-09-02 19:03:29,563:INFO:Importing untrained model
2025-09-02 19:03:29,572:INFO:Gradient Boosting Classifier Imported successfully
2025-09-02 19:03:29,579:INFO:Starting cross validation
2025-09-02 19:03:29,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:30,107:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,109:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,112:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,136:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,139:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,142:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,142:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,145:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,148:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,150:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,152:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,155:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,636:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,640:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,642:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,668:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,671:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,672:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,673:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,674:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,677:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,691:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,693:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:30,695:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,072:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,075:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,077:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,097:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,099:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,101:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,112:INFO:Calculating mean and std
2025-09-02 19:03:31,113:INFO:Creating metrics dataframe
2025-09-02 19:03:31,114:INFO:Uploading results into container
2025-09-02 19:03:31,114:INFO:Uploading model into container now
2025-09-02 19:03:31,115:INFO:_master_model_container: 10
2025-09-02 19:03:31,115:INFO:_display_container: 2
2025-09-02 19:03:31,115:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3680, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-02 19:03:31,115:INFO:create_model() successfully completed......................................
2025-09-02 19:03:31,237:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:31,237:INFO:Creating metrics dataframe
2025-09-02 19:03:31,247:INFO:Initializing Linear Discriminant Analysis
2025-09-02 19:03:31,247:INFO:Total runtime is 0.1883046785990397 minutes
2025-09-02 19:03:31,252:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:31,252:INFO:Initializing create_model()
2025-09-02 19:03:31,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:31,252:INFO:Checking exceptions
2025-09-02 19:03:31,252:INFO:Importing libraries
2025-09-02 19:03:31,252:INFO:Copying training dataset
2025-09-02 19:03:31,258:INFO:Defining folds
2025-09-02 19:03:31,259:INFO:Declaring metric variables
2025-09-02 19:03:31,266:INFO:Importing untrained model
2025-09-02 19:03:31,270:INFO:Linear Discriminant Analysis Imported successfully
2025-09-02 19:03:31,279:INFO:Starting cross validation
2025-09-02 19:03:31,281:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:31,332:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,332:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,332:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,335:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,335:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,338:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,338:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,354:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,363:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,366:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,376:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,381:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,384:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,384:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,387:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,388:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,390:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,391:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,396:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,409:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,413:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,416:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,420:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,422:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,423:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,424:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,425:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,426:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,439:INFO:Calculating mean and std
2025-09-02 19:03:31,440:INFO:Creating metrics dataframe
2025-09-02 19:03:31,445:INFO:Uploading results into container
2025-09-02 19:03:31,446:INFO:Uploading model into container now
2025-09-02 19:03:31,447:INFO:_master_model_container: 11
2025-09-02 19:03:31,447:INFO:_display_container: 2
2025-09-02 19:03:31,447:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-02 19:03:31,447:INFO:create_model() successfully completed......................................
2025-09-02 19:03:31,569:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:31,569:INFO:Creating metrics dataframe
2025-09-02 19:03:31,577:INFO:Initializing Extra Trees Classifier
2025-09-02 19:03:31,577:INFO:Total runtime is 0.19380647341410318 minutes
2025-09-02 19:03:31,582:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:31,582:INFO:Initializing create_model()
2025-09-02 19:03:31,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:31,582:INFO:Checking exceptions
2025-09-02 19:03:31,582:INFO:Importing libraries
2025-09-02 19:03:31,582:INFO:Copying training dataset
2025-09-02 19:03:31,588:INFO:Defining folds
2025-09-02 19:03:31,588:INFO:Declaring metric variables
2025-09-02 19:03:31,591:INFO:Importing untrained model
2025-09-02 19:03:31,600:INFO:Extra Trees Classifier Imported successfully
2025-09-02 19:03:31,623:INFO:Starting cross validation
2025-09-02 19:03:31,624:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:31,854:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,857:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,857:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,859:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,861:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,864:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,871:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,874:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,879:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,932:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,935:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:31,938:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,072:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,075:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,079:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,090:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,093:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,096:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,133:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,137:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,140:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,196:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,199:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,202:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,271:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,273:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,277:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,301:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,304:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,306:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,313:INFO:Calculating mean and std
2025-09-02 19:03:32,314:INFO:Creating metrics dataframe
2025-09-02 19:03:32,316:INFO:Uploading results into container
2025-09-02 19:03:32,316:INFO:Uploading model into container now
2025-09-02 19:03:32,317:INFO:_master_model_container: 12
2025-09-02 19:03:32,317:INFO:_display_container: 2
2025-09-02 19:03:32,318:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3680, verbose=0,
                     warm_start=False)
2025-09-02 19:03:32,319:INFO:create_model() successfully completed......................................
2025-09-02 19:03:32,444:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:32,444:INFO:Creating metrics dataframe
2025-09-02 19:03:32,452:INFO:Initializing Light Gradient Boosting Machine
2025-09-02 19:03:32,452:INFO:Total runtime is 0.2083821654319763 minutes
2025-09-02 19:03:32,454:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:32,455:INFO:Initializing create_model()
2025-09-02 19:03:32,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:32,455:INFO:Checking exceptions
2025-09-02 19:03:32,455:INFO:Importing libraries
2025-09-02 19:03:32,455:INFO:Copying training dataset
2025-09-02 19:03:32,462:INFO:Defining folds
2025-09-02 19:03:32,462:INFO:Declaring metric variables
2025-09-02 19:03:32,465:INFO:Importing untrained model
2025-09-02 19:03:32,472:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-02 19:03:32,485:INFO:Starting cross validation
2025-09-02 19:03:32,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:32,731:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,735:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,740:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,751:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,755:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,760:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,761:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,764:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,768:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,775:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,779:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:32,782:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,002:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,007:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,011:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,013:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,016:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,020:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,026:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,030:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,034:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,076:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,078:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,081:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,190:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,193:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,196:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,200:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,203:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,206:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,218:INFO:Calculating mean and std
2025-09-02 19:03:33,219:INFO:Creating metrics dataframe
2025-09-02 19:03:33,225:INFO:Uploading results into container
2025-09-02 19:03:33,225:INFO:Uploading model into container now
2025-09-02 19:03:33,226:INFO:_master_model_container: 13
2025-09-02 19:03:33,226:INFO:_display_container: 2
2025-09-02 19:03:33,227:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3680, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-02 19:03:33,227:INFO:create_model() successfully completed......................................
2025-09-02 19:03:33,368:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:33,369:INFO:Creating metrics dataframe
2025-09-02 19:03:33,380:INFO:Initializing Dummy Classifier
2025-09-02 19:03:33,381:INFO:Total runtime is 0.22387667099634803 minutes
2025-09-02 19:03:33,384:INFO:SubProcess create_model() called ==================================
2025-09-02 19:03:33,385:INFO:Initializing create_model()
2025-09-02 19:03:33,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021B8FCF66E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:33,385:INFO:Checking exceptions
2025-09-02 19:03:33,385:INFO:Importing libraries
2025-09-02 19:03:33,385:INFO:Copying training dataset
2025-09-02 19:03:33,392:INFO:Defining folds
2025-09-02 19:03:33,393:INFO:Declaring metric variables
2025-09-02 19:03:33,396:INFO:Importing untrained model
2025-09-02 19:03:33,400:INFO:Dummy Classifier Imported successfully
2025-09-02 19:03:33,444:INFO:Starting cross validation
2025-09-02 19:03:33,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-02 19:03:33,495:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,497:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,498:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,500:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:03:33,501:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,502:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:03:33,508:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,509:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,513:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,534:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,537:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,516:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,548:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:03:33,548:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:03:33,550:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,550:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,553:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,557:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:03:33,560:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,577:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,582:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,583:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:03:33,585:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,598:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,601:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,602:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:03:33,607:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,609:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,611:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,614:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,615:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,615:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:03:33,616:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:03:33,617:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,618:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,623:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,625:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,626:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-02 19:03:33,627:WARNING:c:\Users\nguye\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-02 19:03:33,639:INFO:Calculating mean and std
2025-09-02 19:03:33,641:INFO:Creating metrics dataframe
2025-09-02 19:03:33,644:INFO:Uploading results into container
2025-09-02 19:03:33,645:INFO:Uploading model into container now
2025-09-02 19:03:33,645:INFO:_master_model_container: 14
2025-09-02 19:03:33,645:INFO:_display_container: 2
2025-09-02 19:03:33,645:INFO:DummyClassifier(constant=None, random_state=3680, strategy='prior')
2025-09-02 19:03:33,645:INFO:create_model() successfully completed......................................
2025-09-02 19:03:33,776:INFO:SubProcess create_model() end ==================================
2025-09-02 19:03:33,776:INFO:Creating metrics dataframe
2025-09-02 19:03:33,794:INFO:Initializing create_model()
2025-09-02 19:03:33,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3680), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:33,794:INFO:Checking exceptions
2025-09-02 19:03:33,796:INFO:Importing libraries
2025-09-02 19:03:33,796:INFO:Copying training dataset
2025-09-02 19:03:33,800:INFO:Defining folds
2025-09-02 19:03:33,800:INFO:Declaring metric variables
2025-09-02 19:03:33,801:INFO:Importing untrained model
2025-09-02 19:03:33,801:INFO:Declaring custom model
2025-09-02 19:03:33,801:INFO:Ada Boost Classifier Imported successfully
2025-09-02 19:03:33,801:INFO:Cross validation set to False
2025-09-02 19:03:33,802:INFO:Fitting Model
2025-09-02 19:03:33,963:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3680)
2025-09-02 19:03:33,963:INFO:create_model() successfully completed......................................
2025-09-02 19:03:34,129:INFO:_master_model_container: 14
2025-09-02 19:03:34,129:INFO:_display_container: 2
2025-09-02 19:03:34,129:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3680)
2025-09-02 19:03:34,129:INFO:compare_models() successfully completed......................................
2025-09-02 19:03:34,129:INFO:Initializing create_model()
2025-09-02 19:03:34,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021B8D5931C0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-02 19:03:34,130:INFO:Checking exceptions
2025-09-02 19:09:59,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 19:09:59,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 19:09:59,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-02 19:09:59,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-03 15:17:44,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-03 15:17:44,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-03 15:17:44,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-03 15:17:44,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
